+ echo 'Beginning trial 3 of 5'
Beginning trial 3 of 5
+ srun -N1 -n1 --container-name=single_stage_detector python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.SSD)'
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
:::MLLOG {"namespace": "", "time_ms": 1593100346841, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "ssd", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 75}}
:::MLLOG {"namespace": "", "time_ms": 1593100346848, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "NVIDIA", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 80}}
:::MLLOG {"namespace": "", "time_ms": 1593100346848, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 84}}
:::MLLOG {"namespace": "", "time_ms": 1593100346848, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 88}}
:::MLLOG {"namespace": "", "time_ms": 1593100346848, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "64xNVIDIA DGX-2H", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 92}}
+ '[' 1 -eq 1 ']'
+ srun --ntasks=64 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n038
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n046
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n093
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n085
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n030
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n054
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n056
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n073
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n091
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n081
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n037
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n088
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n051
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n041
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n045
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n031
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n042
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n052
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n087
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n040
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n060
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n065
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n035
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n067
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n039
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n076
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n069
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n086
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n057
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n047
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n036
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n064
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n066
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n034
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n075
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n077
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n048
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n068
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n032
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n050
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n083
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n079
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n062
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n089
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n071
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n053
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n084
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n074
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n063
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n082
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n072
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n090
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n059
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n080
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n043
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n033
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n078
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n061
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n092
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n055
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n049
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n058
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n044
vm.drop_caches = 3
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
Clearing cache on circe-n029
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
+ srun --ntasks=64 --container-name=single_stage_detector python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import log_event
log_event(key=constants.CACHE_CLEAR, value=True)'
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
:::MLLOG {"namespace": "", "time_ms": 1593100353684, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ srun --mpi=pmix --ntasks=1024 --ntasks-per-node=16 --container-name=single_stage_detector --container-mounts=/raid/datasets/coco/coco-2017:/data,/gpfs/fs1/svcnvdlfw/14238152/results:/results,/raid/datasets/coco/coco-2017/coco2017/models:/pretrained/mxnet ./run_and_time.sh
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 4 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 8 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 5 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 2 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 10 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 7 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 7 ']'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 6 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 13 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 5 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 14 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 15 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 7 ']'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 4 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ NUMEPOCHS=80
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ NUMEPOCHS=80
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 0 ']'
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ '[' -n 4 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 1 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ cluster=
+ '[' -n 14 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 2 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 1 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 3 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ '[' -n 14 ']'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 5 ']'
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 8 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 1 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 14 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 15 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ '[' -n 13 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 13 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
running benchmark
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ '[' -n 10 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ cluster=
+ '[' -n 9 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 0 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 11 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 6 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 5 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ '[' -n 1 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 9 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 7 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ '[' -n 11 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 15 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 5 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 1 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 6 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 14 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 0 ']'
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 2 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ '[' -n 6 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 4 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 14 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 15 ']'
+ '[' -n 15 ']'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 1 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 6 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 12 ']'
running benchmark
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 3 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 9 ']'
running benchmark
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 10 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 11 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ '[' -n 1 ']'
running benchmark
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
running benchmark
+ '[' -n 9 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 5 ']'
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=circe
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 15 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ NUMEPOCHS=80
+ '[' -n 2 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 5 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 13 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 7 ']'
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ '[' -n 12 ']'
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 13 ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 14 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 14 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 11 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 0 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 12 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ '[' -n 3 ']'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 6 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 1 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 9 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 15 ']'
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ declare -a CMD
+ '[' -n 13 ']'
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 1 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
running benchmark
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ '[' -n 1 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 12 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 12 ']'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 9 ']'
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 1 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ '[' -n 8 ']'
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 7 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 6 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=circe
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 11 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 5 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
running benchmark
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 3 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 11 ']'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ '[' -n 14 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 4 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 13 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 4 ']'
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 0 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 8 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 14 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 13 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 10 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 4 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 3 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' 1024 -gt 64 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 12 ']'
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 9 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ '[' -n 9 ']'
running benchmark
+ '[' -n 1 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ cluster=circe
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 6 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ '[' -n 2 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 2 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 15 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ '[' -n 8 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
running benchmark
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 11 ']'
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 14 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ '[' -n 5 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 7 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 6 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 10 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 9 ']'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 13 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 4 ']'
+ '[' -n 6 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 12 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 11 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 8 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 11 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 14 ']'
+ '[' -n 2 ']'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 5 ']'
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
running benchmark
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 3 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 15 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 12 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ declare -a CMD
+ '[' -n 7 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 15 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 12 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 5 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 0 ']'
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 4 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 5 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 6 ']'
running benchmark
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ '[' -n 8 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' -n 1 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 2 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 2 ']'
running benchmark
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
running benchmark
+ declare -a CMD
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' -n 15 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' -n 10 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 5 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ '[' -n 6 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
running benchmark
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 1 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 5 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ '[' -n 9 ']'
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
running benchmark
+ '[' -n 11 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 14 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 7 ']'
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 6 ']'
running benchmark
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 11 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 13 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ '[' -n 9 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ NUMEPOCHS=80
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 3 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
running benchmark
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 12 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 8 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 0 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
running benchmark
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 4 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ NUMEPOCHS=80
+ declare -a CMD
+ '[' -n 2 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 9 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ '[' -n 1 ']'
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 4 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 10 ']'
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 10 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 11 ']'
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 6 ']'
running benchmark
+ '[' -n 0 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 13 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 2 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
running benchmark
+ '[' -n 15 ']'
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 14 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 13 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 10 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' -n 7 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 11 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 14 ']'
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 0 ']'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 15 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ '[' -n 0 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ '[' -n 1 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 7 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ NUMEPOCHS=80
+ declare -a CMD
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 9 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 15 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 2 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 12 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' -n 4 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 8 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 13 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 4 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 5 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 4 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 9 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 7 ']'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 15 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 1 ']'
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 3 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ '[' -n 5 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 11 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 5 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 14 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 13 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 10 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 9 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 0 ']'
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 11 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 4 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ '[' -n 12 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 3 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ '[' -n 1 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 0 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ '[' -n 15 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ NUMEPOCHS=80
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 10 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 2 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' -n 12 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 8 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' -n 4 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ '[' -n 8 ']'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 13 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 1 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 10 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 1 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ '[' -n 14 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 12 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 10 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' -n 7 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
running benchmark
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 15 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 13 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 4 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 11 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 5 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 13 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 10 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 4 ']'
running benchmark
+ declare -a CMD
running benchmark
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 0 ']'
+ declare -a CMD
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 9 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ declare -a CMD
+ '[' -n 4 ']'
running benchmark
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ '[' -n 9 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ '[' -n 2 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 12 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 1 ']'
running benchmark
+ NUMEPOCHS=80
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 15 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ '[' -n 5 ']'
+ declare -a CMD
running benchmark
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 15 ']'
+ '[' -n 10 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 4 ']'
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
running benchmark
+ '[' -n 2 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 0 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 2 ']'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 0 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
running benchmark
+ '[' -n 9 ']'
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' -n 8 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 0 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ '[' -n 13 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 8 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 8 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 4 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 3 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ declare -a CMD
+ '[' -n 13 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 8 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 11 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 1 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
running benchmark
+ '[' -n 7 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
running benchmark
+ declare -a CMD
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' 1024 -gt 64 ']'
running benchmark
+ declare -a CMD
+ cluster=
+ '[' -n 5 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 8 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
+ '[' -n 11 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
running benchmark
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 9 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' -n 5 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 15 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ '[' -n 9 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 3 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 14 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 15 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ '[' -n 4 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 13 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 10 ']'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 5 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' -n 7 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 9 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 12 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ '[' -n 11 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 8 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' -n 3 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ '[' -n 10 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 1 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ NUMEPOCHS=80
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 14 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 13 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 1 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 13 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 0 ']'
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 10 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 4 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 4 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ declare -a CMD
running benchmark
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:52:37 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
:::MLLOG {"namespace": "", "time_ms": 1593100360978, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360979, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360978, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360978, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360979, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360979, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360979, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360979, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360979, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360979, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360979, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360980, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360981, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360981, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360987, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360987, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360987, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360987, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360987, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360981, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360981, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360981, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360981, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360981, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360988, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360981, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360981, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360981, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360981, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360982, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360988, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360988, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360988, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360988, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360988, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360984, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360988, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360988, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360988, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360984, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360984, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360984, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360984, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360984, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360986, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360986, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360986, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360986, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360986, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360986, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360986, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360986, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360986, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360985, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360986, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360994, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360996, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360995, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360997, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360998, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361000, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100360999, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361078, "event_type": "POINT_IN_TIME", "key": "sgd", "value": 1459684514, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 193}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361002, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361008, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361008, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361003, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361010, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361008, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361010, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361008, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361004, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361008, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361005, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361007, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361006, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361018, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361018, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361008, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361017, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361017, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361020, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361020, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361017, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361017, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361018, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361021, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361021, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361018, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361018, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361019, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361021, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361019, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361019, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361019, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361020, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361021, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361021, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361021, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361021, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361018, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361024, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361024, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361041, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361041, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361041, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100361041, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100362166, "event_type": "POINT_IN_TIME", "key": "seed", "value": 1459684514, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 218}}
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684514, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684514, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1459684514
Seed: 1459684514
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn group: 8
bn group: 8
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI global rank: 0
MPI global rank: 0
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684530, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684530, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1459684530
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459684530
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 16
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 16
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684562, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684562, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1459684562
Seed: 1459684562
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684546, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684546, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 48
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 48
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684546
Seed: 1459684546
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 32
MPI global rank: 32
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684626, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684626, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684626
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684610, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
Seed: 1459684626
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684610, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684610
Seed: 1459684610
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 112
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 112
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 96
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 96
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684594, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684594, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684594
Seed: 1459684594
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684738, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684754, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684754, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684578, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684738, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684754
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685010, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459684754
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685522, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 80
MPI global rank: 80
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684738
Seed: 1459684738
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685266, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684578, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685010, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685522, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685266, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684578
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685010
Seed: 1459685010
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459684578
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685522
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685266
Seed: 1459685266
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459685522
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684706, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 224
MPI global rank: 224
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684690, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 240
MPI global rank: 240
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684706, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 752
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684722, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 752
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684690, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684994, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684706
Seed: 1459684706
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684994, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684722, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 496
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684690
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685506, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685250, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 496
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459684690
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684994
Seed: 1459684994
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684722
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685506, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684674, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685250, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
Seed: 1459684722
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 64
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685506
Seed: 1459685506
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684674, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
MPI global rank: 64
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 1008
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685250
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459685250
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 1008
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684674
Seed: 1459684674
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684978, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 192
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 192
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684962, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684978, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685234, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684658, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685218, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684962, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684978
Seed: 1459684978
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685490, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685234, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684658, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685474, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685218, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 480
MPI global rank: 480
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 992
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685490, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685138, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684882, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685234
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 992
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 160
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684658
Seed: 1459684658
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685474, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685218
Seed: 1459685218
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685394, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
Seed: 1459685234
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 160
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684962
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685490
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684642, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685138, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684882, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 176
MPI global rank: 176
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459684962
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685202, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 208
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459685490
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685474
Seed: 1459685474
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685394, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684930, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684946, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 208
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685186, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684642, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685138
Seed: 1459685138
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684882
Seed: 1459684882
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685458, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685202, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685442, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685394
Seed: 1459685394
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684930, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684946, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 736
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685186, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684642
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685458, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685202
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 736
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685442, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
Seed: 1459684642
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684930
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684946
Seed: 1459684946
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459685202
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685106, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685186
Seed: 1459685186
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685458
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459684930
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684818, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685442
Seed: 1459685442
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685074, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459685458
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685122, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685330, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685106, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684850, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685378, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685154, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684818, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684866, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685122, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684898, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685330, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 464
MPI global rank: 464
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685106
Seed: 1459685106
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685410, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684850, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684834, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684914, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685378, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685154, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684818
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685170, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685426, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684866, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 960
MPI global rank: 960
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685090, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685362, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685074, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685346, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685122
Seed: 1459685122
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684898, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685058, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685330
Seed: 1459685330
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459684818
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685410, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684802, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684850
Seed: 1459684850
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 720
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684834, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684914, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685378
Seed: 1459685378
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685170, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685426, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684866
Seed: 1459684866
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685090, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685074
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 720
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685346, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685314, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459684898
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685058, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 144
MPI global rank: 144
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685154
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 976
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1459685410
Seed: 1459685410
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 672
MPI global rank: 672
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684802, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685362, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
Seed: 1459685074
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Seed: 1459684898
INFO:root:Seed: 1459684834
bn group: 8
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:bn group: 8
bn group: 8
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:Seed: 1459684914
Seed: 1459684914
precision: fp16
[SSD] fuse bn relu: True
Seed: 1459685154
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:loss scaling: 128.0
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:Seed: 1459685170
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 976
INFO:root:Seed: 1459685426
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:precision: fp16
precision: fp16
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
fuse bn add relu: True
INFO:root:MPI global rank: 704
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1459685090
Seed: 1459685090
INFO:root:precision: fp16
MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
MPI size: 1024
INFO:root:precision: fp16
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:async validation: True
INFO:root:Seed: 1459685346
Seed: 1459685346
INFO:root:precision: fp16
precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685314, start_epoch=1, synthetic=Falseloss scaling: 128.0
INFO:root:precision: fp16
precision: fp16
Seed: 1459684834
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:Seed: 1459685058
Seed: 1459685058
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
INFO:root:precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1459685170
INFO:root:fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
Seed: 1459685426
INFO:root:fuse bn add relu: True
INFO:root:loss scaling: 128.0
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:bn group: 8
MPI global rank: 704
INFO:root:Seed: 1459684802
Seed: 1459684802
precision: fp16
INFO:root:loss scaling: 128.0
INFO:root:MPI global rank: 624
MPI global rank: 624
INFO:root:Seed: 1459685362
Seed: 1459685362
INFO:root:MPI global rank: 368
MPI global rank: 368
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:loss scaling: 128.0
INFO:root:precision: fp16
precision: fp16
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI size: 1024
INFO:root:precision: fp16
precision: fp16
bn all reduce fp16: False
INFO:root:async validation: True
async validation: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:fuse bn relu: True
fuse bn relu: True
[SSD] fuse bn add relu: True
precision: fp16
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684786, start_epoch=1, synthnetwork name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685298, start_epoch=1, synth[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:precision: fp16
fuse bn relu: True
INFO:root:async validation: True
INFO:root:precision: fp16
fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
INFO:root:MPI global rank: 928
MPI global rank: 928
bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:precision: fp16
precision: fp16
loss scaling: 128.0
INFO:root:MPI local rank: 0
INFO:root:precision: fp16
INFO:root:MPI local rank: 0
INFO:root:loss scaling: 128.0
INFO:root:fuse bn relu: True
INFO:root:MPI global rank: 880
MPI global rank: 880
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:Seed: 1459685314
Seed: 1459685314
INFO:root:precision: fp16
precision: fp16
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:loss scaling: 128.0
INFO:root:MPI global rank: 416
MPI size: 1024
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685042, start_epoch=1, synthINFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
INFO:root:MPI global rank: 688
MPI global rank: 688
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
INFO:root:loss scaling: 128.0
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:fuse bn relu: True
INFO:root:fuse bn relu: True
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
precision: fp16
INFO:root:fuse bn add relu: True
async validation: True
precision: fp16
INFO:root:bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:MPI local rank: 0
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684770, start_epoch=1, synthINFO:root:bn all reduce fp16: False
INFO:root:async validation: True
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
precision: fp16
MPI local rank: 0
loss scaling: 128.0
fuse bn relu: True
INFO:root:MPI local rank: 0
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685026, start_epoch=1, synthINFO:root:fuse bn relu: True
INFO:root:loss scaling: 128.0
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
MPI global rank: 416
INFO:root:MPI global rank: 448
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:fuse bn relu: True
INFO:root:bn group: 8
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685282, start_epoch=1, synth[SSD] bn group: 8
loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684786, start_epoch=1, synthetic=Falsefuse bn relu: True
fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685298, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
INFO:root:loss scaling: 128.0
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:loss scaling: 128.0
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
bn all reduce fp16: False
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
async validation: True
INFO:root:loss scaling: 128.0
INFO:root:async validation: True
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
MPI local rank: 0
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
fuse bn relu: True
loss scaling: 128.0
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
MPI local rank: 0
MPI global rank: 448
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685042, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 432
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
async validation: True
fuse bn relu: True
bn group: 8
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
[SSD] fuse bn add relu: True
loss scaling: 128.0
[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459684770, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
fuse bn relu: True
fuse bn add relu: True
INFO:root:async validation: True
async validation: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685026, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:fuse bn relu: True
INFO:root:async validation: True
async validation: True
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
MPI global rank: 432
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1459685282, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
INFO:root:Seed: 1459684786
Seed: 1459684786
fuse bn add relu: True
INFO:root:bn group: 8
INFO:root:Seed: 1459685298
Seed: 1459685298
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:fuse bn add relu: True
fuse bn add relu: True
fuse bn relu: True
MPI local rank: 0
INFO:root:fuse bn relu: True
INFO:root:Seed: 1459685042
Seed: 1459685042
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:bn group: 8
bn group: 8
bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
fuse bn relu: True
INFO:root:precision: fp16
INFO:root:bn group: 8
bn group: 8
bn group: 8
INFO:root:precision: fp16
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 352
INFO:root:fuse bn add relu: True
fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:Seed: 1459684770
INFO:root:MPI global rank: 128
[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:bn group: 8
bn group: 8
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:async validation: True
fuse bn relu: True
INFO:root:precision: fp16
INFO:root:async validation: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
INFO:root:Seed: 1459685282
precision: fp16
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
precision: fp16
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
MPI global rank: 352
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1459684770
MPI global rank: 128
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
bn group: 8
INFO:root:bn group: 8
bn group: 8
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
bn group: 8
INFO:root:bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:Seed: 1459685026
Seed: 1459685026
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI size: 1024
INFO:root:bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
precision: fp16
async validation: True
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
MPI size: 1024
Seed: 1459685282
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:loss scaling: 128.0
INFO:root:loss scaling: 128.0
loss scaling: 128.0
fuse bn relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:precision: fp16
INFO:root:MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI global rank: 944
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:precision: fp16
precision: fp16
INFO:root:MPI size: 1024
INFO:root:bn group: 8
MPI size: 1024
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
INFO:root:bn group: 8
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI global rank: 864
INFO:root:precision: fp16
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
INFO:root:MPI global rank: 592
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
precision: fp16
MPI local rank: 0
[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
INFO:root:fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI global rank: 944
INFO:root:loss scaling: 128.0
MPI size: 1024
bn group: 8
INFO:root:MPI global rank: 608
MPI global rank: 608
INFO:root:MPI size: 1024
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 400
MPI global rank: 864
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 816
MPI global rank: 816
INFO:root:MPI global rank: 304
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn add relu: True
MPI global rank: 592
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
fuse bn add relu: True
INFO:root:async validation: True
async validation: True
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:loss scaling: 128.0
INFO:root:async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
MPI size: 1024
MPI size: 1024
fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:MPI global rank: 832
MPI global rank: 832
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
MPI size: 1024
INFO:root:MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
MPI global rank: 400
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:bn all reduce fp16: False
INFO:root:fuse bn relu: True
INFO:root:MPI local rank: 0
MPI global rank: 304
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:bn group: 8
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] fuse bn add relu: True
loss scaling: 128.0
async validation: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI global rank: 288
MPI global rank: 288
INFO:root:MPI global rank: 576
MPI global rank: 576
INFO:root:bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
MPI size: 1024
INFO:root:MPI global rank: 336
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
MPI local rank: 0
bn all reduce fp16: False
fuse bn relu: True
MPI local rank: 0
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:async validation: True
bn group: 8
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 896
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:MPI global rank: 560
MPI global rank: 336
INFO:root:async validation: True
INFO:root:fuse bn relu: True
INFO:root:async validation: True
async validation: True
INFO:root:MPI global rank: 800
MPI local rank: 0
INFO:root:MPI global rank: 384
INFO:root:MPI global rank: 320
INFO:root:[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:async validation: True
INFO:root:async validation: True
INFO:root:loss scaling: 128.0
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI global rank: 640
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:async validation: True
INFO:root:async validation: True
fuse bn add relu: True
async validation: True
async validation: True
MPI global rank: 640
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:bn group: 8
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:async validation: True
async validation: True
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
INFO:root:[SSD] bn group: 8
bn group: 8
[SSD] bn group: 8
bn group: 8
INFO:root:bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
async validation: True
bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:MPI size: 1024
INFO:root:MPI size: 1024
MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] bn group: 8
INFO:root:MPI global rank: 768
INFO:root:MPI global rank: 272
MPI global rank: 272
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
MPI global rank: 768
INFO:root:MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
INFO:root:async validation: True
INFO:root:async validation: True
async validation: True
[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
INFO:root:MPI global rank: 784
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] bn group: 8
MPI global rank: 784
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:async validation: True
INFO:root:bn all reduce fp16: False
async validation: True
bn all reduce fp16: False
async validation: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
MPI size: 1024
[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 656
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 656
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 912
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
MPI global rank: 912
[SSD] fuse bn add relu: True
INFO:root:async validation: True
INFO:root:MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
async validation: True
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
async validation: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI global rank: 896
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:async validation: True
async validation: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn group: 8
bn group: 8
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 256
MPI global rank: 256
[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
INFO:root:async validation: True
[SSD] bn group: 8
[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
[SSD] fuse bn add relu: True
MPI global rank: 560
INFO:root:MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI global rank: 848
INFO:root:MPI local rank: 0
MPI local rank: 0
MPI local rank: 0
MPI global rank: 848
INFO:root:async validation: True
INFO:root:async validation: True
INFO:root:MPI local rank: 0
async validation: True
async validation: True
async validation: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:async validation: True
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
fuse bn add relu: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI size: 1024
MPI global rank: 800
[SSD] bn group: 8
MPI size: 1024
INFO:root:MPI global rank: 512
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
MPI local rank: 0
MPI global rank: 512
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
INFO:root:async validation: True
async validation: True
INFO:root:MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 384
[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 320
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 544
MPI global rank: 544
INFO:root:fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:async validation: True
async validation: True
INFO:root:bn group: 8
bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
[SSD] network: resnet34_v1
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 528
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI global rank: 528
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:async validation: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
async validation: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
:::MLLOG {"namespace": "", "time_ms": 1593100376718, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 363}}
:::MLLOG {"namespace": "", "time_ms": 1593100376718, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 364}}
INFO:root:COCO reader: raw images
COCO reader: raw images
:::MLLOG {"namespace": "", "time_ms": 1593100376719, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 1488, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 30}}
:::MLLOG {"namespace": "", "time_ms": 1593100376719, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 31}}
:::MLLOG {"namespace": "", "time_ms": 1593100376719, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.2925, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 36}}
:::MLLOG {"namespace": "", "time_ms": 1593100376720, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [60, 75], "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 37}}
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
:::MLLOG {"namespace": "", "time_ms": 1593100377719, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 5000, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 407}}
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
:::MLLOG {"namespace": "", "time_ms": 1593100381686, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 4e-05, "metadata": {"file": "/workspace/ssd/trainer.py", "lineno": 29}}
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:06] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:53:07] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
:::MLLOG {"namespace": "", "time_ms": 1593100420942, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 495}}
:::MLLOG {"namespace": "", "time_ms": 1593100421044, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 499}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1593100422498, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 16, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 101}}
:::MLLOG {"namespace": "", "time_ms": 1593100422498, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 2048, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 102}}
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1593100422499, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 1, "current_iter_num": 0}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:[Training][Epoch 1] training time: 1.306 [sec],avg speed: 94109.781 [imgs/sec],loss=17.521
[Training][Epoch 1] training time: 1.306 [sec],avg speed: 94109.781 [imgs/sec],loss=17.521
:::MLLOG {"namespace": "", "time_ms": 1593100423804, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1593100423805, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 2, "current_iter_num": 0}}
INFO:root:[Training][Iteration 100][Epoch 2, Batch 42/58] lr: 0.01966, training time: 18.358 [ms], speed: 111560.352 [imgs/sec], loss=7.935
[Training][Iteration 100][Epoch 2, Batch 42/58] lr: 0.01966, training time: 18.358 [ms], speed: 111560.352 [imgs/sec], loss=7.935
INFO:root:[Training][Epoch 2] training time: 1.081 [sec],avg speed: 113620.242 [imgs/sec],loss=10.234
[Training][Epoch 2] training time: 1.081 [sec],avg speed: 113620.242 [imgs/sec],loss=10.234
:::MLLOG {"namespace": "", "time_ms": 1593100424886, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1593100424887, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 3, "current_iter_num": 0}}
INFO:root:[Training][Epoch 3] training time: 1.112 [sec],avg speed: 110455.003 [imgs/sec],loss=8.725
[Training][Epoch 3] training time: 1.112 [sec],avg speed: 110455.003 [imgs/sec],loss=8.725
:::MLLOG {"namespace": "", "time_ms": 1593100425999, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1593100426000, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 4, "current_iter_num": 0}}
INFO:root:[Training][Iteration 200][Epoch 4, Batch 26/58] lr: 0.03931, training time: 18.880 [ms], speed: 108472.097 [imgs/sec], loss=11.104
[Training][Iteration 200][Epoch 4, Batch 26/58] lr: 0.03931, training time: 18.880 [ms], speed: 108472.097 [imgs/sec], loss=11.104
INFO:root:[Training][Epoch 4] training time: 1.116 [sec],avg speed: 110068.358 [imgs/sec],loss=8.468
[Training][Epoch 4] training time: 1.116 [sec],avg speed: 110068.358 [imgs/sec],loss=8.468
:::MLLOG {"namespace": "", "time_ms": 1593100427116, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1593100427117, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 5, "current_iter_num": 0}}
INFO:root:[Training][Epoch 5] training time: 1.097 [sec],avg speed: 111983.371 [imgs/sec],loss=7.512
[Training][Epoch 5] training time: 1.097 [sec],avg speed: 111983.371 [imgs/sec],loss=7.512
:::MLLOG {"namespace": "", "time_ms": 1593100428214, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1593100428215, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 6, "current_iter_num": 0}}
INFO:root:[Training][Iteration 300][Epoch 6, Batch 10/58] lr: 0.05897, training time: 17.877 [ms], speed: 114562.095 [imgs/sec], loss=7.908
[Training][Iteration 300][Epoch 6, Batch 10/58] lr: 0.05897, training time: 17.877 [ms], speed: 114562.095 [imgs/sec], loss=7.908
INFO:root:[Training][Epoch 6] training time: 1.040 [sec],avg speed: 118176.093 [imgs/sec],loss=7.334
[Training][Epoch 6] training time: 1.040 [sec],avg speed: 118176.093 [imgs/sec],loss=7.334
:::MLLOG {"namespace": "", "time_ms": 1593100429255, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1593100429255, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 7, "current_iter_num": 0}}
INFO:root:[Training][Epoch 7] training time: 0.702 [sec],avg speed: 116745.211 [imgs/sec],loss=7.097
[Training][Epoch 7] training time: 0.702 [sec],avg speed: 116745.211 [imgs/sec],loss=7.097
:::MLLOG {"namespace": "", "time_ms": 1593100429957, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1593100429957, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 8, "current_iter_num": 0}}
INFO:root:[Training][Epoch 8] training time: 1.029 [sec],avg speed: 119446.656 [imgs/sec],loss=6.877
[Training][Epoch 8] training time: 1.029 [sec],avg speed: 119446.656 [imgs/sec],loss=6.877
:::MLLOG {"namespace": "", "time_ms": 1593100430986, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1593100430986, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 9, "current_iter_num": 0}}
INFO:root:[Training][Iteration 500][Epoch 9, Batch 36/58] lr: 0.09829, training time: 17.609 [ms], speed: 116305.605 [imgs/sec], loss=8.462
[Training][Iteration 500][Epoch 9, Batch 36/58] lr: 0.09829, training time: 17.609 [ms], speed: 116305.605 [imgs/sec], loss=8.462
INFO:root:[Training][Epoch 9] training time: 1.034 [sec],avg speed: 118782.609 [imgs/sec],loss=6.962
[Training][Epoch 9] training time: 1.034 [sec],avg speed: 118782.609 [imgs/sec],loss=6.962
:::MLLOG {"namespace": "", "time_ms": 1593100432021, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1593100432021, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 10, "current_iter_num": 0}}
INFO:root:[Training][Epoch 10] training time: 1.003 [sec],avg speed: 122538.355 [imgs/sec],loss=6.332
[Training][Epoch 10] training time: 1.003 [sec],avg speed: 122538.355 [imgs/sec],loss=6.332
:::MLLOG {"namespace": "", "time_ms": 1593100433024, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1593100433025, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 11, "current_iter_num": 0}}
INFO:root:[Training][Iteration 600][Epoch 11, Batch 20/58] lr: 0.11794, training time: 16.626 [ms], speed: 123177.643 [imgs/sec], loss=7.644
[Training][Iteration 600][Epoch 11, Batch 20/58] lr: 0.11794, training time: 16.626 [ms], speed: 123177.643 [imgs/sec], loss=7.644
INFO:root:[Training][Epoch 11] training time: 0.995 [sec],avg speed: 123481.672 [imgs/sec],loss=6.148
[Training][Epoch 11] training time: 0.995 [sec],avg speed: 123481.672 [imgs/sec],loss=6.148
:::MLLOG {"namespace": "", "time_ms": 1593100434020, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1593100434020, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 12, "current_iter_num": 0}}
INFO:root:[Training][Epoch 12] training time: 1.010 [sec],avg speed: 121637.927 [imgs/sec],loss=6.067
[Training][Epoch 12] training time: 1.010 [sec],avg speed: 121637.927 [imgs/sec],loss=6.067
:::MLLOG {"namespace": "", "time_ms": 1593100435031, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1593100435031, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 13, "current_iter_num": 0}}
INFO:root:[Training][Iteration 700][Epoch 13, Batch 4/58] lr: 0.13760, training time: 17.726 [ms], speed: 115534.142 [imgs/sec], loss=6.573
[Training][Iteration 700][Epoch 13, Batch 4/58] lr: 0.13760, training time: 17.726 [ms], speed: 115534.142 [imgs/sec], loss=6.573
INFO:root:[Training][Epoch 13] training time: 1.017 [sec],avg speed: 120879.466 [imgs/sec],loss=5.537
[Training][Epoch 13] training time: 1.017 [sec],avg speed: 120879.466 [imgs/sec],loss=5.537
:::MLLOG {"namespace": "", "time_ms": 1593100436048, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1593100436048, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 14, "current_iter_num": 0}}
INFO:root:[Training][Epoch 14] training time: 0.664 [sec],avg speed: 123290.129 [imgs/sec],loss=5.589
[Training][Epoch 14] training time: 0.664 [sec],avg speed: 123290.129 [imgs/sec],loss=5.589
:::MLLOG {"namespace": "", "time_ms": 1593100436713, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1593100436713, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 15, "current_iter_num": 0}}
INFO:root:[Training][Epoch 15] training time: 0.992 [sec],avg speed: 123840.328 [imgs/sec],loss=5.398
[Training][Epoch 15] training time: 0.992 [sec],avg speed: 123840.328 [imgs/sec],loss=5.398
:::MLLOG {"namespace": "", "time_ms": 1593100437706, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1593100437706, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 16, "current_iter_num": 0}}
INFO:root:[Training][Iteration 900][Epoch 16, Batch 30/58] lr: 0.17692, training time: 16.759 [ms], speed: 122202.892 [imgs/sec], loss=5.295
[Training][Iteration 900][Epoch 16, Batch 30/58] lr: 0.17692, training time: 16.759 [ms], speed: 122202.892 [imgs/sec], loss=5.295
INFO:root:[Training][Epoch 16] training time: 0.980 [sec],avg speed: 125329.028 [imgs/sec],loss=5.254
[Training][Epoch 16] training time: 0.980 [sec],avg speed: 125329.028 [imgs/sec],loss=5.254
:::MLLOG {"namespace": "", "time_ms": 1593100438687, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1593100438687, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 17, "current_iter_num": 0}}
INFO:root:[Training][Epoch 17] training time: 0.991 [sec],avg speed: 124053.931 [imgs/sec],loss=5.076
[Training][Epoch 17] training time: 0.991 [sec],avg speed: 124053.931 [imgs/sec],loss=5.076
:::MLLOG {"namespace": "", "time_ms": 1593100439678, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1593100439678, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 18, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1000][Epoch 18, Batch 14/58] lr: 0.19657, training time: 16.135 [ms], speed: 126931.224 [imgs/sec], loss=2.708
[Training][Iteration 1000][Epoch 18, Batch 14/58] lr: 0.19657, training time: 16.135 [ms], speed: 126931.224 [imgs/sec], loss=2.708
INFO:root:[Training][Epoch 18] training time: 0.994 [sec],avg speed: 123592.417 [imgs/sec],loss=5.302
[Training][Epoch 18] training time: 0.994 [sec],avg speed: 123592.417 [imgs/sec],loss=5.302
:::MLLOG {"namespace": "", "time_ms": 1593100440673, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 18}}
:::MLLOG {"namespace": "", "time_ms": 1593100440673, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 19, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1100][Epoch 19, Batch 56/58] lr: 0.21623, training time: 16.354 [ms], speed: 125230.973 [imgs/sec], loss=5.364
[Training][Iteration 1100][Epoch 19, Batch 56/58] lr: 0.21623, training time: 16.354 [ms], speed: 125230.973 [imgs/sec], loss=5.364
INFO:root:[Training][Epoch 19] training time: 0.977 [sec],avg speed: 125803.474 [imgs/sec],loss=4.785
[Training][Epoch 19] training time: 0.977 [sec],avg speed: 125803.474 [imgs/sec],loss=4.785
:::MLLOG {"namespace": "", "time_ms": 1593100441650, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1593100441650, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 20, "current_iter_num": 0}}
INFO:root:[Training][Epoch 20] training time: 0.657 [sec],avg speed: 124727.658 [imgs/sec],loss=5.048
[Training][Epoch 20] training time: 0.657 [sec],avg speed: 124727.658 [imgs/sec],loss=5.048
:::MLLOG {"namespace": "", "time_ms": 1593100442307, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1593100442308, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 21, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1200][Epoch 21, Batch 40/58] lr: 0.23589, training time: 15.673 [ms], speed: 130673.913 [imgs/sec], loss=3.774
[Training][Iteration 1200][Epoch 21, Batch 40/58] lr: 0.23589, training time: 15.673 [ms], speed: 130673.913 [imgs/sec], loss=3.774
INFO:root:[Training][Epoch 21] training time: 0.965 [sec],avg speed: 127337.585 [imgs/sec],loss=5.040
[Training][Epoch 21] training time: 0.965 [sec],avg speed: 127337.585 [imgs/sec],loss=5.040
:::MLLOG {"namespace": "", "time_ms": 1593100443273, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1593100443273, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 22, "current_iter_num": 0}}
INFO:root:[Training][Epoch 22] training time: 0.987 [sec],avg speed: 124499.504 [imgs/sec],loss=4.756
[Training][Epoch 22] training time: 0.987 [sec],avg speed: 124499.504 [imgs/sec],loss=4.756
:::MLLOG {"namespace": "", "time_ms": 1593100444260, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 22}}
:::MLLOG {"namespace": "", "time_ms": 1593100444261, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 23, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1300][Epoch 23, Batch 24/58] lr: 0.25554, training time: 17.277 [ms], speed: 118538.537 [imgs/sec], loss=5.950
[Training][Iteration 1300][Epoch 23, Batch 24/58] lr: 0.25554, training time: 17.277 [ms], speed: 118538.537 [imgs/sec], loss=5.950
INFO:root:[Training][Epoch 23] training time: 0.999 [sec],avg speed: 123005.754 [imgs/sec],loss=4.468
[Training][Epoch 23] training time: 0.999 [sec],avg speed: 123005.754 [imgs/sec],loss=4.468
:::MLLOG {"namespace": "", "time_ms": 1593100445260, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1593100445260, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 24, "current_iter_num": 0}}
INFO:root:[Training][Epoch 24] training time: 0.995 [sec],avg speed: 123547.503 [imgs/sec],loss=4.735
[Training][Epoch 24] training time: 0.995 [sec],avg speed: 123547.503 [imgs/sec],loss=4.735
:::MLLOG {"namespace": "", "time_ms": 1593100446255, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1593100446255, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 25, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1400][Epoch 25, Batch 8/58] lr: 0.27520, training time: 17.206 [ms], speed: 119026.505 [imgs/sec], loss=5.539
[Training][Iteration 1400][Epoch 25, Batch 8/58] lr: 0.27520, training time: 17.206 [ms], speed: 119026.505 [imgs/sec], loss=5.539
INFO:root:[Training][Epoch 25] training time: 0.972 [sec],avg speed: 126389.232 [imgs/sec],loss=4.459
[Training][Epoch 25] training time: 0.972 [sec],avg speed: 126389.232 [imgs/sec],loss=4.459
:::MLLOG {"namespace": "", "time_ms": 1593100447228, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1593100447228, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 26, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1500][Epoch 26, Batch 50/58] lr: 0.29250, training time: 16.584 [ms], speed: 123493.548 [imgs/sec], loss=5.679
[Training][Iteration 1500][Epoch 26, Batch 50/58] lr: 0.29250, training time: 16.584 [ms], speed: 123493.548 [imgs/sec], loss=5.679
INFO:root:[Training][Epoch 26] training time: 0.984 [sec],avg speed: 124834.860 [imgs/sec],loss=4.538
[Training][Epoch 26] training time: 0.984 [sec],avg speed: 124834.860 [imgs/sec],loss=4.538
:::MLLOG {"namespace": "", "time_ms": 1593100448213, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 26}}
:::MLLOG {"namespace": "", "time_ms": 1593100448213, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 27, "current_iter_num": 0}}
INFO:root:[Training][Epoch 27] training time: 0.655 [sec],avg speed: 125136.030 [imgs/sec],loss=4.591
[Training][Epoch 27] training time: 0.655 [sec],avg speed: 125136.030 [imgs/sec],loss=4.591
:::MLLOG {"namespace": "", "time_ms": 1593100448868, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1593100448868, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 28, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1600][Epoch 28, Batch 34/58] lr: 0.29250, training time: 16.605 [ms], speed: 123334.012 [imgs/sec], loss=5.101
[Training][Iteration 1600][Epoch 28, Batch 34/58] lr: 0.29250, training time: 16.605 [ms], speed: 123334.012 [imgs/sec], loss=5.101
INFO:root:[Training][Epoch 28] training time: 0.983 [sec],avg speed: 125011.388 [imgs/sec],loss=4.414
[Training][Epoch 28] training time: 0.983 [sec],avg speed: 125011.388 [imgs/sec],loss=4.414
:::MLLOG {"namespace": "", "time_ms": 1593100449851, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1593100449851, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 29, "current_iter_num": 0}}
INFO:root:[Training][Epoch 29] training time: 0.979 [sec],avg speed: 125553.858 [imgs/sec],loss=4.452
[Training][Epoch 29] training time: 0.979 [sec],avg speed: 125553.858 [imgs/sec],loss=4.452
:::MLLOG {"namespace": "", "time_ms": 1593100450830, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1593100450831, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 30, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1700][Epoch 30, Batch 18/58] lr: 0.29250, training time: 15.640 [ms], speed: 130947.674 [imgs/sec], loss=2.592
[Training][Iteration 1700][Epoch 30, Batch 18/58] lr: 0.29250, training time: 15.640 [ms], speed: 130947.674 [imgs/sec], loss=2.592
INFO:root:[Training][Epoch 30] training time: 0.967 [sec],avg speed: 127099.682 [imgs/sec],loss=4.299
[Training][Epoch 30] training time: 0.967 [sec],avg speed: 127099.682 [imgs/sec],loss=4.299
:::MLLOG {"namespace": "", "time_ms": 1593100451798, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1593100451798, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 31, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1800][Epoch 31, Batch 60/58] lr: 0.29250, training time: 15.868 [ms], speed: 129066.011 [imgs/sec], loss=10.185
[Training][Iteration 1800][Epoch 31, Batch 60/58] lr: 0.29250, training time: 15.868 [ms], speed: 129066.011 [imgs/sec], loss=10.185
INFO:root:[Training][Epoch 31] training time: 0.952 [sec],avg speed: 129038.964 [imgs/sec],loss=4.291
[Training][Epoch 31] training time: 0.952 [sec],avg speed: 129038.964 [imgs/sec],loss=4.291
:::MLLOG {"namespace": "", "time_ms": 1593100452750, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1593100452751, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 32, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1800][Epoch 32, Batch 2/58] lr: 0.29250, training time: 21.422 [ms], speed: 95603.056 [imgs/sec], loss=2.304
[Training][Iteration 1800][Epoch 32, Batch 2/58] lr: 0.29250, training time: 21.422 [ms], speed: 95603.056 [imgs/sec], loss=2.304
INFO:root:[Training][Epoch 32] training time: 0.952 [sec],avg speed: 129055.992 [imgs/sec],loss=4.094
[Training][Epoch 32] training time: 0.952 [sec],avg speed: 129055.992 [imgs/sec],loss=4.094
:::MLLOG {"namespace": "", "time_ms": 1593100453703, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1593100453703, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 33, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1900][Epoch 33, Batch 44/58] lr: 0.29250, training time: 16.084 [ms], speed: 127332.589 [imgs/sec], loss=4.846
[Training][Iteration 1900][Epoch 33, Batch 44/58] lr: 0.29250, training time: 16.084 [ms], speed: 127332.589 [imgs/sec], loss=4.846
INFO:root:[Training][Epoch 33] training time: 0.970 [sec],avg speed: 126693.581 [imgs/sec],loss=4.360
[Training][Epoch 33] training time: 0.970 [sec],avg speed: 126693.581 [imgs/sec],loss=4.360
:::MLLOG {"namespace": "", "time_ms": 1593100454673, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1593100454674, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 34, "current_iter_num": 0}}
INFO:root:[Training][Epoch 34] training time: 0.647 [sec],avg speed: 126563.317 [imgs/sec],loss=4.557
[Training][Epoch 34] training time: 0.647 [sec],avg speed: 126563.317 [imgs/sec],loss=4.557
:::MLLOG {"namespace": "", "time_ms": 1593100455321, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 34}}
:::MLLOG {"namespace": "", "time_ms": 1593100455321, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 35, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2000][Epoch 35, Batch 28/58] lr: 0.29250, training time: 16.217 [ms], speed: 126288.939 [imgs/sec], loss=4.609
[Training][Iteration 2000][Epoch 35, Batch 28/58] lr: 0.29250, training time: 16.217 [ms], speed: 126288.939 [imgs/sec], loss=4.609
INFO:root:[Training][Epoch 35] training time: 0.957 [sec],avg speed: 128339.000 [imgs/sec],loss=4.082
[Training][Epoch 35] training time: 0.957 [sec],avg speed: 128339.000 [imgs/sec],loss=4.082
:::MLLOG {"namespace": "", "time_ms": 1593100456279, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1593100456279, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 36, "current_iter_num": 0}}
INFO:root:[Training][Epoch 36] training time: 0.958 [sec],avg speed: 128234.264 [imgs/sec],loss=4.231
[Training][Epoch 36] training time: 0.958 [sec],avg speed: 128234.264 [imgs/sec],loss=4.231
:::MLLOG {"namespace": "", "time_ms": 1593100457238, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1593100457238, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 37, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2100][Epoch 37, Batch 12/58] lr: 0.29250, training time: 16.854 [ms], speed: 121517.131 [imgs/sec], loss=4.760
[Training][Iteration 2100][Epoch 37, Batch 12/58] lr: 0.29250, training time: 16.854 [ms], speed: 121517.131 [imgs/sec], loss=4.760
INFO:root:[Training][Epoch 37] training time: 0.965 [sec],avg speed: 127352.909 [imgs/sec],loss=4.069
[Training][Epoch 37] training time: 0.965 [sec],avg speed: 127352.909 [imgs/sec],loss=4.069
:::MLLOG {"namespace": "", "time_ms": 1593100458203, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1593100458204, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 38, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2200][Epoch 38, Batch 54/58] lr: 0.29250, training time: 15.934 [ms], speed: 128533.754 [imgs/sec], loss=4.224
[Training][Iteration 2200][Epoch 38, Batch 54/58] lr: 0.29250, training time: 15.934 [ms], speed: 128533.754 [imgs/sec], loss=4.224
INFO:root:[Training][Epoch 38] training time: 0.956 [sec],avg speed: 128523.469 [imgs/sec],loss=4.116
[Training][Epoch 38] training time: 0.956 [sec],avg speed: 128523.469 [imgs/sec],loss=4.116
:::MLLOG {"namespace": "", "time_ms": 1593100459160, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 38}}
:::MLLOG {"namespace": "", "time_ms": 1593100459160, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 39, "current_iter_num": 0}}
INFO:root:[Training][Epoch 39] training time: 0.953 [sec],avg speed: 128892.617 [imgs/sec],loss=3.909
[Training][Epoch 39] training time: 0.953 [sec],avg speed: 128892.617 [imgs/sec],loss=3.909
:::MLLOG {"namespace": "", "time_ms": 1593100460114, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 39}}
:::MLLOG {"namespace": "", "time_ms": 1593100460114, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 40, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2300][Epoch 40, Batch 38/58] lr: 0.29250, training time: 16.137 [ms], speed: 126912.435 [imgs/sec], loss=5.570
[Training][Iteration 2300][Epoch 40, Batch 38/58] lr: 0.29250, training time: 16.137 [ms], speed: 126912.435 [imgs/sec], loss=5.570
INFO:root:[Training][Epoch 40] training time: 0.644 [sec],avg speed: 127178.074 [imgs/sec],loss=3.849
[Training][Epoch 40] training time: 0.644 [sec],avg speed: 127178.074 [imgs/sec],loss=3.849
:::MLLOG {"namespace": "", "time_ms": 1593100460758, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1593100460770, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 40}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 561.670 [ms], allgather: 108.424 [ms], asnumpy: 7.101 [ms], speed: 7383.376 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 561.670 [ms], allgather: 108.424 [ms], asnumpy: 7.101 [ms], speed: 7383.376 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 503.031 [ms], allgather: 171.110 [ms], asnumpy: 7.239 [ms], speed: 7338.021 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 503.031 [ms], allgather: 171.110 [ms], asnumpy: 7.239 [ms], speed: 7338.021 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 513.403 [ms], allgather: 159.534 [ms], asnumpy: 7.109 [ms], speed: 7352.427 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 513.403 [ms], allgather: 159.534 [ms], asnumpy: 7.109 [ms], speed: 7352.427 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 502.117 [ms], allgather: 165.852 [ms], asnumpy: 6.764 [ms], speed: 7410.316 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 502.117 [ms], allgather: 165.852 [ms], asnumpy: 6.764 [ms], speed: 7410.316 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 500.439 [ms], allgather: 172.927 [ms], asnumpy: 7.249 [ms], speed: 7346.280 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 500.439 [ms], allgather: 172.927 [ms], asnumpy: 7.249 [ms], speed: 7346.280 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 640.154 [ms], allgather: 34.195 [ms], asnumpy: 7.291 [ms], speed: 7335.236 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 640.154 [ms], allgather: 34.195 [ms], asnumpy: 7.291 [ms], speed: 7335.236 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 624.682 [ms], allgather: 42.641 [ms], asnumpy: 7.281 [ms], speed: 7411.725 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 624.682 [ms], allgather: 42.641 [ms], asnumpy: 7.281 [ms], speed: 7411.725 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 554.751 [ms], allgather: 120.507 [ms], asnumpy: 7.394 [ms], speed: 7324.353 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 554.751 [ms], allgather: 120.507 [ms], asnumpy: 7.394 [ms], speed: 7324.353 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 511.579 [ms], allgather: 162.992 [ms], asnumpy: 7.326 [ms], speed: 7332.463 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 511.579 [ms], allgather: 162.992 [ms], asnumpy: 7.326 [ms], speed: 7332.463 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 501.615 [ms], allgather: 173.963 [ms], asnumpy: 7.285 [ms], speed: 7322.093 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 501.615 [ms], allgather: 173.963 [ms], asnumpy: 7.285 [ms], speed: 7322.093 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 577.033 [ms], allgather: 98.319 [ms], asnumpy: 7.391 [ms], speed: 7323.389 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 577.033 [ms], allgather: 98.319 [ms], asnumpy: 7.391 [ms], speed: 7323.389 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 604.564 [ms], allgather: 68.625 [ms], asnumpy: 7.300 [ms], speed: 7347.644 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 604.564 [ms], allgather: 68.625 [ms], asnumpy: 7.300 [ms], speed: 7347.644 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 542.737 [ms], allgather: 127.714 [ms], asnumpy: 7.310 [ms], speed: 7377.218 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 542.737 [ms], allgather: 127.714 [ms], asnumpy: 7.310 [ms], speed: 7377.218 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 509.947 [ms], allgather: 164.397 [ms], asnumpy: 8.026 [ms], speed: 7327.386 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 509.947 [ms], allgather: 164.397 [ms], asnumpy: 8.026 [ms], speed: 7327.386 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 586.797 [ms], allgather: 88.768 [ms], asnumpy: 6.940 [ms], speed: 7325.937 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 586.797 [ms], allgather: 88.768 [ms], asnumpy: 6.940 [ms], speed: 7325.937 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 505.342 [ms], allgather: 169.806 [ms], asnumpy: 7.601 [ms], speed: 7323.322 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 505.342 [ms], allgather: 169.806 [ms], asnumpy: 7.601 [ms], speed: 7323.322 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 480.818 [ms], allgather: 195.437 [ms], asnumpy: 6.704 [ms], speed: 7321.065 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 480.818 [ms], allgather: 195.437 [ms], asnumpy: 6.704 [ms], speed: 7321.065 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 569.212 [ms], allgather: 106.298 [ms], asnumpy: 7.635 [ms], speed: 7319.064 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 569.212 [ms], allgather: 106.298 [ms], asnumpy: 7.635 [ms], speed: 7319.064 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 502.846 [ms], allgather: 164.989 [ms], asnumpy: 7.300 [ms], speed: 7405.904 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 502.846 [ms], allgather: 164.989 [ms], asnumpy: 7.300 [ms], speed: 7405.904 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 477.276 [ms], allgather: 198.177 [ms], asnumpy: 7.934 [ms], speed: 7316.480 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 477.276 [ms], allgather: 198.177 [ms], asnumpy: 7.934 [ms], speed: 7316.480 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 503.174 [ms], allgather: 172.163 [ms], asnumpy: 7.934 [ms], speed: 7317.729 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 503.174 [ms], allgather: 172.163 [ms], asnumpy: 7.934 [ms], speed: 7317.729 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 508.673 [ms], allgather: 166.341 [ms], asnumpy: 7.590 [ms], speed: 7324.875 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 508.673 [ms], allgather: 166.341 [ms], asnumpy: 7.590 [ms], speed: 7324.875 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 492.765 [ms], allgather: 181.377 [ms], asnumpy: 8.173 [ms], speed: 7327.972 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 492.765 [ms], allgather: 181.377 [ms], asnumpy: 8.173 [ms], speed: 7327.972 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 497.912 [ms], allgather: 178.017 [ms], asnumpy: 6.980 [ms], speed: 7321.607 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 497.912 [ms], allgather: 178.017 [ms], asnumpy: 6.980 [ms], speed: 7321.607 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 470.842 [ms], allgather: 204.663 [ms], asnumpy: 7.813 [ms], speed: 7317.226 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 470.842 [ms], allgather: 204.663 [ms], asnumpy: 7.813 [ms], speed: 7317.226 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 476.370 [ms], allgather: 199.582 [ms], asnumpy: 6.864 [ms], speed: 7322.599 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 476.370 [ms], allgather: 199.582 [ms], asnumpy: 6.864 [ms], speed: 7322.599 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 512.141 [ms], allgather: 161.041 [ms], asnumpy: 8.320 [ms], speed: 7336.724 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 512.141 [ms], allgather: 161.041 [ms], asnumpy: 8.320 [ms], speed: 7336.724 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 589.876 [ms], allgather: 84.146 [ms], asnumpy: 7.281 [ms], speed: 7338.863 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 589.876 [ms], allgather: 84.146 [ms], asnumpy: 7.281 [ms], speed: 7338.863 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 506.412 [ms], allgather: 169.358 [ms], asnumpy: 7.506 [ms], speed: 7317.667 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 506.412 [ms], allgather: 169.358 [ms], asnumpy: 7.506 [ms], speed: 7317.667 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 504.543 [ms], allgather: 171.065 [ms], asnumpy: 7.263 [ms], speed: 7322.011 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 504.543 [ms], allgather: 171.065 [ms], asnumpy: 7.263 [ms], speed: 7322.011 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 503.848 [ms], allgather: 163.335 [ms], asnumpy: 8.524 [ms], speed: 7399.640 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 503.848 [ms], allgather: 163.335 [ms], asnumpy: 8.524 [ms], speed: 7399.640 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 488.595 [ms], allgather: 187.041 [ms], asnumpy: 7.319 [ms], speed: 7321.106 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 488.595 [ms], allgather: 187.041 [ms], asnumpy: 7.319 [ms], speed: 7321.106 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 505.290 [ms], allgather: 169.582 [ms], asnumpy: 8.465 [ms], speed: 7317.019 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 505.290 [ms], allgather: 169.582 [ms], asnumpy: 8.465 [ms], speed: 7317.019 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 477.761 [ms], allgather: 197.145 [ms], asnumpy: 8.405 [ms], speed: 7317.295 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 477.761 [ms], allgather: 197.145 [ms], asnumpy: 8.405 [ms], speed: 7317.295 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 487.048 [ms], allgather: 187.617 [ms], asnumpy: 8.373 [ms], speed: 7320.211 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 487.048 [ms], allgather: 187.617 [ms], asnumpy: 8.373 [ms], speed: 7320.211 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 505.161 [ms], allgather: 168.812 [ms], asnumpy: 9.312 [ms], speed: 7317.575 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 505.161 [ms], allgather: 168.812 [ms], asnumpy: 9.312 [ms], speed: 7317.575 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 497.386 [ms], allgather: 177.514 [ms], asnumpy: 9.792 [ms], speed: 7302.537 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 497.386 [ms], allgather: 177.514 [ms], asnumpy: 9.792 [ms], speed: 7302.537 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 558.879 [ms], allgather: 117.108 [ms], asnumpy: 8.910 [ms], speed: 7300.348 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 558.879 [ms], allgather: 117.108 [ms], asnumpy: 8.910 [ms], speed: 7300.348 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 505.599 [ms], allgather: 167.706 [ms], asnumpy: 10.158 [ms], speed: 7315.666 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 505.599 [ms], allgather: 167.706 [ms], asnumpy: 10.158 [ms], speed: 7315.666 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 528.979 [ms], allgather: 146.688 [ms], asnumpy: 9.792 [ms], speed: 7294.355 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 528.979 [ms], allgather: 146.688 [ms], asnumpy: 9.792 [ms], speed: 7294.355 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 510.194 [ms], allgather: 164.719 [ms], asnumpy: 10.736 [ms], speed: 7292.339 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 510.194 [ms], allgather: 164.719 [ms], asnumpy: 10.736 [ms], speed: 7292.339 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 505.857 [ms], allgather: 167.696 [ms], asnumpy: 9.796 [ms], speed: 7316.889 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 505.857 [ms], allgather: 167.696 [ms], asnumpy: 9.796 [ms], speed: 7316.889 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 499.672 [ms], allgather: 176.853 [ms], asnumpy: 8.198 [ms], speed: 7302.201 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 499.672 [ms], allgather: 176.853 [ms], asnumpy: 8.198 [ms], speed: 7302.201 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 536.627 [ms], allgather: 136.460 [ms], asnumpy: 10.702 [ms], speed: 7312.179 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 536.627 [ms], allgather: 136.460 [ms], asnumpy: 10.702 [ms], speed: 7312.179 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 518.241 [ms], allgather: 156.969 [ms], asnumpy: 10.160 [ms], speed: 7295.307 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 518.241 [ms], allgather: 156.969 [ms], asnumpy: 10.160 [ms], speed: 7295.307 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 574.075 [ms], allgather: 99.203 [ms], asnumpy: 10.931 [ms], speed: 7307.695 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 574.075 [ms], allgather: 99.203 [ms], asnumpy: 10.931 [ms], speed: 7307.695 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 478.972 [ms], allgather: 196.262 [ms], asnumpy: 10.591 [ms], speed: 7290.478 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 478.972 [ms], allgather: 196.262 [ms], asnumpy: 10.591 [ms], speed: 7290.478 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 584.002 [ms], allgather: 91.466 [ms], asnumpy: 10.850 [ms], speed: 7285.236 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 584.002 [ms], allgather: 91.466 [ms], asnumpy: 10.850 [ms], speed: 7285.236 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 509.848 [ms], allgather: 165.600 [ms], asnumpy: 10.649 [ms], speed: 7287.577 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 509.848 [ms], allgather: 165.600 [ms], asnumpy: 10.649 [ms], speed: 7287.577 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 511.813 [ms], allgather: 156.235 [ms], asnumpy: 10.821 [ms], speed: 7365.170 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 511.813 [ms], allgather: 156.235 [ms], asnumpy: 10.821 [ms], speed: 7365.170 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 631.165 [ms], allgather: 44.460 [ms], asnumpy: 10.338 [ms], speed: 7288.998 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 631.165 [ms], allgather: 44.460 [ms], asnumpy: 10.338 [ms], speed: 7288.998 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 524.114 [ms], allgather: 151.630 [ms], asnumpy: 10.440 [ms], speed: 7286.658 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 524.114 [ms], allgather: 151.630 [ms], asnumpy: 10.440 [ms], speed: 7286.658 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 494.951 [ms], allgather: 173.358 [ms], asnumpy: 10.150 [ms], speed: 7369.622 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 494.951 [ms], allgather: 173.358 [ms], asnumpy: 10.150 [ms], speed: 7369.622 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 503.298 [ms], allgather: 165.114 [ms], asnumpy: 10.664 [ms], speed: 7362.936 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 503.298 [ms], allgather: 165.114 [ms], asnumpy: 10.664 [ms], speed: 7362.936 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 565.836 [ms], allgather: 109.391 [ms], asnumpy: 12.494 [ms], speed: 7270.370 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 565.836 [ms], allgather: 109.391 [ms], asnumpy: 12.494 [ms], speed: 7270.370 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 508.147 [ms], allgather: 162.455 [ms], asnumpy: 12.565 [ms], speed: 7318.837 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 508.147 [ms], allgather: 162.455 [ms], asnumpy: 12.565 [ms], speed: 7318.837 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 495.867 [ms], allgather: 179.488 [ms], asnumpy: 12.673 [ms], speed: 7267.117 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 495.867 [ms], allgather: 179.488 [ms], asnumpy: 12.673 [ms], speed: 7267.117 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 486.242 [ms], allgather: 189.137 [ms], asnumpy: 13.158 [ms], speed: 7261.760 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 486.242 [ms], allgather: 189.137 [ms], asnumpy: 13.158 [ms], speed: 7261.760 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 501.054 [ms], allgather: 173.344 [ms], asnumpy: 12.929 [ms], speed: 7274.536 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 501.054 [ms], allgather: 173.344 [ms], asnumpy: 12.929 [ms], speed: 7274.536 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 509.385 [ms], allgather: 161.321 [ms], asnumpy: 14.883 [ms], speed: 7292.976 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 509.385 [ms], allgather: 161.321 [ms], asnumpy: 14.883 [ms], speed: 7292.976 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 510.613 [ms], allgather: 172.071 [ms], asnumpy: 6.853 [ms], speed: 7251.219 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 510.613 [ms], allgather: 172.071 [ms], asnumpy: 6.853 [ms], speed: 7251.219 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 560.590 [ms], allgather: 123.358 [ms], asnumpy: 9.669 [ms], speed: 7208.586 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 560.590 [ms], allgather: 123.358 [ms], asnumpy: 9.669 [ms], speed: 7208.586 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 505.964 [ms], allgather: 175.930 [ms], asnumpy: 8.689 [ms], speed: 7240.242 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 505.964 [ms], allgather: 175.930 [ms], asnumpy: 8.689 [ms], speed: 7240.242 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 588.665 [ms], allgather: 100.250 [ms], asnumpy: 11.385 [ms], speed: 7139.793 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 588.665 [ms], allgather: 100.250 [ms], asnumpy: 11.385 [ms], speed: 7139.793 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100461520, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 41, "current_iter_num": 0}}
INFO:root:[Training][Epoch 41] training time: 0.988 [sec],avg speed: 124322.529 [imgs/sec],loss=3.904
[Training][Epoch 41] training time: 0.988 [sec],avg speed: 124322.529 [imgs/sec],loss=3.904
:::MLLOG {"namespace": "", "time_ms": 1593100462508, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1593100462509, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 42, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2400][Epoch 42, Batch 22/58] lr: 0.29250, training time: 16.198 [ms], speed: 126435.058 [imgs/sec], loss=2.963
[Training][Iteration 2400][Epoch 42, Batch 22/58] lr: 0.29250, training time: 16.198 [ms], speed: 126435.058 [imgs/sec], loss=2.963
INFO:root:[Training][Epoch 42] training time: 0.959 [sec],avg speed: 128112.277 [imgs/sec],loss=3.995
[Training][Epoch 42] training time: 0.959 [sec],avg speed: 128112.277 [imgs/sec],loss=3.995
:::MLLOG {"namespace": "", "time_ms": 1593100463468, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 42}}
:::MLLOG {"namespace": "", "time_ms": 1593100463468, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 43, "current_iter_num": 0}}
INFO:root:[Training][Epoch 43] training time: 0.957 [sec],avg speed: 128463.948 [imgs/sec],loss=3.901
[Training][Epoch 43] training time: 0.957 [sec],avg speed: 128463.948 [imgs/sec],loss=3.901
:::MLLOG {"namespace": "", "time_ms": 1593100464425, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 43}}
:::MLLOG {"namespace": "", "time_ms": 1593100464426, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 44, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2500][Epoch 44, Batch 6/58] lr: 0.29250, training time: 16.396 [ms], speed: 124908.772 [imgs/sec], loss=4.605
[Training][Iteration 2500][Epoch 44, Batch 6/58] lr: 0.29250, training time: 16.396 [ms], speed: 124908.772 [imgs/sec], loss=4.605
:::MLLOG {"namespace": "", "time_ms": 1593100464637, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1593100464637, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.17709506423511973, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 40}}
INFO:root:[Training][Epoch 44] training time: 0.937 [sec],avg speed: 131191.642 [imgs/sec],loss=4.056
[Training][Epoch 44] training time: 0.937 [sec],avg speed: 131191.642 [imgs/sec],loss=4.056
:::MLLOG {"namespace": "", "time_ms": 1593100465362, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 44}}
:::MLLOG {"namespace": "", "time_ms": 1593100465363, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 45, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2600][Epoch 45, Batch 48/58] lr: 0.29250, training time: 16.049 [ms], speed: 127608.860 [imgs/sec], loss=3.280
[Training][Iteration 2600][Epoch 45, Batch 48/58] lr: 0.29250, training time: 16.049 [ms], speed: 127608.860 [imgs/sec], loss=3.280
INFO:root:[Training][Epoch 45] training time: 0.958 [sec],avg speed: 128280.384 [imgs/sec],loss=3.824
[Training][Epoch 45] training time: 0.958 [sec],avg speed: 128280.384 [imgs/sec],loss=3.824
:::MLLOG {"namespace": "", "time_ms": 1593100466321, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1593100466321, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 46, "current_iter_num": 0}}
INFO:root:[Training][Epoch 46] training time: 0.949 [sec],avg speed: 129440.465 [imgs/sec],loss=4.052
[Training][Epoch 46] training time: 0.949 [sec],avg speed: 129440.465 [imgs/sec],loss=4.052
:::MLLOG {"namespace": "", "time_ms": 1593100467271, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 46}}
:::MLLOG {"namespace": "", "time_ms": 1593100467271, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 47, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2700][Epoch 47, Batch 32/58] lr: 0.29250, training time: 16.145 [ms], speed: 126851.894 [imgs/sec], loss=3.400
[Training][Iteration 2700][Epoch 47, Batch 32/58] lr: 0.29250, training time: 16.145 [ms], speed: 126851.894 [imgs/sec], loss=3.400
INFO:root:[Training][Epoch 47] training time: 0.641 [sec],avg speed: 127717.173 [imgs/sec],loss=3.910
[Training][Epoch 47] training time: 0.641 [sec],avg speed: 127717.173 [imgs/sec],loss=3.910
:::MLLOG {"namespace": "", "time_ms": 1593100467913, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 47}}
:::MLLOG {"namespace": "", "time_ms": 1593100467913, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 48, "current_iter_num": 0}}
INFO:root:[Training][Epoch 48] training time: 0.943 [sec],avg speed: 130253.773 [imgs/sec],loss=3.750
[Training][Epoch 48] training time: 0.943 [sec],avg speed: 130253.773 [imgs/sec],loss=3.750
:::MLLOG {"namespace": "", "time_ms": 1593100468857, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 48}}
:::MLLOG {"namespace": "", "time_ms": 1593100468857, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 49, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2800][Epoch 49, Batch 16/58] lr: 0.29250, training time: 16.143 [ms], speed: 126869.927 [imgs/sec], loss=3.877
[Training][Iteration 2800][Epoch 49, Batch 16/58] lr: 0.29250, training time: 16.143 [ms], speed: 126869.927 [imgs/sec], loss=3.877
INFO:root:[Training][Epoch 49] training time: 0.941 [sec],avg speed: 130580.252 [imgs/sec],loss=3.777
[Training][Epoch 49] training time: 0.941 [sec],avg speed: 130580.252 [imgs/sec],loss=3.777
:::MLLOG {"namespace": "", "time_ms": 1593100469798, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 49}}
:::MLLOG {"namespace": "", "time_ms": 1593100469799, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 50, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2900][Epoch 50, Batch 58/58] lr: 0.29250, training time: 15.707 [ms], speed: 130389.503 [imgs/sec], loss=3.431
[Training][Iteration 2900][Epoch 50, Batch 58/58] lr: 0.29250, training time: 15.707 [ms], speed: 130389.503 [imgs/sec], loss=3.431
INFO:root:[Training][Epoch 50] training time: 0.947 [sec],avg speed: 129781.662 [imgs/sec],loss=3.814
[Training][Epoch 50] training time: 0.947 [sec],avg speed: 129781.662 [imgs/sec],loss=3.814
:::MLLOG {"namespace": "", "time_ms": 1593100470746, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1593100470765, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 50}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.312 [ms], allgather: 37.906 [ms], asnumpy: 7.447 [ms], speed: 34803.170 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.312 [ms], allgather: 37.906 [ms], asnumpy: 7.447 [ms], speed: 34803.170 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.724 [ms], allgather: 36.768 [ms], asnumpy: 7.286 [ms], speed: 35019.070 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.724 [ms], allgather: 36.768 [ms], asnumpy: 7.286 [ms], speed: 35019.070 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 84.654 [ms], allgather: 51.313 [ms], asnumpy: 7.297 [ms], speed: 34900.299 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 84.654 [ms], allgather: 51.313 [ms], asnumpy: 7.297 [ms], speed: 34900.299 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 97.823 [ms], allgather: 37.983 [ms], asnumpy: 7.313 [ms], speed: 34935.240 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 97.823 [ms], allgather: 37.983 [ms], asnumpy: 7.313 [ms], speed: 34935.240 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.685 [ms], allgather: 39.177 [ms], asnumpy: 7.102 [ms], speed: 34730.375 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.685 [ms], allgather: 39.177 [ms], asnumpy: 7.102 [ms], speed: 34730.375 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.127 [ms], allgather: 38.233 [ms], asnumpy: 7.328 [ms], speed: 34556.971 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.127 [ms], allgather: 38.233 [ms], asnumpy: 7.328 [ms], speed: 34556.971 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 79.038 [ms], allgather: 49.407 [ms], asnumpy: 7.574 [ms], speed: 36759.186 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 79.038 [ms], allgather: 49.407 [ms], asnumpy: 7.574 [ms], speed: 36759.186 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 96.446 [ms], allgather: 40.309 [ms], asnumpy: 7.681 [ms], speed: 34617.151 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 96.446 [ms], allgather: 40.309 [ms], asnumpy: 7.681 [ms], speed: 34617.151 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.705 [ms], allgather: 39.489 [ms], asnumpy: 7.528 [ms], speed: 34548.660 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.705 [ms], allgather: 39.489 [ms], asnumpy: 7.528 [ms], speed: 34548.660 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 95.836 [ms], allgather: 41.108 [ms], asnumpy: 7.575 [ms], speed: 34597.277 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 95.836 [ms], allgather: 41.108 [ms], asnumpy: 7.575 [ms], speed: 34597.277 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.645 [ms], allgather: 40.252 [ms], asnumpy: 7.625 [ms], speed: 34596.421 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.645 [ms], allgather: 40.252 [ms], asnumpy: 7.625 [ms], speed: 34596.421 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.239 [ms], allgather: 36.741 [ms], asnumpy: 7.505 [ms], speed: 34605.498 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.239 [ms], allgather: 36.741 [ms], asnumpy: 7.505 [ms], speed: 34605.498 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.067 [ms], allgather: 37.705 [ms], asnumpy: 7.731 [ms], speed: 34600.987 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.067 [ms], allgather: 37.705 [ms], asnumpy: 7.731 [ms], speed: 34600.987 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.733 [ms], allgather: 38.687 [ms], asnumpy: 7.417 [ms], speed: 35004.515 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.733 [ms], allgather: 38.687 [ms], asnumpy: 7.417 [ms], speed: 35004.515 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 88.231 [ms], allgather: 49.757 [ms], asnumpy: 7.235 [ms], speed: 34429.548 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 88.231 [ms], allgather: 49.757 [ms], asnumpy: 7.235 [ms], speed: 34429.548 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.147 [ms], allgather: 40.304 [ms], asnumpy: 7.435 [ms], speed: 34509.603 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.147 [ms], allgather: 40.304 [ms], asnumpy: 7.435 [ms], speed: 34509.603 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.548 [ms], allgather: 38.893 [ms], asnumpy: 8.798 [ms], speed: 34425.479 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.548 [ms], allgather: 38.893 [ms], asnumpy: 8.798 [ms], speed: 34425.479 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.564 [ms], allgather: 37.254 [ms], asnumpy: 8.391 [ms], speed: 34432.601 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.564 [ms], allgather: 37.254 [ms], asnumpy: 8.391 [ms], speed: 34432.601 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.994 [ms], allgather: 38.705 [ms], asnumpy: 7.878 [ms], speed: 34345.646 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.994 [ms], allgather: 38.705 [ms], asnumpy: 7.878 [ms], speed: 34345.646 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.491 [ms], allgather: 43.489 [ms], asnumpy: 8.053 [ms], speed: 34713.990 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.491 [ms], allgather: 43.489 [ms], asnumpy: 8.053 [ms], speed: 34713.990 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.026 [ms], allgather: 39.922 [ms], asnumpy: 7.480 [ms], speed: 34380.894 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.026 [ms], allgather: 39.922 [ms], asnumpy: 7.480 [ms], speed: 34380.894 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.625 [ms], allgather: 40.694 [ms], asnumpy: 7.612 [ms], speed: 34498.760 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.625 [ms], allgather: 40.694 [ms], asnumpy: 7.612 [ms], speed: 34498.760 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.488 [ms], allgather: 44.137 [ms], asnumpy: 8.285 [ms], speed: 34743.436 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.488 [ms], allgather: 44.137 [ms], asnumpy: 8.285 [ms], speed: 34743.436 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.033 [ms], allgather: 40.231 [ms], asnumpy: 7.746 [ms], speed: 34243.633 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.033 [ms], allgather: 40.231 [ms], asnumpy: 7.746 [ms], speed: 34243.633 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 96.939 [ms], allgather: 39.079 [ms], asnumpy: 9.634 [ms], speed: 34328.105 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 96.939 [ms], allgather: 39.079 [ms], asnumpy: 9.634 [ms], speed: 34328.105 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.512 [ms], allgather: 42.338 [ms], asnumpy: 7.472 [ms], speed: 34170.596 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.512 [ms], allgather: 42.338 [ms], asnumpy: 7.472 [ms], speed: 34170.596 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.108 [ms], allgather: 38.906 [ms], asnumpy: 9.931 [ms], speed: 34258.961 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.108 [ms], allgather: 38.906 [ms], asnumpy: 9.931 [ms], speed: 34258.961 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.368 [ms], allgather: 36.859 [ms], asnumpy: 11.207 [ms], speed: 33913.152 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.368 [ms], allgather: 36.859 [ms], asnumpy: 11.207 [ms], speed: 33913.152 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.152 [ms], allgather: 38.086 [ms], asnumpy: 10.097 [ms], speed: 33936.036 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.152 [ms], allgather: 38.086 [ms], asnumpy: 10.097 [ms], speed: 33936.036 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.770 [ms], allgather: 38.402 [ms], asnumpy: 10.411 [ms], speed: 33879.075 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.770 [ms], allgather: 38.402 [ms], asnumpy: 10.411 [ms], speed: 33879.075 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 95.302 [ms], allgather: 39.374 [ms], asnumpy: 11.236 [ms], speed: 34266.910 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 95.302 [ms], allgather: 39.374 [ms], asnumpy: 11.236 [ms], speed: 34266.910 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.736 [ms], allgather: 42.604 [ms], asnumpy: 10.394 [ms], speed: 34308.730 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.736 [ms], allgather: 42.604 [ms], asnumpy: 10.394 [ms], speed: 34308.730 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.057 [ms], allgather: 38.749 [ms], asnumpy: 11.167 [ms], speed: 33789.717 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.057 [ms], allgather: 38.749 [ms], asnumpy: 11.167 [ms], speed: 33789.717 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.800 [ms], allgather: 39.028 [ms], asnumpy: 10.834 [ms], speed: 33860.859 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.800 [ms], allgather: 39.028 [ms], asnumpy: 10.834 [ms], speed: 33860.859 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.180 [ms], allgather: 44.823 [ms], asnumpy: 10.974 [ms], speed: 34487.697 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.180 [ms], allgather: 44.823 [ms], asnumpy: 10.974 [ms], speed: 34487.697 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.346 [ms], allgather: 39.185 [ms], asnumpy: 9.583 [ms], speed: 33986.854 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.346 [ms], allgather: 39.185 [ms], asnumpy: 9.583 [ms], speed: 33986.854 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.309 [ms], allgather: 38.052 [ms], asnumpy: 10.883 [ms], speed: 33727.711 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.309 [ms], allgather: 38.052 [ms], asnumpy: 10.883 [ms], speed: 33727.711 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.160 [ms], allgather: 40.429 [ms], asnumpy: 10.734 [ms], speed: 34170.485 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.160 [ms], allgather: 40.429 [ms], asnumpy: 10.734 [ms], speed: 34170.485 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.094 [ms], allgather: 38.807 [ms], asnumpy: 11.642 [ms], speed: 33659.828 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.094 [ms], allgather: 38.807 [ms], asnumpy: 11.642 [ms], speed: 33659.828 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.499 [ms], allgather: 39.910 [ms], asnumpy: 10.049 [ms], speed: 34138.945 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.499 [ms], allgather: 39.910 [ms], asnumpy: 10.049 [ms], speed: 34138.945 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 89.321 [ms], allgather: 40.249 [ms], asnumpy: 11.317 [ms], speed: 35488.949 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 89.321 [ms], allgather: 40.249 [ms], asnumpy: 11.317 [ms], speed: 35488.949 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.846 [ms], allgather: 43.708 [ms], asnumpy: 11.355 [ms], speed: 33577.318 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.846 [ms], allgather: 43.708 [ms], asnumpy: 11.355 [ms], speed: 33577.318 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.211 [ms], allgather: 42.705 [ms], asnumpy: 11.106 [ms], speed: 33328.174 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.211 [ms], allgather: 42.705 [ms], asnumpy: 11.106 [ms], speed: 33328.174 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.666 [ms], allgather: 39.514 [ms], asnumpy: 11.814 [ms], speed: 33334.372 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.666 [ms], allgather: 39.514 [ms], asnumpy: 11.814 [ms], speed: 33334.372 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.962 [ms], allgather: 39.425 [ms], asnumpy: 13.696 [ms], speed: 33764.420 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.962 [ms], allgather: 39.425 [ms], asnumpy: 13.696 [ms], speed: 33764.420 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 87.883 [ms], allgather: 49.627 [ms], asnumpy: 13.249 [ms], speed: 33165.258 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 87.883 [ms], allgather: 49.627 [ms], asnumpy: 13.249 [ms], speed: 33165.258 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.132 [ms], allgather: 43.393 [ms], asnumpy: 11.191 [ms], speed: 34790.410 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.132 [ms], allgather: 43.393 [ms], asnumpy: 11.191 [ms], speed: 34790.410 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.591 [ms], allgather: 42.329 [ms], asnumpy: 9.317 [ms], speed: 34664.643 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.591 [ms], allgather: 42.329 [ms], asnumpy: 9.317 [ms], speed: 34664.643 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.589 [ms], allgather: 47.370 [ms], asnumpy: 6.837 [ms], speed: 33829.998 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.589 [ms], allgather: 47.370 [ms], asnumpy: 6.837 [ms], speed: 33829.998 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.829 [ms], allgather: 48.094 [ms], asnumpy: 6.935 [ms], speed: 33815.651 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.829 [ms], allgather: 48.094 [ms], asnumpy: 6.935 [ms], speed: 33815.651 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.070 [ms], allgather: 46.839 [ms], asnumpy: 9.558 [ms], speed: 33229.211 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.070 [ms], allgather: 46.839 [ms], asnumpy: 9.558 [ms], speed: 33229.211 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 94.475 [ms], allgather: 47.285 [ms], asnumpy: 9.835 [ms], speed: 32981.919 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 94.475 [ms], allgather: 47.285 [ms], asnumpy: 9.835 [ms], speed: 32981.919 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.737 [ms], allgather: 54.192 [ms], asnumpy: 6.549 [ms], speed: 33449.321 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.737 [ms], allgather: 54.192 [ms], asnumpy: 6.549 [ms], speed: 33449.321 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 92.739 [ms], allgather: 57.618 [ms], asnumpy: 6.551 [ms], speed: 31865.073 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 92.739 [ms], allgather: 57.618 [ms], asnumpy: 6.551 [ms], speed: 31865.073 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.833 [ms], allgather: 53.542 [ms], asnumpy: 7.474 [ms], speed: 33366.406 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.833 [ms], allgather: 53.542 [ms], asnumpy: 7.474 [ms], speed: 33366.406 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.972 [ms], allgather: 55.128 [ms], asnumpy: 6.486 [ms], speed: 33203.116 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.972 [ms], allgather: 55.128 [ms], asnumpy: 6.486 [ms], speed: 33203.116 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.143 [ms], allgather: 51.335 [ms], asnumpy: 7.719 [ms], speed: 33289.025 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.143 [ms], allgather: 51.335 [ms], asnumpy: 7.719 [ms], speed: 33289.025 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 89.728 [ms], allgather: 53.364 [ms], asnumpy: 9.161 [ms], speed: 32839.631 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 89.728 [ms], allgather: 53.364 [ms], asnumpy: 9.161 [ms], speed: 32839.631 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.438 [ms], allgather: 54.096 [ms], asnumpy: 10.137 [ms], speed: 31119.309 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.438 [ms], allgather: 54.096 [ms], asnumpy: 10.137 [ms], speed: 31119.309 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 87.371 [ms], allgather: 56.331 [ms], asnumpy: 8.127 [ms], speed: 32931.370 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 87.371 [ms], allgather: 56.331 [ms], asnumpy: 8.127 [ms], speed: 32931.370 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.730 [ms], allgather: 53.048 [ms], asnumpy: 9.750 [ms], speed: 32566.748 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.730 [ms], allgather: 53.048 [ms], asnumpy: 9.750 [ms], speed: 32566.748 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.752 [ms], allgather: 54.096 [ms], asnumpy: 9.862 [ms], speed: 32528.307 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.752 [ms], allgather: 54.096 [ms], asnumpy: 9.862 [ms], speed: 32528.307 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 98.814 [ms], allgather: 51.414 [ms], asnumpy: 10.409 [ms], speed: 31125.498 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 98.814 [ms], allgather: 51.414 [ms], asnumpy: 10.409 [ms], speed: 31125.498 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 91.820 [ms], allgather: 52.614 [ms], asnumpy: 10.816 [ms], speed: 32205.610 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 91.820 [ms], allgather: 52.614 [ms], asnumpy: 10.816 [ms], speed: 32205.610 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100470922, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 51, "current_iter_num": 0}}
INFO:root:[Training][Epoch 51] training time: 0.950 [sec],avg speed: 129368.336 [imgs/sec],loss=4.045
[Training][Epoch 51] training time: 0.950 [sec],avg speed: 129368.336 [imgs/sec],loss=4.045
:::MLLOG {"namespace": "", "time_ms": 1593100471872, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 51}}
:::MLLOG {"namespace": "", "time_ms": 1593100471872, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 52, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3000][Epoch 52, Batch 42/58] lr: 0.29250, training time: 16.159 [ms], speed: 126742.023 [imgs/sec], loss=3.780
[Training][Iteration 3000][Epoch 52, Batch 42/58] lr: 0.29250, training time: 16.159 [ms], speed: 126742.023 [imgs/sec], loss=3.780
INFO:root:[Training][Epoch 52] training time: 0.954 [sec],avg speed: 128858.490 [imgs/sec],loss=3.684
[Training][Epoch 52] training time: 0.954 [sec],avg speed: 128858.490 [imgs/sec],loss=3.684
:::MLLOG {"namespace": "", "time_ms": 1593100472826, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 52}}
:::MLLOG {"namespace": "", "time_ms": 1593100472826, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 53, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1593100473675, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1593100473675, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.18069724998498202, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 50}}
INFO:root:[Training][Epoch 53] training time: 0.936 [sec],avg speed: 131296.551 [imgs/sec],loss=3.992
[Training][Epoch 53] training time: 0.936 [sec],avg speed: 131296.551 [imgs/sec],loss=3.992
:::MLLOG {"namespace": "", "time_ms": 1593100473762, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 53}}
:::MLLOG {"namespace": "", "time_ms": 1593100473763, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 54, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3100][Epoch 54, Batch 26/58] lr: 0.29250, training time: 15.768 [ms], speed: 129885.077 [imgs/sec], loss=1.610
[Training][Iteration 3100][Epoch 54, Batch 26/58] lr: 0.29250, training time: 15.768 [ms], speed: 129885.077 [imgs/sec], loss=1.610
INFO:root:[Training][Epoch 54] training time: 0.626 [sec],avg speed: 130919.877 [imgs/sec],loss=3.635
[Training][Epoch 54] training time: 0.626 [sec],avg speed: 130919.877 [imgs/sec],loss=3.635
:::MLLOG {"namespace": "", "time_ms": 1593100474388, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 54}}
:::MLLOG {"namespace": "", "time_ms": 1593100474389, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 55, "current_iter_num": 0}}
INFO:root:[Training][Epoch 55] training time: 0.970 [sec],avg speed: 126737.976 [imgs/sec],loss=3.851
[Training][Epoch 55] training time: 0.970 [sec],avg speed: 126737.976 [imgs/sec],loss=3.851
:::MLLOG {"namespace": "", "time_ms": 1593100475359, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1593100475378, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 55}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.935 [ms], allgather: 46.988 [ms], asnumpy: 7.056 [ms], speed: 34726.867 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.935 [ms], allgather: 46.988 [ms], asnumpy: 7.056 [ms], speed: 34726.867 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.985 [ms], allgather: 36.568 [ms], asnumpy: 6.713 [ms], speed: 34899.544 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.985 [ms], allgather: 36.568 [ms], asnumpy: 6.713 [ms], speed: 34899.544 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.236 [ms], allgather: 37.049 [ms], asnumpy: 6.798 [ms], speed: 34701.928 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.236 [ms], allgather: 37.049 [ms], asnumpy: 6.798 [ms], speed: 34701.928 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.406 [ms], allgather: 35.305 [ms], asnumpy: 6.745 [ms], speed: 35097.956 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.406 [ms], allgather: 35.305 [ms], asnumpy: 6.745 [ms], speed: 35097.956 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.804 [ms], allgather: 35.461 [ms], asnumpy: 6.879 [ms], speed: 34687.004 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.804 [ms], allgather: 35.461 [ms], asnumpy: 6.879 [ms], speed: 34687.004 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 102.804 [ms], allgather: 34.344 [ms], asnumpy: 6.979 [ms], speed: 34691.193 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 102.804 [ms], allgather: 34.344 [ms], asnumpy: 6.979 [ms], speed: 34691.193 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.796 [ms], allgather: 36.546 [ms], asnumpy: 6.929 [ms], speed: 35143.951 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.796 [ms], allgather: 36.546 [ms], asnumpy: 6.929 [ms], speed: 35143.951 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.733 [ms], allgather: 40.173 [ms], asnumpy: 6.183 [ms], speed: 34700.262 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.733 [ms], allgather: 40.173 [ms], asnumpy: 6.183 [ms], speed: 34700.262 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.035 [ms], allgather: 35.173 [ms], asnumpy: 6.815 [ms], speed: 34716.461 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.035 [ms], allgather: 35.173 [ms], asnumpy: 6.815 [ms], speed: 34716.461 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.695 [ms], allgather: 37.516 [ms], asnumpy: 7.240 [ms], speed: 34613.494 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.695 [ms], allgather: 37.516 [ms], asnumpy: 7.240 [ms], speed: 34613.494 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.153 [ms], allgather: 38.089 [ms], asnumpy: 6.903 [ms], speed: 35175.015 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.153 [ms], allgather: 38.089 [ms], asnumpy: 6.903 [ms], speed: 35175.015 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.731 [ms], allgather: 36.462 [ms], asnumpy: 7.276 [ms], speed: 34609.381 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.731 [ms], allgather: 36.462 [ms], asnumpy: 7.276 [ms], speed: 34609.381 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.584 [ms], allgather: 37.846 [ms], asnumpy: 7.163 [ms], speed: 35064.271 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.584 [ms], allgather: 37.846 [ms], asnumpy: 7.163 [ms], speed: 35064.271 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.195 [ms], allgather: 36.660 [ms], asnumpy: 6.858 [ms], speed: 34791.391 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.195 [ms], allgather: 36.660 [ms], asnumpy: 6.858 [ms], speed: 34791.391 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.096 [ms], allgather: 38.704 [ms], asnumpy: 6.666 [ms], speed: 34609.781 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.096 [ms], allgather: 38.704 [ms], asnumpy: 6.666 [ms], speed: 34609.781 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.891 [ms], allgather: 38.930 [ms], asnumpy: 6.830 [ms], speed: 36323.566 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.891 [ms], allgather: 38.930 [ms], asnumpy: 6.830 [ms], speed: 36323.566 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.505 [ms], allgather: 38.923 [ms], asnumpy: 7.046 [ms], speed: 35093.786 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.505 [ms], allgather: 38.923 [ms], asnumpy: 7.046 [ms], speed: 35093.786 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.107 [ms], allgather: 38.738 [ms], asnumpy: 6.800 [ms], speed: 34807.733 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.107 [ms], allgather: 38.738 [ms], asnumpy: 6.800 [ms], speed: 34807.733 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.594 [ms], allgather: 36.632 [ms], asnumpy: 6.945 [ms], speed: 34680.752 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.594 [ms], allgather: 36.632 [ms], asnumpy: 6.945 [ms], speed: 34680.752 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.485 [ms], allgather: 38.508 [ms], asnumpy: 6.823 [ms], speed: 35009.950 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.485 [ms], allgather: 38.508 [ms], asnumpy: 6.823 [ms], speed: 35009.950 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.934 [ms], allgather: 37.979 [ms], asnumpy: 6.802 [ms], speed: 35034.514 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.934 [ms], allgather: 37.979 [ms], asnumpy: 6.802 [ms], speed: 35034.514 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.116 [ms], allgather: 40.935 [ms], asnumpy: 7.982 [ms], speed: 34956.728 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.116 [ms], allgather: 40.935 [ms], asnumpy: 7.982 [ms], speed: 34956.728 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 102.525 [ms], allgather: 34.937 [ms], asnumpy: 6.869 [ms], speed: 34642.426 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 102.525 [ms], allgather: 34.937 [ms], asnumpy: 6.869 [ms], speed: 34642.426 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.518 [ms], allgather: 37.991 [ms], asnumpy: 7.476 [ms], speed: 34486.052 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.518 [ms], allgather: 37.991 [ms], asnumpy: 7.476 [ms], speed: 34486.052 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.246 [ms], allgather: 36.011 [ms], asnumpy: 7.092 [ms], speed: 34879.345 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.246 [ms], allgather: 36.011 [ms], asnumpy: 7.092 [ms], speed: 34879.345 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 82.323 [ms], allgather: 47.330 [ms], asnumpy: 7.223 [ms], speed: 36528.685 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 82.323 [ms], allgather: 47.330 [ms], asnumpy: 7.223 [ms], speed: 36528.685 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.397 [ms], allgather: 38.260 [ms], asnumpy: 6.832 [ms], speed: 34604.299 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.397 [ms], allgather: 38.260 [ms], asnumpy: 6.832 [ms], speed: 34604.299 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.951 [ms], allgather: 39.750 [ms], asnumpy: 6.318 [ms], speed: 36490.740 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.951 [ms], allgather: 39.750 [ms], asnumpy: 6.318 [ms], speed: 36490.740 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 92.056 [ms], allgather: 45.810 [ms], asnumpy: 7.357 [ms], speed: 34429.266 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 92.056 [ms], allgather: 45.810 [ms], asnumpy: 7.357 [ms], speed: 34429.266 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 99.237 [ms], allgather: 35.710 [ms], asnumpy: 7.682 [ms], speed: 35055.011 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 99.237 [ms], allgather: 35.710 [ms], asnumpy: 7.682 [ms], speed: 35055.011 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.013 [ms], allgather: 37.021 [ms], asnumpy: 6.916 [ms], speed: 34733.711 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.013 [ms], allgather: 37.021 [ms], asnumpy: 6.916 [ms], speed: 34733.711 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.606 [ms], allgather: 39.418 [ms], asnumpy: 6.898 [ms], speed: 34740.616 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.606 [ms], allgather: 39.418 [ms], asnumpy: 6.898 [ms], speed: 34740.616 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.884 [ms], allgather: 37.927 [ms], asnumpy: 7.128 [ms], speed: 34260.472 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.884 [ms], allgather: 37.927 [ms], asnumpy: 7.128 [ms], speed: 34260.472 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 83.642 [ms], allgather: 46.012 [ms], asnumpy: 7.662 [ms], speed: 36411.607 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 83.642 [ms], allgather: 46.012 [ms], asnumpy: 7.662 [ms], speed: 36411.607 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.857 [ms], allgather: 44.868 [ms], asnumpy: 7.159 [ms], speed: 34273.126 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.857 [ms], allgather: 44.868 [ms], asnumpy: 7.159 [ms], speed: 34273.126 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.799 [ms], allgather: 40.788 [ms], asnumpy: 8.402 [ms], speed: 34484.748 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.799 [ms], allgather: 40.788 [ms], asnumpy: 8.402 [ms], speed: 34484.748 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 91.392 [ms], allgather: 42.633 [ms], asnumpy: 8.774 [ms], speed: 35013.632 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 91.392 [ms], allgather: 42.633 [ms], asnumpy: 8.774 [ms], speed: 35013.632 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 93.616 [ms], allgather: 43.243 [ms], asnumpy: 6.950 [ms], speed: 34768.146 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 93.616 [ms], allgather: 43.243 [ms], asnumpy: 6.950 [ms], speed: 34768.146 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.434 [ms], allgather: 38.050 [ms], asnumpy: 7.527 [ms], speed: 34479.702 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.434 [ms], allgather: 38.050 [ms], asnumpy: 7.527 [ms], speed: 34479.702 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.667 [ms], allgather: 36.320 [ms], asnumpy: 8.770 [ms], speed: 34780.486 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.667 [ms], allgather: 36.320 [ms], asnumpy: 8.770 [ms], speed: 34780.486 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.008 [ms], allgather: 36.110 [ms], asnumpy: 8.815 [ms], speed: 34738.026 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.008 [ms], allgather: 36.110 [ms], asnumpy: 8.815 [ms], speed: 34738.026 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.004 [ms], inference: 99.654 [ms], allgather: 37.170 [ms], asnumpy: 8.267 [ms], speed: 34460.382 [imgs/sec]
[Validation] save_parameters: 0.004 [ms], inference: 99.654 [ms], allgather: 37.170 [ms], asnumpy: 8.267 [ms], speed: 34460.382 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.924 [ms], allgather: 37.037 [ms], asnumpy: 8.633 [ms], speed: 34107.187 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.924 [ms], allgather: 37.037 [ms], asnumpy: 8.633 [ms], speed: 34107.187 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 88.746 [ms], allgather: 48.583 [ms], asnumpy: 9.345 [ms], speed: 34088.780 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 88.746 [ms], allgather: 48.583 [ms], asnumpy: 9.345 [ms], speed: 34088.780 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.126 [ms], allgather: 36.944 [ms], asnumpy: 10.239 [ms], speed: 33942.133 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.126 [ms], allgather: 36.944 [ms], asnumpy: 10.239 [ms], speed: 33942.133 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.140 [ms], allgather: 37.558 [ms], asnumpy: 9.729 [ms], speed: 33914.633 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.140 [ms], allgather: 37.558 [ms], asnumpy: 9.729 [ms], speed: 33914.633 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.507 [ms], allgather: 39.876 [ms], asnumpy: 10.081 [ms], speed: 33678.044 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.507 [ms], allgather: 39.876 [ms], asnumpy: 10.081 [ms], speed: 33678.044 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.224 [ms], allgather: 37.624 [ms], asnumpy: 10.601 [ms], speed: 33681.289 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.224 [ms], allgather: 37.624 [ms], asnumpy: 10.601 [ms], speed: 33681.289 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.679 [ms], allgather: 39.334 [ms], asnumpy: 10.879 [ms], speed: 33581.028 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.679 [ms], allgather: 39.334 [ms], asnumpy: 10.879 [ms], speed: 33581.028 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.685 [ms], allgather: 37.240 [ms], asnumpy: 10.871 [ms], speed: 33602.766 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.685 [ms], allgather: 37.240 [ms], asnumpy: 10.871 [ms], speed: 33602.766 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 93.461 [ms], allgather: 43.246 [ms], asnumpy: 10.361 [ms], speed: 33997.708 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 93.461 [ms], allgather: 43.246 [ms], asnumpy: 10.361 [ms], speed: 33997.708 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 79.908 [ms], allgather: 51.273 [ms], asnumpy: 10.130 [ms], speed: 35382.490 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 79.908 [ms], allgather: 51.273 [ms], asnumpy: 10.130 [ms], speed: 35382.490 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.011 [ms], allgather: 46.100 [ms], asnumpy: 6.717 [ms], speed: 34053.078 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.011 [ms], allgather: 46.100 [ms], asnumpy: 6.717 [ms], speed: 34053.078 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100475517, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 56, "current_iter_num": 0}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.296 [ms], allgather: 45.564 [ms], asnumpy: 10.356 [ms], speed: 33284.799 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.296 [ms], allgather: 45.564 [ms], asnumpy: 10.356 [ms], speed: 33284.799 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.415 [ms], allgather: 49.975 [ms], asnumpy: 6.603 [ms], speed: 33334.266 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.415 [ms], allgather: 49.975 [ms], asnumpy: 6.603 [ms], speed: 33334.266 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 85.749 [ms], allgather: 57.659 [ms], asnumpy: 6.444 [ms], speed: 33365.556 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 85.749 [ms], allgather: 57.659 [ms], asnumpy: 6.444 [ms], speed: 33365.556 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.604 [ms], allgather: 53.802 [ms], asnumpy: 5.946 [ms], speed: 33254.819 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.604 [ms], allgather: 53.802 [ms], asnumpy: 5.946 [ms], speed: 33254.819 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.953 [ms], allgather: 52.250 [ms], asnumpy: 6.335 [ms], speed: 31537.685 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.953 [ms], allgather: 52.250 [ms], asnumpy: 6.335 [ms], speed: 31537.685 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.849 [ms], allgather: 53.578 [ms], asnumpy: 6.420 [ms], speed: 33145.810 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.849 [ms], allgather: 53.578 [ms], asnumpy: 6.420 [ms], speed: 33145.810 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.313 [ms], allgather: 49.694 [ms], asnumpy: 8.417 [ms], speed: 33019.100 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.313 [ms], allgather: 49.694 [ms], asnumpy: 8.417 [ms], speed: 33019.100 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.977 [ms], allgather: 51.965 [ms], asnumpy: 8.828 [ms], speed: 32728.266 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.977 [ms], allgather: 51.965 [ms], asnumpy: 8.828 [ms], speed: 32728.266 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.989 [ms], allgather: 51.353 [ms], asnumpy: 9.706 [ms], speed: 32669.023 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.989 [ms], allgather: 51.353 [ms], asnumpy: 9.706 [ms], speed: 32669.023 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.000 [ms], allgather: 49.412 [ms], asnumpy: 10.573 [ms], speed: 32682.515 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.000 [ms], allgather: 49.412 [ms], asnumpy: 10.573 [ms], speed: 32682.515 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.879 [ms], allgather: 52.059 [ms], asnumpy: 10.297 [ms], speed: 30819.350 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.879 [ms], allgather: 52.059 [ms], asnumpy: 10.297 [ms], speed: 30819.350 [imgs/sec]
INFO:root:[Training][Iteration 3200][Epoch 56, Batch 10/58] lr: 0.29250, training time: 17.908 [ms], speed: 114364.574 [imgs/sec], loss=5.800
[Training][Iteration 3200][Epoch 56, Batch 10/58] lr: 0.29250, training time: 17.908 [ms], speed: 114364.574 [imgs/sec], loss=5.800
INFO:root:[Training][Epoch 56] training time: 0.964 [sec],avg speed: 127508.963 [imgs/sec],loss=3.719
[Training][Epoch 56] training time: 0.964 [sec],avg speed: 127508.963 [imgs/sec],loss=3.719
:::MLLOG {"namespace": "", "time_ms": 1593100476480, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 56}}
:::MLLOG {"namespace": "", "time_ms": 1593100476481, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 57, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3300][Epoch 57, Batch 52/58] lr: 0.29250, training time: 16.425 [ms], speed: 124689.056 [imgs/sec], loss=3.982
[Training][Iteration 3300][Epoch 57, Batch 52/58] lr: 0.29250, training time: 16.425 [ms], speed: 124689.056 [imgs/sec], loss=3.982
INFO:root:[Training][Epoch 57] training time: 0.980 [sec],avg speed: 125353.657 [imgs/sec],loss=3.655
[Training][Epoch 57] training time: 0.980 [sec],avg speed: 125353.657 [imgs/sec],loss=3.655
:::MLLOG {"namespace": "", "time_ms": 1593100477461, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 57}}
:::MLLOG {"namespace": "", "time_ms": 1593100477462, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 58, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1593100478200, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1593100478200, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.17688441511527792, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 55}}
INFO:root:[Training][Epoch 58] training time: 0.974 [sec],avg speed: 126107.289 [imgs/sec],loss=4.042
[Training][Epoch 58] training time: 0.974 [sec],avg speed: 126107.289 [imgs/sec],loss=4.042
:::MLLOG {"namespace": "", "time_ms": 1593100478436, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 58}}
:::MLLOG {"namespace": "", "time_ms": 1593100478437, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 59, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3400][Epoch 59, Batch 36/58] lr: 0.29250, training time: 16.198 [ms], speed: 126432.886 [imgs/sec], loss=1.903
[Training][Iteration 3400][Epoch 59, Batch 36/58] lr: 0.29250, training time: 16.198 [ms], speed: 126432.886 [imgs/sec], loss=1.903
INFO:root:[Training][Epoch 59] training time: 0.979 [sec],avg speed: 125534.806 [imgs/sec],loss=3.756
[Training][Epoch 59] training time: 0.979 [sec],avg speed: 125534.806 [imgs/sec],loss=3.756
:::MLLOG {"namespace": "", "time_ms": 1593100479416, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 59}}
:::MLLOG {"namespace": "", "time_ms": 1593100479416, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 60, "current_iter_num": 0}}
INFO:root:[Training][Epoch 60] training time: 0.637 [sec],avg speed: 128560.850 [imgs/sec],loss=3.671
[Training][Epoch 60] training time: 0.637 [sec],avg speed: 128560.850 [imgs/sec],loss=3.671
:::MLLOG {"namespace": "", "time_ms": 1593100480054, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1593100480066, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 60}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 89.937 [ms], allgather: 42.397 [ms], asnumpy: 7.912 [ms], speed: 35651.238 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 89.937 [ms], allgather: 42.397 [ms], asnumpy: 7.912 [ms], speed: 35651.238 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 96.159 [ms], allgather: 36.351 [ms], asnumpy: 7.598 [ms], speed: 35686.485 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 96.159 [ms], allgather: 36.351 [ms], asnumpy: 7.598 [ms], speed: 35686.485 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 94.888 [ms], allgather: 36.797 [ms], asnumpy: 7.736 [ms], speed: 35862.423 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 94.888 [ms], allgather: 36.797 [ms], asnumpy: 7.736 [ms], speed: 35862.423 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 88.534 [ms], allgather: 44.502 [ms], asnumpy: 7.546 [ms], speed: 35566.168 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 88.534 [ms], allgather: 44.502 [ms], asnumpy: 7.546 [ms], speed: 35566.168 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 94.093 [ms], allgather: 39.191 [ms], asnumpy: 7.684 [ms], speed: 35468.721 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 94.093 [ms], allgather: 39.191 [ms], asnumpy: 7.684 [ms], speed: 35468.721 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.857 [ms], allgather: 38.236 [ms], asnumpy: 7.862 [ms], speed: 35471.781 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.857 [ms], allgather: 38.236 [ms], asnumpy: 7.862 [ms], speed: 35471.781 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 93.156 [ms], allgather: 38.374 [ms], asnumpy: 7.546 [ms], speed: 35951.198 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 93.156 [ms], allgather: 38.374 [ms], asnumpy: 7.546 [ms], speed: 35951.198 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 94.044 [ms], allgather: 38.719 [ms], asnumpy: 7.686 [ms], speed: 35599.737 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 94.044 [ms], allgather: 38.719 [ms], asnumpy: 7.686 [ms], speed: 35599.737 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 80.407 [ms], allgather: 52.806 [ms], asnumpy: 6.910 [ms], speed: 35682.417 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 80.407 [ms], allgather: 52.806 [ms], asnumpy: 6.910 [ms], speed: 35682.417 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.914 [ms], allgather: 40.881 [ms], asnumpy: 8.169 [ms], speed: 35469.501 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.914 [ms], allgather: 40.881 [ms], asnumpy: 8.169 [ms], speed: 35469.501 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 92.062 [ms], allgather: 39.664 [ms], asnumpy: 7.605 [ms], speed: 35885.251 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 92.062 [ms], allgather: 39.664 [ms], asnumpy: 7.605 [ms], speed: 35885.251 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.260 [ms], allgather: 37.882 [ms], asnumpy: 8.102 [ms], speed: 35399.212 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.260 [ms], allgather: 37.882 [ms], asnumpy: 8.102 [ms], speed: 35399.212 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 95.170 [ms], allgather: 38.110 [ms], asnumpy: 7.834 [ms], speed: 35432.167 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 95.170 [ms], allgather: 38.110 [ms], asnumpy: 7.834 [ms], speed: 35432.167 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.807 [ms], allgather: 38.466 [ms], asnumpy: 8.019 [ms], speed: 35387.266 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.807 [ms], allgather: 38.466 [ms], asnumpy: 8.019 [ms], speed: 35387.266 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.791 [ms], allgather: 40.022 [ms], asnumpy: 8.062 [ms], speed: 36003.042 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.791 [ms], allgather: 40.022 [ms], asnumpy: 8.062 [ms], speed: 36003.042 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 94.731 [ms], allgather: 38.217 [ms], asnumpy: 8.459 [ms], speed: 35358.508 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 94.731 [ms], allgather: 38.217 [ms], asnumpy: 8.459 [ms], speed: 35358.508 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.172 [ms], allgather: 37.709 [ms], asnumpy: 7.548 [ms], speed: 35860.031 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.172 [ms], allgather: 37.709 [ms], asnumpy: 7.548 [ms], speed: 35860.031 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 95.484 [ms], allgather: 38.857 [ms], asnumpy: 7.087 [ms], speed: 35353.263 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 95.484 [ms], allgather: 38.857 [ms], asnumpy: 7.087 [ms], speed: 35353.263 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.459 [ms], allgather: 37.672 [ms], asnumpy: 7.988 [ms], speed: 35430.610 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.459 [ms], allgather: 37.672 [ms], asnumpy: 7.988 [ms], speed: 35430.610 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 94.053 [ms], allgather: 39.286 [ms], asnumpy: 7.371 [ms], speed: 35533.807 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 94.053 [ms], allgather: 39.286 [ms], asnumpy: 7.371 [ms], speed: 35533.807 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.900 [ms], allgather: 42.344 [ms], asnumpy: 8.409 [ms], speed: 35548.082 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.900 [ms], allgather: 42.344 [ms], asnumpy: 8.409 [ms], speed: 35548.082 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 96.305 [ms], allgather: 37.448 [ms], asnumpy: 8.094 [ms], speed: 35249.036 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 96.305 [ms], allgather: 37.448 [ms], asnumpy: 8.094 [ms], speed: 35249.036 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 86.879 [ms], allgather: 46.525 [ms], asnumpy: 8.784 [ms], speed: 35164.458 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 86.879 [ms], allgather: 46.525 [ms], asnumpy: 8.784 [ms], speed: 35164.458 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 84.862 [ms], allgather: 48.568 [ms], asnumpy: 7.586 [ms], speed: 35456.608 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 84.862 [ms], allgather: 48.568 [ms], asnumpy: 7.586 [ms], speed: 35456.608 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.675 [ms], allgather: 41.275 [ms], asnumpy: 7.300 [ms], speed: 35397.838 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.675 [ms], allgather: 41.275 [ms], asnumpy: 7.300 [ms], speed: 35397.838 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.259 [ms], allgather: 38.301 [ms], asnumpy: 8.937 [ms], speed: 35087.914 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.259 [ms], allgather: 38.301 [ms], asnumpy: 8.937 [ms], speed: 35087.914 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.255 [ms], allgather: 44.146 [ms], asnumpy: 7.951 [ms], speed: 35624.228 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.255 [ms], allgather: 44.146 [ms], asnumpy: 7.951 [ms], speed: 35624.228 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.369 [ms], allgather: 38.844 [ms], asnumpy: 8.492 [ms], speed: 35036.914 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.369 [ms], allgather: 38.844 [ms], asnumpy: 8.492 [ms], speed: 35036.914 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.493 [ms], allgather: 37.967 [ms], asnumpy: 8.246 [ms], speed: 37117.275 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.493 [ms], allgather: 37.967 [ms], asnumpy: 8.246 [ms], speed: 37117.275 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.352 [ms], allgather: 36.026 [ms], asnumpy: 10.441 [ms], speed: 35009.073 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.352 [ms], allgather: 36.026 [ms], asnumpy: 10.441 [ms], speed: 35009.073 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 93.745 [ms], allgather: 38.860 [ms], asnumpy: 10.336 [ms], speed: 34979.059 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 93.745 [ms], allgather: 38.860 [ms], asnumpy: 10.336 [ms], speed: 34979.059 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 94.282 [ms], allgather: 39.534 [ms], asnumpy: 8.597 [ms], speed: 35108.826 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 94.282 [ms], allgather: 39.534 [ms], asnumpy: 8.597 [ms], speed: 35108.826 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 93.634 [ms], allgather: 37.611 [ms], asnumpy: 9.833 [ms], speed: 35441.209 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 93.634 [ms], allgather: 37.611 [ms], asnumpy: 9.833 [ms], speed: 35441.209 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 94.598 [ms], allgather: 37.130 [ms], asnumpy: 10.326 [ms], speed: 35197.390 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 94.598 [ms], allgather: 37.130 [ms], asnumpy: 10.326 [ms], speed: 35197.390 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.626 [ms], allgather: 37.570 [ms], asnumpy: 10.766 [ms], speed: 34730.835 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.626 [ms], allgather: 37.570 [ms], asnumpy: 10.766 [ms], speed: 34730.835 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.321 [ms], allgather: 38.045 [ms], asnumpy: 10.715 [ms], speed: 34944.787 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.321 [ms], allgather: 38.045 [ms], asnumpy: 10.715 [ms], speed: 34944.787 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 95.541 [ms], allgather: 36.147 [ms], asnumpy: 10.701 [ms], speed: 35114.822 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 95.541 [ms], allgather: 36.147 [ms], asnumpy: 10.701 [ms], speed: 35114.822 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 95.636 [ms], allgather: 36.724 [ms], asnumpy: 10.702 [ms], speed: 34949.446 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 95.636 [ms], allgather: 36.724 [ms], asnumpy: 10.702 [ms], speed: 34949.446 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.355 [ms], allgather: 37.714 [ms], asnumpy: 9.689 [ms], speed: 35023.865 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.355 [ms], allgather: 37.714 [ms], asnumpy: 9.689 [ms], speed: 35023.865 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.031 [ms], allgather: 36.853 [ms], asnumpy: 11.235 [ms], speed: 34693.087 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.031 [ms], allgather: 36.853 [ms], asnumpy: 11.235 [ms], speed: 34693.087 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.416 [ms], allgather: 39.272 [ms], asnumpy: 10.366 [ms], speed: 35197.272 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.416 [ms], allgather: 39.272 [ms], asnumpy: 10.366 [ms], speed: 35197.272 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 79.958 [ms], allgather: 51.047 [ms], asnumpy: 11.273 [ms], speed: 35142.066 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 79.958 [ms], allgather: 51.047 [ms], asnumpy: 11.273 [ms], speed: 35142.066 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 91.964 [ms], allgather: 38.224 [ms], asnumpy: 11.436 [ms], speed: 35304.163 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 91.964 [ms], allgather: 38.224 [ms], asnumpy: 11.436 [ms], speed: 35304.163 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 93.652 [ms], allgather: 40.444 [ms], asnumpy: 10.540 [ms], speed: 34569.275 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 93.652 [ms], allgather: 40.444 [ms], asnumpy: 10.540 [ms], speed: 34569.275 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 83.485 [ms], allgather: 50.039 [ms], asnumpy: 10.364 [ms], speed: 34748.962 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 83.485 [ms], allgather: 50.039 [ms], asnumpy: 10.364 [ms], speed: 34748.962 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 86.875 [ms], allgather: 46.675 [ms], asnumpy: 11.563 [ms], speed: 34455.569 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 86.875 [ms], allgather: 46.675 [ms], asnumpy: 11.563 [ms], speed: 34455.569 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.584 [ms], allgather: 41.357 [ms], asnumpy: 10.335 [ms], speed: 34897.221 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.584 [ms], allgather: 41.357 [ms], asnumpy: 10.335 [ms], speed: 34897.221 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.440 [ms], allgather: 42.199 [ms], asnumpy: 10.700 [ms], speed: 34401.705 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.440 [ms], allgather: 42.199 [ms], asnumpy: 10.700 [ms], speed: 34401.705 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 80.569 [ms], allgather: 53.732 [ms], asnumpy: 11.427 [ms], speed: 34310.246 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 80.569 [ms], allgather: 53.732 [ms], asnumpy: 11.427 [ms], speed: 34310.246 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.027 [ms], allgather: 47.060 [ms], asnumpy: 7.310 [ms], speed: 33467.310 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.027 [ms], allgather: 47.060 [ms], asnumpy: 7.310 [ms], speed: 33467.310 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 83.503 [ms], allgather: 53.737 [ms], asnumpy: 10.063 [ms], speed: 33942.957 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 83.503 [ms], allgather: 53.737 [ms], asnumpy: 10.063 [ms], speed: 33942.957 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 87.945 [ms], allgather: 47.620 [ms], asnumpy: 9.683 [ms], speed: 34423.162 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 87.945 [ms], allgather: 47.620 [ms], asnumpy: 9.683 [ms], speed: 34423.162 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.495 [ms], allgather: 47.300 [ms], asnumpy: 10.150 [ms], speed: 33795.870 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.495 [ms], allgather: 47.300 [ms], asnumpy: 10.150 [ms], speed: 33795.870 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 86.825 [ms], allgather: 52.174 [ms], asnumpy: 7.398 [ms], speed: 34153.401 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 86.825 [ms], allgather: 52.174 [ms], asnumpy: 7.398 [ms], speed: 34153.401 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 78.439 [ms], allgather: 60.342 [ms], asnumpy: 7.936 [ms], speed: 34078.588 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 78.439 [ms], allgather: 60.342 [ms], asnumpy: 7.936 [ms], speed: 34078.588 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 80.418 [ms], allgather: 58.905 [ms], asnumpy: 7.432 [ms], speed: 34069.785 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 80.418 [ms], allgather: 58.905 [ms], asnumpy: 7.432 [ms], speed: 34069.785 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 87.593 [ms], allgather: 51.642 [ms], asnumpy: 8.580 [ms], speed: 33825.632 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 87.593 [ms], allgather: 51.642 [ms], asnumpy: 8.580 [ms], speed: 33825.632 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 84.990 [ms], allgather: 55.574 [ms], asnumpy: 8.163 [ms], speed: 33618.064 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 84.990 [ms], allgather: 55.574 [ms], asnumpy: 8.163 [ms], speed: 33618.064 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 85.194 [ms], allgather: 55.142 [ms], asnumpy: 8.687 [ms], speed: 33551.372 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 85.194 [ms], allgather: 55.142 [ms], asnumpy: 8.687 [ms], speed: 33551.372 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 85.922 [ms], allgather: 55.422 [ms], asnumpy: 7.423 [ms], speed: 33609.013 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 85.922 [ms], allgather: 55.422 [ms], asnumpy: 7.423 [ms], speed: 33609.013 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.704 [ms], allgather: 51.585 [ms], asnumpy: 8.673 [ms], speed: 33565.065 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.704 [ms], allgather: 51.585 [ms], asnumpy: 8.673 [ms], speed: 33565.065 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 86.627 [ms], allgather: 52.824 [ms], asnumpy: 10.334 [ms], speed: 33380.639 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 86.627 [ms], allgather: 52.824 [ms], asnumpy: 10.334 [ms], speed: 33380.639 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 76.864 [ms], allgather: 63.772 [ms], asnumpy: 10.116 [ms], speed: 33166.307 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 76.864 [ms], allgather: 63.772 [ms], asnumpy: 10.116 [ms], speed: 33166.307 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 87.182 [ms], allgather: 51.680 [ms], asnumpy: 11.809 [ms], speed: 33184.308 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 87.182 [ms], allgather: 51.680 [ms], asnumpy: 11.809 [ms], speed: 33184.308 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100480212, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 61, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3500][Epoch 61, Batch 20/58] lr: 0.02925, training time: 16.777 [ms], speed: 122068.481 [imgs/sec], loss=1.210
[Training][Iteration 3500][Epoch 61, Batch 20/58] lr: 0.02925, training time: 16.777 [ms], speed: 122068.481 [imgs/sec], loss=1.210
INFO:root:[Training][Epoch 61] training time: 0.974 [sec],avg speed: 126142.042 [imgs/sec],loss=3.662
[Training][Epoch 61] training time: 0.974 [sec],avg speed: 126142.042 [imgs/sec],loss=3.662
:::MLLOG {"namespace": "", "time_ms": 1593100481187, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 61}}
:::MLLOG {"namespace": "", "time_ms": 1593100481187, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 62, "current_iter_num": 0}}
INFO:root:[Training][Epoch 62] training time: 0.958 [sec],avg speed: 128313.534 [imgs/sec],loss=3.383
[Training][Epoch 62] training time: 0.958 [sec],avg speed: 128313.534 [imgs/sec],loss=3.383
:::MLLOG {"namespace": "", "time_ms": 1593100482145, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 62}}
:::MLLOG {"namespace": "", "time_ms": 1593100482145, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 63, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3600][Epoch 63, Batch 4/58] lr: 0.02925, training time: 16.107 [ms], speed: 127152.330 [imgs/sec], loss=3.833
[Training][Iteration 3600][Epoch 63, Batch 4/58] lr: 0.02925, training time: 16.107 [ms], speed: 127152.330 [imgs/sec], loss=3.833
INFO:root:[Training][Epoch 63] training time: 0.965 [sec],avg speed: 127287.582 [imgs/sec],loss=3.327
[Training][Epoch 63] training time: 0.965 [sec],avg speed: 127287.582 [imgs/sec],loss=3.327
:::MLLOG {"namespace": "", "time_ms": 1593100483111, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 63}}
:::MLLOG {"namespace": "", "time_ms": 1593100483111, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 64, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1593100483313, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1593100483313, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.19322805513183386, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 60}}
INFO:root:[Training][Iteration 3700][Epoch 64, Batch 46/58] lr: 0.02925, training time: 16.093 [ms], speed: 127258.659 [imgs/sec], loss=2.779
[Training][Iteration 3700][Epoch 64, Batch 46/58] lr: 0.02925, training time: 16.093 [ms], speed: 127258.659 [imgs/sec], loss=2.779
INFO:root:[Training][Epoch 64] training time: 0.966 [sec],avg speed: 127240.571 [imgs/sec],loss=3.571
[Training][Epoch 64] training time: 0.966 [sec],avg speed: 127240.571 [imgs/sec],loss=3.571
:::MLLOG {"namespace": "", "time_ms": 1593100484077, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 64}}
:::MLLOG {"namespace": "", "time_ms": 1593100484077, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 65, "current_iter_num": 0}}
INFO:root:[Training][Epoch 65] training time: 0.958 [sec],avg speed: 128252.612 [imgs/sec],loss=3.254
[Training][Epoch 65] training time: 0.958 [sec],avg speed: 128252.612 [imgs/sec],loss=3.254
:::MLLOG {"namespace": "", "time_ms": 1593100485036, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1593100485047, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 65}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.291 [ms], allgather: 38.225 [ms], asnumpy: 7.176 [ms], speed: 34555.946 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.291 [ms], allgather: 38.225 [ms], asnumpy: 7.176 [ms], speed: 34555.946 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.762 [ms], allgather: 37.657 [ms], asnumpy: 7.218 [ms], speed: 34097.316 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.762 [ms], allgather: 37.657 [ms], asnumpy: 7.218 [ms], speed: 34097.316 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.641 [ms], allgather: 38.419 [ms], asnumpy: 6.554 [ms], speed: 34336.873 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.641 [ms], allgather: 38.419 [ms], asnumpy: 6.554 [ms], speed: 34336.873 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.665 [ms], allgather: 38.073 [ms], asnumpy: 7.368 [ms], speed: 33988.892 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.665 [ms], allgather: 38.073 [ms], asnumpy: 7.368 [ms], speed: 33988.892 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.993 [ms], allgather: 38.750 [ms], asnumpy: 7.256 [ms], speed: 34013.257 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.993 [ms], allgather: 38.750 [ms], asnumpy: 7.256 [ms], speed: 34013.257 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.240 [ms], allgather: 37.206 [ms], asnumpy: 7.267 [ms], speed: 34079.640 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.240 [ms], allgather: 37.206 [ms], asnumpy: 7.267 [ms], speed: 34079.640 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.933 [ms], allgather: 38.271 [ms], asnumpy: 6.969 [ms], speed: 33973.199 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.933 [ms], allgather: 38.271 [ms], asnumpy: 6.969 [ms], speed: 33973.199 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 103.892 [ms], allgather: 36.240 [ms], asnumpy: 7.087 [ms], speed: 33962.636 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 103.892 [ms], allgather: 36.240 [ms], asnumpy: 7.087 [ms], speed: 33962.636 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.487 [ms], allgather: 36.785 [ms], asnumpy: 7.193 [ms], speed: 34137.334 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.487 [ms], allgather: 36.785 [ms], asnumpy: 7.193 [ms], speed: 34137.334 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.639 [ms], allgather: 37.985 [ms], asnumpy: 7.675 [ms], speed: 33944.220 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.639 [ms], allgather: 37.985 [ms], asnumpy: 7.675 [ms], speed: 33944.220 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.173 [ms], allgather: 38.890 [ms], asnumpy: 7.332 [ms], speed: 34153.901 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.173 [ms], allgather: 38.890 [ms], asnumpy: 7.332 [ms], speed: 34153.901 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.782 [ms], allgather: 38.850 [ms], asnumpy: 7.636 [ms], speed: 34418.925 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.782 [ms], allgather: 38.850 [ms], asnumpy: 7.636 [ms], speed: 34418.925 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.069 [ms], allgather: 38.475 [ms], asnumpy: 6.960 [ms], speed: 34128.334 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.069 [ms], allgather: 38.475 [ms], asnumpy: 6.960 [ms], speed: 34128.334 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.311 [ms], allgather: 40.307 [ms], asnumpy: 7.408 [ms], speed: 34007.466 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.311 [ms], allgather: 40.307 [ms], asnumpy: 7.408 [ms], speed: 34007.466 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.219 [ms], allgather: 39.571 [ms], asnumpy: 7.529 [ms], speed: 33939.661 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.219 [ms], allgather: 39.571 [ms], asnumpy: 7.529 [ms], speed: 33939.661 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.492 [ms], allgather: 38.920 [ms], asnumpy: 6.873 [ms], speed: 33947.187 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.492 [ms], allgather: 38.920 [ms], asnumpy: 6.873 [ms], speed: 33947.187 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.407 [ms], allgather: 39.603 [ms], asnumpy: 7.680 [ms], speed: 33854.027 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.407 [ms], allgather: 39.603 [ms], asnumpy: 7.680 [ms], speed: 33854.027 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 102.006 [ms], allgather: 37.698 [ms], asnumpy: 7.582 [ms], speed: 33947.242 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 102.006 [ms], allgather: 37.698 [ms], asnumpy: 7.582 [ms], speed: 33947.242 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.932 [ms], allgather: 38.858 [ms], asnumpy: 6.722 [ms], speed: 33895.119 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.932 [ms], allgather: 38.858 [ms], asnumpy: 6.722 [ms], speed: 33895.119 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.146 [ms], allgather: 41.050 [ms], asnumpy: 7.313 [ms], speed: 34361.403 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.146 [ms], allgather: 41.050 [ms], asnumpy: 7.313 [ms], speed: 34361.403 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.689 [ms], allgather: 41.392 [ms], asnumpy: 7.511 [ms], speed: 33876.667 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.689 [ms], allgather: 41.392 [ms], asnumpy: 7.511 [ms], speed: 33876.667 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.754 [ms], allgather: 37.369 [ms], asnumpy: 7.528 [ms], speed: 34094.267 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.754 [ms], allgather: 37.369 [ms], asnumpy: 7.528 [ms], speed: 34094.267 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.032 [ms], allgather: 39.472 [ms], asnumpy: 7.481 [ms], speed: 33786.722 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.032 [ms], allgather: 39.472 [ms], asnumpy: 7.481 [ms], speed: 33786.722 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.693 [ms], allgather: 37.949 [ms], asnumpy: 7.929 [ms], speed: 34347.165 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.693 [ms], allgather: 37.949 [ms], asnumpy: 7.929 [ms], speed: 34347.165 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.200 [ms], allgather: 49.269 [ms], asnumpy: 7.188 [ms], speed: 33861.625 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.200 [ms], allgather: 49.269 [ms], asnumpy: 7.188 [ms], speed: 33861.625 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.011 [ms], allgather: 40.668 [ms], asnumpy: 7.224 [ms], speed: 34035.780 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.011 [ms], allgather: 40.668 [ms], asnumpy: 7.224 [ms], speed: 34035.780 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 90.219 [ms], allgather: 49.267 [ms], asnumpy: 8.134 [ms], speed: 33870.320 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 90.219 [ms], allgather: 49.267 [ms], asnumpy: 8.134 [ms], speed: 33870.320 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.946 [ms], allgather: 38.290 [ms], asnumpy: 7.150 [ms], speed: 33924.069 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.946 [ms], allgather: 38.290 [ms], asnumpy: 7.150 [ms], speed: 33924.069 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 96.768 [ms], allgather: 43.192 [ms], asnumpy: 8.364 [ms], speed: 33709.658 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 96.768 [ms], allgather: 43.192 [ms], asnumpy: 8.364 [ms], speed: 33709.658 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100485196, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 66, "current_iter_num": 0}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.273 [ms], allgather: 39.272 [ms], asnumpy: 7.818 [ms], speed: 33700.774 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.273 [ms], allgather: 39.272 [ms], asnumpy: 7.818 [ms], speed: 33700.774 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.289 [ms], allgather: 48.582 [ms], asnumpy: 8.140 [ms], speed: 33781.171 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.289 [ms], allgather: 48.582 [ms], asnumpy: 8.140 [ms], speed: 33781.171 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.373 [ms], allgather: 48.130 [ms], asnumpy: 7.773 [ms], speed: 34181.624 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.373 [ms], allgather: 48.130 [ms], asnumpy: 7.773 [ms], speed: 34181.624 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.867 [ms], allgather: 39.132 [ms], asnumpy: 7.923 [ms], speed: 33800.881 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.867 [ms], allgather: 39.132 [ms], asnumpy: 7.923 [ms], speed: 33800.881 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.054 [ms], allgather: 39.037 [ms], asnumpy: 7.686 [ms], speed: 34775.238 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.054 [ms], allgather: 39.037 [ms], asnumpy: 7.686 [ms], speed: 34775.238 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.797 [ms], allgather: 39.827 [ms], asnumpy: 7.129 [ms], speed: 34781.351 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.797 [ms], allgather: 39.827 [ms], asnumpy: 7.129 [ms], speed: 34781.351 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.696 [ms], allgather: 38.851 [ms], asnumpy: 10.182 [ms], speed: 33393.502 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.696 [ms], allgather: 38.851 [ms], asnumpy: 10.182 [ms], speed: 33393.502 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.871 [ms], allgather: 38.029 [ms], asnumpy: 9.976 [ms], speed: 33360.408 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.871 [ms], allgather: 38.029 [ms], asnumpy: 9.976 [ms], speed: 33360.408 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.884 [ms], allgather: 41.609 [ms], asnumpy: 8.498 [ms], speed: 33558.674 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.884 [ms], allgather: 41.609 [ms], asnumpy: 8.498 [ms], speed: 33558.674 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.897 [ms], allgather: 38.578 [ms], asnumpy: 9.784 [ms], speed: 33275.926 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.897 [ms], allgather: 38.578 [ms], asnumpy: 9.784 [ms], speed: 33275.926 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.873 [ms], allgather: 39.197 [ms], asnumpy: 10.227 [ms], speed: 33715.674 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.873 [ms], allgather: 39.197 [ms], asnumpy: 10.227 [ms], speed: 33715.674 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 86.986 [ms], allgather: 54.027 [ms], asnumpy: 8.578 [ms], speed: 33424.265 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 86.986 [ms], allgather: 54.027 [ms], asnumpy: 8.578 [ms], speed: 33424.265 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.262 [ms], allgather: 37.965 [ms], asnumpy: 10.920 [ms], speed: 33749.857 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.262 [ms], allgather: 37.965 [ms], asnumpy: 10.920 [ms], speed: 33749.857 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.041 [ms], allgather: 37.641 [ms], asnumpy: 10.680 [ms], speed: 33475.430 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.041 [ms], allgather: 37.641 [ms], asnumpy: 10.680 [ms], speed: 33475.430 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.376 [ms], allgather: 40.659 [ms], asnumpy: 9.674 [ms], speed: 33176.118 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.376 [ms], allgather: 40.659 [ms], asnumpy: 9.674 [ms], speed: 33176.118 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.863 [ms], allgather: 39.018 [ms], asnumpy: 10.796 [ms], speed: 33629.601 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.863 [ms], allgather: 39.018 [ms], asnumpy: 10.796 [ms], speed: 33629.601 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 103.776 [ms], allgather: 35.964 [ms], asnumpy: 10.945 [ms], speed: 33181.210 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 103.776 [ms], allgather: 35.964 [ms], asnumpy: 10.945 [ms], speed: 33181.210 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.321 [ms], allgather: 36.837 [ms], asnumpy: 10.925 [ms], speed: 33538.119 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.321 [ms], allgather: 36.837 [ms], asnumpy: 10.925 [ms], speed: 33538.119 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.441 [ms], allgather: 37.789 [ms], asnumpy: 10.944 [ms], speed: 33074.143 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.441 [ms], allgather: 37.789 [ms], asnumpy: 10.944 [ms], speed: 33074.143 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.948 [ms], allgather: 37.150 [ms], asnumpy: 10.979 [ms], speed: 34945.835 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.948 [ms], allgather: 37.150 [ms], asnumpy: 10.979 [ms], speed: 34945.835 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.397 [ms], allgather: 38.862 [ms], asnumpy: 11.007 [ms], speed: 33053.916 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.397 [ms], allgather: 38.862 [ms], asnumpy: 11.007 [ms], speed: 33053.916 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 103.657 [ms], allgather: 36.733 [ms], asnumpy: 10.943 [ms], speed: 33039.492 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 103.657 [ms], allgather: 36.733 [ms], asnumpy: 10.943 [ms], speed: 33039.492 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.033 [ms], allgather: 42.610 [ms], asnumpy: 10.092 [ms], speed: 34785.505 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.033 [ms], allgather: 42.610 [ms], asnumpy: 10.092 [ms], speed: 34785.505 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 94.503 [ms], allgather: 49.040 [ms], asnumpy: 6.989 [ms], speed: 33215.001 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 94.503 [ms], allgather: 49.040 [ms], asnumpy: 6.989 [ms], speed: 33215.001 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.546 [ms], allgather: 46.155 [ms], asnumpy: 6.849 [ms], speed: 33211.056 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.546 [ms], allgather: 46.155 [ms], asnumpy: 6.849 [ms], speed: 33211.056 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 97.450 [ms], allgather: 46.951 [ms], asnumpy: 6.921 [ms], speed: 33041.470 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 97.450 [ms], allgather: 46.951 [ms], asnumpy: 6.921 [ms], speed: 33041.470 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.829 [ms], allgather: 47.156 [ms], asnumpy: 9.514 [ms], speed: 32786.647 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.829 [ms], allgather: 47.156 [ms], asnumpy: 9.514 [ms], speed: 32786.647 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 84.813 [ms], allgather: 59.088 [ms], asnumpy: 9.943 [ms], speed: 32500.128 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 84.813 [ms], allgather: 59.088 [ms], asnumpy: 9.943 [ms], speed: 32500.128 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 93.891 [ms], allgather: 52.186 [ms], asnumpy: 6.370 [ms], speed: 32797.774 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 93.891 [ms], allgather: 52.186 [ms], asnumpy: 6.370 [ms], speed: 32797.774 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.331 [ms], allgather: 58.074 [ms], asnumpy: 7.494 [ms], speed: 32488.346 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.331 [ms], allgather: 58.074 [ms], asnumpy: 7.494 [ms], speed: 32488.346 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.971 [ms], allgather: 52.599 [ms], asnumpy: 7.577 [ms], speed: 30835.800 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.971 [ms], allgather: 52.599 [ms], asnumpy: 7.577 [ms], speed: 30835.800 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.390 [ms], allgather: 53.613 [ms], asnumpy: 8.038 [ms], speed: 30856.035 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.390 [ms], allgather: 53.613 [ms], asnumpy: 8.038 [ms], speed: 30856.035 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.585 [ms], allgather: 52.084 [ms], asnumpy: 7.733 [ms], speed: 30787.408 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.585 [ms], allgather: 52.084 [ms], asnumpy: 7.733 [ms], speed: 30787.408 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.431 [ms], allgather: 56.698 [ms], asnumpy: 7.596 [ms], speed: 32314.935 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.431 [ms], allgather: 56.698 [ms], asnumpy: 7.596 [ms], speed: 32314.935 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.323 [ms], allgather: 51.337 [ms], asnumpy: 8.954 [ms], speed: 32338.155 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.323 [ms], allgather: 51.337 [ms], asnumpy: 8.954 [ms], speed: 32338.155 [imgs/sec]
INFO:root:[Training][Iteration 3800][Epoch 66, Batch 30/58] lr: 0.02925, training time: 15.999 [ms], speed: 128008.706 [imgs/sec], loss=1.466
[Training][Iteration 3800][Epoch 66, Batch 30/58] lr: 0.02925, training time: 15.999 [ms], speed: 128008.706 [imgs/sec], loss=1.466
INFO:root:[Training][Epoch 66] training time: 0.946 [sec],avg speed: 129902.463 [imgs/sec],loss=3.213
[Training][Epoch 66] training time: 0.946 [sec],avg speed: 129902.463 [imgs/sec],loss=3.213
:::MLLOG {"namespace": "", "time_ms": 1593100486142, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 66}}
:::MLLOG {"namespace": "", "time_ms": 1593100486142, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 67, "current_iter_num": 0}}
INFO:root:[Training][Epoch 67] training time: 0.639 [sec],avg speed: 128194.059 [imgs/sec],loss=3.314
[Training][Epoch 67] training time: 0.639 [sec],avg speed: 128194.059 [imgs/sec],loss=3.314
:::MLLOG {"namespace": "", "time_ms": 1593100486781, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 67}}
:::MLLOG {"namespace": "", "time_ms": 1593100486782, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 68, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3900][Epoch 68, Batch 14/58] lr: 0.02925, training time: 16.425 [ms], speed: 124685.417 [imgs/sec], loss=4.538
[Training][Iteration 3900][Epoch 68, Batch 14/58] lr: 0.02925, training time: 16.425 [ms], speed: 124685.417 [imgs/sec], loss=4.538
INFO:root:[Training][Epoch 68] training time: 0.976 [sec],avg speed: 125952.674 [imgs/sec],loss=3.315
[Training][Epoch 68] training time: 0.976 [sec],avg speed: 125952.674 [imgs/sec],loss=3.315
:::MLLOG {"namespace": "", "time_ms": 1593100487758, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 68}}
:::MLLOG {"namespace": "", "time_ms": 1593100487758, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 69, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1593100488141, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1593100488141, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.23125592277895027, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 65}}
INFO:root:[Training][Iteration 4000][Epoch 69, Batch 56/58] lr: 0.02925, training time: 16.078 [ms], speed: 127380.414 [imgs/sec], loss=4.602
[Training][Iteration 4000][Epoch 69, Batch 56/58] lr: 0.02925, training time: 16.078 [ms], speed: 127380.414 [imgs/sec], loss=4.602
INFO:root:[Training][Epoch 69] training time: 0.966 [sec],avg speed: 127176.552 [imgs/sec],loss=3.195
[Training][Epoch 69] training time: 0.966 [sec],avg speed: 127176.552 [imgs/sec],loss=3.195
:::MLLOG {"namespace": "", "time_ms": 1593100488724, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 69}}
:::MLLOG {"namespace": "", "time_ms": 1593100488725, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 520, "status": "success"}}
INFO:root:Rank 0 done. map=23.125592277895027 @ epoch=65
Rank 0 done. map=23.125592277895027 @ epoch=65
INFO:root:Rank 864 done. map=23.125592277895027 @ epoch=-1
Rank 864 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 768 done. map=23.125592277895027 @ epoch=-1
Rank 768 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 640 done. map=23.125592277895027 @ epoch=-1
Rank 640 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 272 done. map=23.125592277895027 @ epoch=-1
Rank 272 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 816 done. map=23.125592277895027 @ epoch=-1
Rank 816 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 784 done. map=23.125592277895027 @ epoch=-1
Rank 784 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 464 done. map=23.125592277895027 @ epoch=-1
Rank 464 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 496 done. map=23.125592277895027 @ epoch=-1
Rank 496 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 976 done. map=23.125592277895027 @ epoch=-1
Rank 976 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 80 done. map=23.125592277895027 @ epoch=-1
Rank 80 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 352 done. map=23.125592277895027 @ epoch=-1
Rank 352 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 896 done. map=23.125592277895027 @ epoch=-1
Rank 896 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 672 done. map=23.125592277895027 @ epoch=-1
Rank 672 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 256 done. map=23.125592277895027 @ epoch=-1
Rank 256 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 128 done. map=23.125592277895027 @ epoch=-1
Rank 128 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 704 done. map=23.125592277895027 @ epoch=-1
Rank 704 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 288 done. map=23.125592277895027 @ epoch=-1
Rank 288 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 32 done. map=23.125592277895027 @ epoch=-1
Rank 32 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 224 done. map=23.125592277895027 @ epoch=-1
Rank 224 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 848 done. map=23.125592277895027 @ epoch=-1
Rank 848 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 16 done. map=23.125592277895027 @ epoch=-1
Rank 16 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 368 done. map=23.125592277895027 @ epoch=-1
Rank 368 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 176 done. map=23.125592277895027 @ epoch=-1
Rank 176 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 560 done. map=23.125592277895027 @ epoch=-1
Rank 560 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 240 done. map=23.125592277895027 @ epoch=-1
Rank 240 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 112 done. map=23.125592277895027 @ epoch=-1
Rank 112 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 880 done. map=23.125592277895027 @ epoch=-1
Rank 880 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 720 done. map=23.125592277895027 @ epoch=-1
Rank 720 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 96 done. map=23.125592277895027 @ epoch=-1
Rank 96 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 384 done. map=23.125592277895027 @ epoch=-1
Rank 384 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 192 done. map=23.125592277895027 @ epoch=-1
Rank 192 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 160 done. map=23.125592277895027 @ epoch=-1
Rank 160 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 416 done. map=23.125592277895027 @ epoch=-1
Rank 416 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 544 done. map=23.125592277895027 @ epoch=-1
Rank 544 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 64 done. map=23.125592277895027 @ epoch=-1
Rank 64 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 432 done. map=23.125592277895027 @ epoch=-1
Rank 432 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 688 done. map=23.125592277895027 @ epoch=-1
Rank 688 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 48 done. map=23.125592277895027 @ epoch=-1
Rank 48 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 400 done. map=23.125592277895027 @ epoch=-1
Rank 400 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 1008 done. map=23.125592277895027 @ epoch=-1
Rank 1008 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 736 done. map=23.125592277895027 @ epoch=-1
Rank 736 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 304 done. map=23.125592277895027 @ epoch=-1
Rank 304 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 208 done. map=23.125592277895027 @ epoch=-1
Rank 208 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 656 done. map=23.125592277895027 @ epoch=-1
Rank 656 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 592 done. map=23.125592277895027 @ epoch=-1
Rank 592 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 912 done. map=23.125592277895027 @ epoch=-1
Rank 912 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 960 done. map=23.125592277895027 @ epoch=-1
Rank 960 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 928 done. map=23.125592277895027 @ epoch=-1
Rank 928 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 576 done. map=23.125592277895027 @ epoch=-1
Rank 576 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 624 done. map=23.125592277895027 @ epoch=-1
Rank 624 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 752 done. map=23.125592277895027 @ epoch=-1
Rank 752 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 336 done. map=23.125592277895027 @ epoch=-1
Rank 336 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 944 done. map=23.125592277895027 @ epoch=-1
Rank 944 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 512 done. map=23.125592277895027 @ epoch=-1
Rank 512 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 832 done. map=23.125592277895027 @ epoch=-1
Rank 832 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 480 done. map=23.125592277895027 @ epoch=-1
Rank 480 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 800 done. map=23.125592277895027 @ epoch=-1
Rank 800 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 992 done. map=23.125592277895027 @ epoch=-1
Rank 992 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 608 done. map=23.125592277895027 @ epoch=-1
Rank 608 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 320 done. map=23.125592277895027 @ epoch=-1
Rank 320 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 448 done. map=23.125592277895027 @ epoch=-1
Rank 448 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 528 done. map=23.125592277895027 @ epoch=-1
Rank 528 done. map=23.125592277895027 @ epoch=-1
INFO:root:Rank 144 done. map=23.125592277895027 @ epoch=-1
Rank 144 done. map=23.125592277895027 @ epoch=-1
loading annotations into memory...
Done (t=0.13s)
creating index...
Loading and preparing results...
DONE (t=0.21s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.30s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17710
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.32347
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17623
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26200
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18564
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.27100
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.28094
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28094
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.38s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.28s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.18070
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.33046
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.18146
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26781
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18956
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.27489
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.28525
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28525
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.38s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.21s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17688
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.33048
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17347
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26453
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18893
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.27092
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.28142
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28142
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.50s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.49s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.19323
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.34870
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.19342
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27434
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.19755
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.28344
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.29440
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.29440
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.50s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.34s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23126
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.39208
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.23710
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.31272
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.22278
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.31999
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.33189
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.33189
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:57 AM
RESULT,SINGLE_STAGE_DETECTOR,,140,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:58 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:58 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:58 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:58 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:58 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:58 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:58 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:58 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:58 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:54:58 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:52:37 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2020-06-25 08:55:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,143,nvidia,2020-06-25 08:52:37 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2020-06-25 08:55:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,143,nvidia,2020-06-25 08:52:37 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2020-06-25 08:55:02 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:02 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:02 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,145,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
slurmstepd: error: _is_a_lwp: open() /proc/84128/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
slurmstepd: error: _is_a_lwp: open() /proc/81907/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
slurmstepd: error: _is_a_lwp: open() /proc/74108/status failed: No such file or directory
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
slurmstepd: error: _is_a_lwp: open() /proc/80703/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
slurmstepd: error: _is_a_lwp: open() /proc/67987/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
slurmstepd: error: _is_a_lwp: open() /proc/68101/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
slurmstepd: error: _is_a_lwp: open() /proc/81476/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
slurmstepd: error: _is_a_lwp: open() /proc/82716/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:03 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
slurmstepd: error: _is_a_lwp: open() /proc/80391/status failed: No such file or directory
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
slurmstepd: error: _is_a_lwp: open() /proc/81727/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
ENDING TIMING RUN AT 2020-06-25 08:55:04 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:52:37 AM
