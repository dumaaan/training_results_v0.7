+ echo 'Beginning trial 4 of 5'
Beginning trial 4 of 5
+ srun -N1 -n1 --container-name=single_stage_detector python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.SSD)'
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
:::MLLOG {"namespace": "", "time_ms": 1593100509090, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "ssd", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 75}}
:::MLLOG {"namespace": "", "time_ms": 1593100509096, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "NVIDIA", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 80}}
:::MLLOG {"namespace": "", "time_ms": 1593100509096, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 84}}
:::MLLOG {"namespace": "", "time_ms": 1593100509096, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 88}}
:::MLLOG {"namespace": "", "time_ms": 1593100509096, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "64xNVIDIA DGX-2H", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 92}}
+ '[' 1 -eq 1 ']'
+ srun --ntasks=64 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n034
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n091
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n089
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n068
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n074
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n053
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n080
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n093
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n052
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n036
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n064
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n056
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n038
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n079
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n071
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n050
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n060
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n083
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n043
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n082
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n061
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n037
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n078
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n067
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n063
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n047
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n072
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n055
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n069
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n040
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n087
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n054
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n046
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n041
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n075
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n048
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n042
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n058
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n032
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n030
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n062
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n066
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n081
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n077
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n044
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n049
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n057
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n035
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n065
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n031
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n086
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n088
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n084
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n051
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n076
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n033
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n059
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n092
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n045
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n039
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n073
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n085
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n090
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n029
vm.drop_caches = 3
+ srun --ntasks=64 --container-name=single_stage_detector python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import log_event
log_event(key=constants.CACHE_CLEAR, value=True)'
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
:::MLLOG {"namespace": "", "time_ms": 1593100649795, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ srun --mpi=pmix --ntasks=1024 --ntasks-per-node=16 --container-name=single_stage_detector --container-mounts=/raid/datasets/coco/coco-2017:/data,/gpfs/fs1/svcnvdlfw/14238152/results:/results,/raid/datasets/coco/coco-2017/coco2017/models:/pretrained/mxnet ./run_and_time.sh
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 4 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 4 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
running benchmark
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
running benchmark
+ declare -a CMD
+ '[' -n 14 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 1 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 15 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 2 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ '[' -n 0 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 3 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 9 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ '[' -n 11 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' -n 1 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ declare -a CMD
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' -n 3 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 2 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 0 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 10 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 11 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 5 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 7 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
running benchmark
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 12 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 2 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 1 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ declare -a CMD
+ '[' -n 15 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 14 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 11 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
running benchmark
+ '[' -n 8 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 3 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 12 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 15 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ '[' -n 10 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 7 ']'
running benchmark
+ '[' -n 3 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 0 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 5 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 0 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 14 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 12 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 11 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
running benchmark
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 8 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ '[' -n 9 ']'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
running benchmark
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 4 ']'
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 12 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 13 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 3 ']'
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 5 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 15 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 11 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 7 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 2 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
running benchmark
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ echo 'running benchmark'
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
running benchmark
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 3 ']'
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ '[' -n 14 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ '[' -n 15 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ '[' -n 8 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 13 ']'
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 13 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' -n 14 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 10 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 5 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 4 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ '[' -n 1 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 9 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 8 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ '[' -n 3 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ '[' -n 15 ']'
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' -n 7 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 15 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 1 ']'
+ cluster=circe
running benchmark
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 12 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 2 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 11 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ echo 'running benchmark'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 8 ']'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 2 ']'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 0 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
running benchmark
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 12 ']'
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' -n 11 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 2 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 5 ']'
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 12 ']'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ cluster=circe
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ '[' 1024 -gt 64 ']'
running benchmark
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
running benchmark
+ '[' -n 5 ']'
+ '[' -n 9 ']'
running benchmark
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ '[' -n 14 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 4 ']'
running benchmark
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 7 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' -n 4 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
running benchmark
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ '[' -n 3 ']'
+ '[' -n 7 ']'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 13 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ cluster=circe
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ cluster=circe
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 2 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 8 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' -n 2 ']'
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 5 ']'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ '[' -n 7 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 2 ']'
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 9 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 11 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 1 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ '[' -n 12 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 1 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 13 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 13 ']'
+ NUMEPOCHS=80
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
running benchmark
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 14 ']'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 8 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 2 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ '[' -n 0 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 11 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 9 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 8 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
running benchmark
+ declare -a CMD
+ cluster=
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ declare -a CMD
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 14 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 12 ']'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
running benchmark
+ '[' -n 14 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 12 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 13 ']'
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 3 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 10 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ '[' -n 2 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 15 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 12 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 11 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 7 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' -n 2 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 15 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ '[' -n 1 ']'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 13 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ '[' -n 7 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
running benchmark
+ '[' -n 6 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 3 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 11 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 15 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 11 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 14 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ NUMEPOCHS=80
running benchmark
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 9 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 4 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 4 ']'
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 12 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 14 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 5 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
running benchmark
+ declare -a CMD
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 5 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 6 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ '[' -n 12 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 10 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ NUMEPOCHS=80
+ '[' -n 13 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 3 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' -n 1 ']'
running benchmark
+ '[' -n 7 ']'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ '[' -n 13 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ '[' -n 13 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' -n 4 ']'
+ '[' -n 3 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 9 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
running benchmark
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 10 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 9 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 0 ']'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 1 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ '[' -n 8 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 11 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 12 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 12 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' -n 5 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 5 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 4 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 4 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 13 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ DATASET_DIR=/data/coco2017
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 11 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 0 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 4 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 15 ']'
+ cluster=circe
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ declare -a CMD
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 11 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ NUMEPOCHS=80
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 4 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 0 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 9 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 14 ']'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ '[' -n 14 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ '[' -n 10 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ '[' -n 2 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 11 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 13 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 11 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 8 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 15 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 8 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 1 ']'
+ cluster=
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ '[' -n 14 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 1 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' -n 13 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 5 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 14 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 14 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 9 ']'
+ '[' -n 12 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 10 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 2 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 5 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 0 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ '[' -n 15 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 6 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 2 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 4 ']'
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 13 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 8 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 0 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 4 ']'
+ '[' -n 6 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' -n 1 ']'
running benchmark
+ '[' -n 2 ']'
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ '[' -n 13 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 8 ']'
+ cluster=circe
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 7 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 11 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 10 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 1 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 14 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' -n 0 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 10 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 5 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' -n 15 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 12 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 14 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 6 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 0 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 2 ']'
+ '[' -n 8 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 6 ']'
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 10 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ DATASET_DIR=/data/coco2017
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 9 ']'
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 3 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 1 ']'
+ declare -a CMD
running benchmark
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' -n 2 ']'
+ cluster=
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 12 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ '[' -n 10 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 12 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 1 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 12 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 10 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 5 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' -n 14 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 7 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 3 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 11 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
running benchmark
+ '[' -n 9 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 10 ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 15 ']'
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 7 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ '[' -n 9 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 0 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 12 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ '[' -n 9 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 15 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 6 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 15 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 3 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ '[' -n 10 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 13 ']'
+ '[' -n 0 ']'
+ NUMEPOCHS=80
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ '[' -n 14 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ '[' -n 7 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 11 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 15 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 6 ']'
+ cluster=circe
+ '[' -n 6 ']'
running benchmark
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ '[' -n 0 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 9 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
running benchmark
+ NUMEPOCHS=80
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 11 ']'
running benchmark
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 5 ']'
+ cluster=
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 5 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ '[' -n 0 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ '[' -n 14 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ cluster=circe
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 10 ']'
+ '[' -n 2 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ '[' -n 13 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ '[' -n 12 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 12 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 14 ']'
+ cluster=
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 10 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 8 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
running benchmark
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 11 ']'
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 9 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 2 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 15 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 13 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ '[' -n 10 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 6 ']'
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 1 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 0 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ '[' -n 10 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
STARTING TIMING RUN AT 2020-06-25 08:57:33 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657234, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657235, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657314, "event_type": "POINT_IN_TIME", "key": "sgd", "value": 1270554685, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 193}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657238, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657237, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657239, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657241, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657241, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657241, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657241, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657241, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657241, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657241, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657241, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657241, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657241, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657242, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657242, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657241, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657243, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657246, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657246, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657246, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657246, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657246, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657246, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657246, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657246, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657246, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657248, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657249, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657249, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657249, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657249, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657249, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657249, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657247, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657250, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657251, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657252, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657260, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657253, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657260, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657254, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657262, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657255, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657263, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657256, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657257, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657259, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657261, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657258, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657271, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657260, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657271, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657272, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657272, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657270, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657270, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657270, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657272, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657275, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657275, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657272, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657276, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657276, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657276, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657276, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657274, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657274, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657272, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657274, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657274, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657271, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657271, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657274, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657274, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657273, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657274, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657273, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657274, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657278, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657278, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657267, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657288, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657289, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657291, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657291, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657288, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657288, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657295, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657295, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657296, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657296, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657301, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100657301, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100658437, "event_type": "POINT_IN_TIME", "key": "seed", "value": 1270554685, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 218}}
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554685, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554685, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1270554685
Seed: 1270554685
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn group: 8
bn group: 8
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI global rank: 0
MPI global rank: 0
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554701, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554701, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1270554701
Seed: 1270554701
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 16
MPI global rank: 16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554717, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554717, start_epoch=1, synthetic=FalseINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554733, start_epoch=1, synth, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1270554717
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554733, start_epoch=1, synthetic=FalseSeed: 1270554717
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:precision: fp16
precision: fp16
INFO:root:Seed: 1270554733
Seed: 1270554733
INFO:root:loss scaling: 128.0
INFO:root:precision: fp16
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 32
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 32
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 48
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 48
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554781, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554781, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270554781
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270554781
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI global rank: 96
MPI global rank: 96
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554797, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554797, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270554797
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270554797
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554749, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554749, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270554749
Seed: 1270554749
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554909, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554925, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554925, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 112
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 112
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270554925
Seed: 1270554925
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554909, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 64
MPI global rank: 64
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555437, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270554909
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270554909
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555437, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555437
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555181, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
Seed: 1270555437
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555693, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554765, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555181, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 240
MPI global rank: 240
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555693, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554765, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555181
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270555181
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555693
Seed: 1270555693
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270554765
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554877, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270554765
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555677, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555165, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555421, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554877, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 224
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555677, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555165, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 224
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555421, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270554877
Seed: 1270554877
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555677
Seed: 1270555677
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555165
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555421
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270555165
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270555421
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 752
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 752
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 1008
MPI global rank: 1008
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 496
MPI global rank: 496
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 192
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 192
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 80
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554893, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 992
MPI global rank: 992
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 80
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 736
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554893, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 480
MPI global rank: 480
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 736
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270554893
Seed: 1270554893
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554813, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555389, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554813, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555645, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555133, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1270554813
Seed: 1270554813
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555389, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555133, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554845, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555549, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555389
Seed: 1270555389
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555133
Seed: 1270555133
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554845, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555549, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555645, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 208
MPI global rank: 208
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1270554845
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555293, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1270555645
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270554845
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555549
Seed: 1270555549
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555037, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270555645
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555293, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 128
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 128
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555309, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554829, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555293
Seed: 1270555293
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555037, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554829, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555053, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555309, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555037
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555565, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270554829
Seed: 1270554829
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555053, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270555037
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555309
Seed: 1270555309
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 448
MPI global rank: 448
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555565, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555053
Seed: 1270555053
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 704
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 160
MPI global rank: 160
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 704
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555149, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555565
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555149, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
Seed: 1270555565
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 864
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555405, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555661, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 960
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 864
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555149
Seed: 1270555149
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 960
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555405, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555661, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 624
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 624
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555405
Seed: 1270555405
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555661
Seed: 1270555661
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 608
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 608
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 144
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555357, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555613, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555101, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555117, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 144
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555517, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555629, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555357, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554861, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555613, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555101, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555117, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 464
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555517, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555629, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1270555101
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555325, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 464
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555069, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555357
Seed: 1270555357
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554861, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 368
MPI global rank: 368
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555613
Seed: 1270555613
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270555101
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555581, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555005, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555117
Seed: 1270555117
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555517
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555629
Seed: 1270555629
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 352
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555325, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 880
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270555517
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555069, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555373, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270554861
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555261, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 352
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555581, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555005, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1270555325
Seed: 1270555325
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 880
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 976
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Seed: 1270554861
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555277, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 976
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1270555069
Seed: 1270555069
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555373, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555261, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI local rank: 0
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1270555581
Seed: 1270555581
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:bn group: 8
bn group: 8
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:precision: fp16
precision: fp16
fuse bn relu: True
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
precision: fp16
[SSD] network: resnet34_v1
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555021, start_epoch=1, synthINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
fuse bn relu: True
INFO:root:[SSD] bn group: 8
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555277, start_epoch=1, synthetic=Falseloss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:MPI global rank: 720
[SSD] network: resnet34_v1
async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555341, start_epoch=1, synthINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn add relu: True
INFO:root:Seed: 1270555373
INFO:root:loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:fuse bn relu: True
INFO:root:Seed: 1270555261
Seed: 1270555261
INFO:root:fuse bn add relu: True
fuse bn add relu: True
[SSD] bn group: 8
async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1270555005
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
MPI global rank: 720
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555597, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:bn group: 8
bn group: 8
Seed: 1270555373
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555085, start_epoch=1, synthloss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555021, start_epoch=1, synthetic=Falsefuse bn relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:bn group: 8
INFO:root:[SSD] network: resnet34_v1
INFO:root:Seed: 1270555277
INFO:root:fuse bn relu: True
fuse bn relu: True
Seed: 1270555005
INFO:root:fuse bn relu: True
fuse bn relu: True
MPI size: 1024
INFO:root:MPI local rank: 0
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555341, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
INFO:root:precision: fp16
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI global rank: 928
INFO:root:precision: fp16
bn group: 8
[SSD] network: resnet34_v1
Seed: 1270555277
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:precision: fp16
INFO:root:MPI global rank: 432
MPI global rank: 432
INFO:root:async validation: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555533, start_epoch=1, synth[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555597, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555085, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
INFO:root:Seed: 1270555021
Seed: 1270555021
INFO:root:bn group: 8
MPI global rank: 928
precision: fp16
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:precision: fp16
precision: fp16
precision: fp16
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1270555341
Seed: 1270555341
INFO:root:precision: fp16
precision: fp16
fuse bn add relu: True
INFO:root:fuse bn relu: True
INFO:root:MPI size: 1024
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
INFO:root:precision: fp16
precision: fp16
bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:loss scaling: 128.0
INFO:root:bn group: 8
bn group: 8
INFO:root:loss scaling: 128.0
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555533, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
INFO:root:Seed: 1270555597
Seed: 1270555597
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:bn group: 8
bn group: 8
MPI size: 1024
loss scaling: 128.0
INFO:root:Seed: 1270555085
Seed: 1270555085
INFO:root:fuse bn relu: True
INFO:root:[SSD] bn group: 8
INFO:root:loss scaling: 128.0
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:async validation: True
async validation: True
INFO:root:loss scaling: 128.0
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555453, start_epoch=1, synthloss scaling: 128.0
bn group: 8
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554941, start_epoch=1, synthINFO:root:async validation: True
async validation: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
[SSD] fuse bn relu: True
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:MPI global rank: 672
MPI global rank: 672
INFO:root:precision: fp16
fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:Seed: 1270555533
Seed: 1270555533
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 416
MPI global rank: 416
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555453, start_epoch=1, synthetic=Falsenetwork name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554941, start_epoch=1, synthetic=False[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:precision: fp16
INFO:root:[SSD] bn group: 8
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:fuse bn add relu: True
fuse bn add relu: True
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:loss scaling: 128.0
fuse bn add relu: True
[SSD] bn group: 8
INFO:root:fuse bn relu: True
fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
precision: fp16
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn group: 8
bn group: 8
INFO:root:MPI global rank: 832
INFO:root:bn group: 8
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555197, start_epoch=1, synthINFO:root:async validation: True
async validation: True
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:bn group: 8
INFO:root:MPI global rank: 944
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] bn group: 8
INFO:root:fuse bn add relu: True
INFO:root:Seed: 1270555453
Seed: 1270555453
INFO:root:MPI global rank: 896
MPI global rank: 896
fuse bn relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:Seed: 1270554941
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
INFO:root:loss scaling: 128.0
INFO:root:bn group: 8
INFO:root:bn all reduce fp16: False
MPI global rank: 832
bn group: 8
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555213, start_epoch=1, synthINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555469, start_epoch=1, synthINFO:root:fuse bn add relu: True
fuse bn add relu: True
MPI global rank: 944
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:async validation: True
async validation: True
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554957, start_epoch=1, synth[SSD] bn group: 8
fuse bn add relu: True
INFO:root:precision: fp16
INFO:root:MPI local rank: 0
INFO:root:fuse bn add relu: True
Seed: 1270554941
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
loss scaling: 128.0
bn group: 8
bn all reduce fp16: False
INFO:root:MPI local rank: 0
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555197, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:bn group: 8
bn group: 8
precision: fp16
MPI local rank: 0
fuse bn add relu: True
INFO:root:MPI global rank: 640
INFO:root:precision: fp16
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI size: 1024
MPI local rank: 0
INFO:root:MPI size: 1024
MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
fuse bn add relu: True
bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555213, start_epoch=1, synthetic=FalseNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555469, start_epoch=1, synthetic=Falsebn group: 8
INFO:root:async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
fuse bn add relu: True
[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554957, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
INFO:root:loss scaling: 128.0
INFO:root:async validation: True
async validation: True
INFO:root:bn group: 8
MPI global rank: 640
INFO:root:loss scaling: 128.0
[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI global rank: 656
INFO:root:async validation: True
async validation: True
INFO:root:MPI global rank: 384
INFO:root:Seed: 1270555197
Seed: 1270555197
INFO:root:precision: fp16
precision: fp16
[SSD] network: resnet34_v1
INFO:root:bn group: 8
INFO:root:fuse bn relu: True
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
async validation: True
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:fuse bn relu: True
INFO:root:MPI global rank: 912
MPI global rank: 656
MPI global rank: 384
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
fuse bn relu: True
MPI size: 1024
INFO:root:Seed: 1270555213
Seed: 1270555213
INFO:root:Seed: 1270555469
INFO:root:MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:Seed: 1270554957
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
MPI global rank: 912
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
INFO:root:fuse bn add relu: True
INFO:root:MPI global rank: 176
INFO:root:precision: fp16
precision: fp16
Seed: 1270555469
MPI size: 1024
[SSD] network: resnet34_v1
bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
Seed: 1270554957
INFO:root:MPI global rank: 592
INFO:root:fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
bn all reduce fp16: False
fuse bn add relu: True
MPI global rank: 176
INFO:root:loss scaling: 128.0
INFO:root:MPI global rank: 336
MPI global rank: 336
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
INFO:root:precision: fp16
MPI global rank: 592
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 320
MPI global rank: 320
INFO:root:fuse bn relu: True
fuse bn relu: True
fuse bn add relu: True
INFO:root:async validation: True
async validation: True
INFO:root:async validation: True
async validation: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
INFO:root:bn group: 8
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:precision: fp16
precision: fp16
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
[SSD] fuse bn add relu: True
precision: fp16
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn group: 8
async validation: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
MPI size: 1024
bn group: 8
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:loss scaling: 128.0
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:loss scaling: 128.0
INFO:root:async validation: True
INFO:root:bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:bn group: 8
bn group: 8
bn group: 8
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI global rank: 688
INFO:root:bn all reduce fp16: False
INFO:root:async validation: True
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
loss scaling: 128.0
async validation: True
bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
MPI global rank: 688
bn all reduce fp16: False
async validation: True
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 576
MPI global rank: 576
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
INFO:root:MPI size: 1024
MPI size: 1024
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:MPI local rank: 0
INFO:root:MPI size: 1024
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 256
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
MPI size: 1024
MPI local rank: 0
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
INFO:root:bn group: 8
bn group: 8
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:[SSD] bn group: 8
MPI global rank: 256
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:async validation: True
INFO:root:MPI global rank: 400
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554989, start_epoch=1, synth[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555245, start_epoch=1, synthINFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 768
MPI global rank: 768
[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:MPI global rank: 848
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555501, start_epoch=1, synth[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 512
async validation: True
MPI global rank: 400
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:bn group: 8
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
async validation: True
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI global rank: 848
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
MPI global rank: 512
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
MPI size: 1024
bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554989, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555245, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
INFO:root:async validation: True
async validation: True
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555501, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
INFO:root:MPI global rank: 528
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
MPI local rank: 0
MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
INFO:root:Seed: 1270554989
Seed: 1270554989
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:Seed: 1270555245
Seed: 1270555245
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:async validation: True
INFO:root:Seed: 1270555501
Seed: 1270555501
INFO:root:precision: fp16
precision: fp16
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 528
MPI size: 1024
INFO:root:precision: fp16
precision: fp16
INFO:root:[SSD] fuse bn relu: True
INFO:root:precision: fp16
precision: fp16
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:async validation: True
async validation: True
async validation: True
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
INFO:root:MPI global rank: 784
INFO:root:loss scaling: 128.0
loss scaling: 128.0
[SSD] fuse bn relu: True
INFO:root:loss scaling: 128.0
INFO:root:MPI global rank: 272
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
MPI local rank: 0
MPI global rank: 784
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
MPI global rank: 272
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:async validation: True
async validation: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn group: 8
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
bn group: 8
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI size: 1024
MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 560
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 560
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 816
MPI global rank: 816
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
[SSD] bn group: 8
[SSD] bn group: 8
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
[SSD] network: resnet34_v1
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 304
MPI global rank: 304
[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
MPI local rank: 0
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554973, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270554973, start_epoch=1, synthetic=FalseINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555485, start_epoch=1, synth, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1270554973
Seed: 1270554973
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555229, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555485, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:Seed: 1270555485
Seed: 1270555485
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
INFO:root:bn group: 8
bn group: 8
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:MPI global rank: 288
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn group: 8
MPI global rank: 288
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:MPI local rank: 0
MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1270555229, start_epoch=1, synthetic=Falsebn group: 8
INFO:root:async validation: True
INFO:root:bn all reduce fp16: False
async validation: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
MPI size: 1024
INFO:root:Seed: 1270555229
Seed: 1270555229
INFO:root:precision: fp16
precision: fp16
INFO:root:MPI global rank: 800
INFO:root:loss scaling: 128.0
loss scaling: 128.0
MPI global rank: 800
INFO:root:[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:async validation: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:bn group: 8
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 544
MPI global rank: 544
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:async validation: True
async validation: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
:::MLLOG {"namespace": "", "time_ms": 1593100673076, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 363}}
:::MLLOG {"namespace": "", "time_ms": 1593100673076, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 364}}
:::MLLOG {"namespace": "", "time_ms": 1593100673077, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 1488, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 30}}
:::MLLOG {"namespace": "", "time_ms": 1593100673078, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 31}}
:::MLLOG {"namespace": "", "time_ms": 1593100673078, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.2925, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 36}}
:::MLLOG {"namespace": "", "time_ms": 1593100673078, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [60, 75], "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 37}}
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
:::MLLOG {"namespace": "", "time_ms": 1593100673886, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 5000, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 407}}
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
:::MLLOG {"namespace": "", "time_ms": 1593100677950, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 4e-05, "metadata": {"file": "/workspace/ssd/trainer.py", "lineno": 29}}
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:03] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:58:04] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Done
Done
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
:::MLLOG {"namespace": "", "time_ms": 1593100717254, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 495}}
:::MLLOG {"namespace": "", "time_ms": 1593100717347, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 499}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1593100718804, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 16, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 101}}
:::MLLOG {"namespace": "", "time_ms": 1593100718804, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 2048, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 102}}
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1593100718805, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 1, "current_iter_num": 0}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:[Training][Epoch 1] training time: 1.358 [sec],avg speed: 90501.736 [imgs/sec],loss=17.460
[Training][Epoch 1] training time: 1.358 [sec],avg speed: 90501.736 [imgs/sec],loss=17.460
:::MLLOG {"namespace": "", "time_ms": 1593100720163, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1593100720163, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 2, "current_iter_num": 0}}
INFO:root:[Training][Iteration 100][Epoch 2, Batch 42/58] lr: 0.01966, training time: 18.703 [ms], speed: 109503.238 [imgs/sec], loss=7.892
[Training][Iteration 100][Epoch 2, Batch 42/58] lr: 0.01966, training time: 18.703 [ms], speed: 109503.238 [imgs/sec], loss=7.892
INFO:root:[Training][Epoch 2] training time: 1.116 [sec],avg speed: 110133.297 [imgs/sec],loss=9.720
[Training][Epoch 2] training time: 1.116 [sec],avg speed: 110133.297 [imgs/sec],loss=9.720
:::MLLOG {"namespace": "", "time_ms": 1593100721279, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1593100721279, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 3, "current_iter_num": 0}}
INFO:root:[Training][Epoch 3] training time: 1.105 [sec],avg speed: 111199.947 [imgs/sec],loss=8.863
[Training][Epoch 3] training time: 1.105 [sec],avg speed: 111199.947 [imgs/sec],loss=8.863
:::MLLOG {"namespace": "", "time_ms": 1593100722384, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1593100722385, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 4, "current_iter_num": 0}}
INFO:root:[Training][Iteration 200][Epoch 4, Batch 26/58] lr: 0.03931, training time: 18.010 [ms], speed: 113714.533 [imgs/sec], loss=8.821
[Training][Iteration 200][Epoch 4, Batch 26/58] lr: 0.03931, training time: 18.010 [ms], speed: 113714.533 [imgs/sec], loss=8.821
INFO:root:[Training][Epoch 4] training time: 1.085 [sec],avg speed: 113301.105 [imgs/sec],loss=8.173
[Training][Epoch 4] training time: 1.085 [sec],avg speed: 113301.105 [imgs/sec],loss=8.173
:::MLLOG {"namespace": "", "time_ms": 1593100723469, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1593100723470, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 5, "current_iter_num": 0}}
INFO:root:[Training][Epoch 5] training time: 1.079 [sec],avg speed: 113890.574 [imgs/sec],loss=7.584
[Training][Epoch 5] training time: 1.079 [sec],avg speed: 113890.574 [imgs/sec],loss=7.584
:::MLLOG {"namespace": "", "time_ms": 1593100724549, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1593100724549, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 6, "current_iter_num": 0}}
INFO:root:[Training][Iteration 300][Epoch 6, Batch 10/58] lr: 0.05897, training time: 19.392 [ms], speed: 105611.136 [imgs/sec], loss=8.282
[Training][Iteration 300][Epoch 6, Batch 10/58] lr: 0.05897, training time: 19.392 [ms], speed: 105611.136 [imgs/sec], loss=8.282
INFO:root:[Training][Epoch 6] training time: 1.082 [sec],avg speed: 113563.662 [imgs/sec],loss=7.570
[Training][Epoch 6] training time: 1.082 [sec],avg speed: 113563.662 [imgs/sec],loss=7.570
:::MLLOG {"namespace": "", "time_ms": 1593100725631, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1593100725632, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 7, "current_iter_num": 0}}
INFO:root:[Training][Epoch 7] training time: 0.725 [sec],avg speed: 113034.528 [imgs/sec],loss=6.989
[Training][Epoch 7] training time: 0.725 [sec],avg speed: 113034.528 [imgs/sec],loss=6.989
:::MLLOG {"namespace": "", "time_ms": 1593100726357, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1593100726357, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 8, "current_iter_num": 0}}
INFO:root:[Training][Epoch 8] training time: 1.057 [sec],avg speed: 116248.286 [imgs/sec],loss=6.787
[Training][Epoch 8] training time: 1.057 [sec],avg speed: 116248.286 [imgs/sec],loss=6.787
:::MLLOG {"namespace": "", "time_ms": 1593100727414, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1593100727415, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 9, "current_iter_num": 0}}
INFO:root:[Training][Iteration 500][Epoch 9, Batch 36/58] lr: 0.09829, training time: 17.273 [ms], speed: 118564.261 [imgs/sec], loss=6.113
[Training][Iteration 500][Epoch 9, Batch 36/58] lr: 0.09829, training time: 17.273 [ms], speed: 118564.261 [imgs/sec], loss=6.113
INFO:root:[Training][Epoch 9] training time: 1.044 [sec],avg speed: 117712.208 [imgs/sec],loss=6.451
[Training][Epoch 9] training time: 1.044 [sec],avg speed: 117712.208 [imgs/sec],loss=6.451
:::MLLOG {"namespace": "", "time_ms": 1593100728459, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1593100728459, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 10, "current_iter_num": 0}}
INFO:root:[Training][Epoch 10] training time: 1.033 [sec],avg speed: 119008.174 [imgs/sec],loss=6.283
[Training][Epoch 10] training time: 1.033 [sec],avg speed: 119008.174 [imgs/sec],loss=6.283
:::MLLOG {"namespace": "", "time_ms": 1593100729492, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1593100729492, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 11, "current_iter_num": 0}}
INFO:root:[Training][Iteration 600][Epoch 11, Batch 20/58] lr: 0.11794, training time: 17.111 [ms], speed: 119689.399 [imgs/sec], loss=9.358
[Training][Iteration 600][Epoch 11, Batch 20/58] lr: 0.11794, training time: 17.111 [ms], speed: 119689.399 [imgs/sec], loss=9.358
INFO:root:[Training][Epoch 11] training time: 1.021 [sec],avg speed: 120356.260 [imgs/sec],loss=5.897
[Training][Epoch 11] training time: 1.021 [sec],avg speed: 120356.260 [imgs/sec],loss=5.897
:::MLLOG {"namespace": "", "time_ms": 1593100730513, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1593100730514, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 12, "current_iter_num": 0}}
INFO:root:[Training][Epoch 12] training time: 1.010 [sec],avg speed: 121722.156 [imgs/sec],loss=5.814
[Training][Epoch 12] training time: 1.010 [sec],avg speed: 121722.156 [imgs/sec],loss=5.814
:::MLLOG {"namespace": "", "time_ms": 1593100731523, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1593100731524, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 13, "current_iter_num": 0}}
INFO:root:[Training][Iteration 700][Epoch 13, Batch 4/58] lr: 0.13760, training time: 19.287 [ms], speed: 106186.224 [imgs/sec], loss=7.261
[Training][Iteration 700][Epoch 13, Batch 4/58] lr: 0.13760, training time: 19.287 [ms], speed: 106186.224 [imgs/sec], loss=7.261
INFO:root:[Training][Epoch 13] training time: 1.011 [sec],avg speed: 121489.718 [imgs/sec],loss=5.457
[Training][Epoch 13] training time: 1.011 [sec],avg speed: 121489.718 [imgs/sec],loss=5.457
:::MLLOG {"namespace": "", "time_ms": 1593100732536, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1593100732536, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 14, "current_iter_num": 0}}
INFO:root:[Training][Epoch 14] training time: 0.660 [sec],avg speed: 124082.334 [imgs/sec],loss=5.709
[Training][Epoch 14] training time: 0.660 [sec],avg speed: 124082.334 [imgs/sec],loss=5.709
:::MLLOG {"namespace": "", "time_ms": 1593100733196, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1593100733197, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 15, "current_iter_num": 0}}
INFO:root:[Training][Epoch 15] training time: 1.001 [sec],avg speed: 122812.274 [imgs/sec],loss=5.344
[Training][Epoch 15] training time: 1.001 [sec],avg speed: 122812.274 [imgs/sec],loss=5.344
:::MLLOG {"namespace": "", "time_ms": 1593100734197, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1593100734198, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 16, "current_iter_num": 0}}
INFO:root:[Training][Iteration 900][Epoch 16, Batch 30/58] lr: 0.17692, training time: 17.314 [ms], speed: 118288.299 [imgs/sec], loss=2.867
[Training][Iteration 900][Epoch 16, Batch 30/58] lr: 0.17692, training time: 17.314 [ms], speed: 118288.299 [imgs/sec], loss=2.867
INFO:root:[Training][Epoch 16] training time: 1.019 [sec],avg speed: 120544.272 [imgs/sec],loss=5.263
[Training][Epoch 16] training time: 1.019 [sec],avg speed: 120544.272 [imgs/sec],loss=5.263
:::MLLOG {"namespace": "", "time_ms": 1593100735217, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1593100735217, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 17, "current_iter_num": 0}}
INFO:root:[Training][Epoch 17] training time: 0.994 [sec],avg speed: 123683.561 [imgs/sec],loss=5.087
[Training][Epoch 17] training time: 0.994 [sec],avg speed: 123683.561 [imgs/sec],loss=5.087
:::MLLOG {"namespace": "", "time_ms": 1593100736211, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1593100736211, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 18, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1000][Epoch 18, Batch 14/58] lr: 0.19657, training time: 16.517 [ms], speed: 123994.033 [imgs/sec], loss=2.877
[Training][Iteration 1000][Epoch 18, Batch 14/58] lr: 0.19657, training time: 16.517 [ms], speed: 123994.033 [imgs/sec], loss=2.877
INFO:root:[Training][Epoch 18] training time: 0.988 [sec],avg speed: 124378.963 [imgs/sec],loss=5.048
[Training][Epoch 18] training time: 0.988 [sec],avg speed: 124378.963 [imgs/sec],loss=5.048
:::MLLOG {"namespace": "", "time_ms": 1593100737200, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 18}}
:::MLLOG {"namespace": "", "time_ms": 1593100737200, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 19, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1100][Epoch 19, Batch 56/58] lr: 0.21623, training time: 16.810 [ms], speed: 121832.151 [imgs/sec], loss=4.088
[Training][Iteration 1100][Epoch 19, Batch 56/58] lr: 0.21623, training time: 16.810 [ms], speed: 121832.151 [imgs/sec], loss=4.088
INFO:root:[Training][Epoch 19] training time: 1.012 [sec],avg speed: 121392.114 [imgs/sec],loss=4.787
[Training][Epoch 19] training time: 1.012 [sec],avg speed: 121392.114 [imgs/sec],loss=4.787
:::MLLOG {"namespace": "", "time_ms": 1593100738212, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1593100738213, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 20, "current_iter_num": 0}}
INFO:root:[Training][Epoch 20] training time: 0.673 [sec],avg speed: 121755.742 [imgs/sec],loss=4.897
[Training][Epoch 20] training time: 0.673 [sec],avg speed: 121755.742 [imgs/sec],loss=4.897
:::MLLOG {"namespace": "", "time_ms": 1593100738886, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1593100738886, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 21, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1200][Epoch 21, Batch 40/58] lr: 0.23589, training time: 16.751 [ms], speed: 122259.811 [imgs/sec], loss=3.049
[Training][Iteration 1200][Epoch 21, Batch 40/58] lr: 0.23589, training time: 16.751 [ms], speed: 122259.811 [imgs/sec], loss=3.049
INFO:root:[Training][Epoch 21] training time: 0.998 [sec],avg speed: 123136.619 [imgs/sec],loss=4.967
[Training][Epoch 21] training time: 0.998 [sec],avg speed: 123136.619 [imgs/sec],loss=4.967
:::MLLOG {"namespace": "", "time_ms": 1593100739884, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1593100739885, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 22, "current_iter_num": 0}}
INFO:root:[Training][Epoch 22] training time: 0.980 [sec],avg speed: 125339.848 [imgs/sec],loss=4.803
[Training][Epoch 22] training time: 0.980 [sec],avg speed: 125339.848 [imgs/sec],loss=4.803
:::MLLOG {"namespace": "", "time_ms": 1593100740865, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 22}}
:::MLLOG {"namespace": "", "time_ms": 1593100740866, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 23, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1300][Epoch 23, Batch 24/58] lr: 0.25554, training time: 16.470 [ms], speed: 124347.710 [imgs/sec], loss=5.614
[Training][Iteration 1300][Epoch 23, Batch 24/58] lr: 0.25554, training time: 16.470 [ms], speed: 124347.710 [imgs/sec], loss=5.614
INFO:root:[Training][Epoch 23] training time: 0.975 [sec],avg speed: 125968.466 [imgs/sec],loss=4.613
[Training][Epoch 23] training time: 0.975 [sec],avg speed: 125968.466 [imgs/sec],loss=4.613
:::MLLOG {"namespace": "", "time_ms": 1593100741841, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1593100741842, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 24, "current_iter_num": 0}}
INFO:root:[Training][Epoch 24] training time: 0.978 [sec],avg speed: 125602.784 [imgs/sec],loss=4.683
[Training][Epoch 24] training time: 0.978 [sec],avg speed: 125602.784 [imgs/sec],loss=4.683
:::MLLOG {"namespace": "", "time_ms": 1593100742820, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1593100742820, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 25, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1400][Epoch 25, Batch 8/58] lr: 0.27520, training time: 17.055 [ms], speed: 120084.571 [imgs/sec], loss=5.335
[Training][Iteration 1400][Epoch 25, Batch 8/58] lr: 0.27520, training time: 17.055 [ms], speed: 120084.571 [imgs/sec], loss=5.335
INFO:root:[Training][Epoch 25] training time: 0.992 [sec],avg speed: 123903.861 [imgs/sec],loss=4.696
[Training][Epoch 25] training time: 0.992 [sec],avg speed: 123903.861 [imgs/sec],loss=4.696
:::MLLOG {"namespace": "", "time_ms": 1593100743812, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1593100743813, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 26, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1500][Epoch 26, Batch 50/58] lr: 0.29250, training time: 16.762 [ms], speed: 122178.106 [imgs/sec], loss=5.496
[Training][Iteration 1500][Epoch 26, Batch 50/58] lr: 0.29250, training time: 16.762 [ms], speed: 122178.106 [imgs/sec], loss=5.496
INFO:root:[Training][Epoch 26] training time: 1.004 [sec],avg speed: 122444.120 [imgs/sec],loss=4.394
[Training][Epoch 26] training time: 1.004 [sec],avg speed: 122444.120 [imgs/sec],loss=4.394
:::MLLOG {"namespace": "", "time_ms": 1593100744816, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 26}}
:::MLLOG {"namespace": "", "time_ms": 1593100744817, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 27, "current_iter_num": 0}}
INFO:root:[Training][Epoch 27] training time: 0.651 [sec],avg speed: 125796.535 [imgs/sec],loss=4.486
[Training][Epoch 27] training time: 0.651 [sec],avg speed: 125796.535 [imgs/sec],loss=4.486
:::MLLOG {"namespace": "", "time_ms": 1593100745468, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1593100745469, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 28, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1600][Epoch 28, Batch 34/58] lr: 0.29250, training time: 15.949 [ms], speed: 128410.516 [imgs/sec], loss=3.434
[Training][Iteration 1600][Epoch 28, Batch 34/58] lr: 0.29250, training time: 15.949 [ms], speed: 128410.516 [imgs/sec], loss=3.434
INFO:root:[Training][Epoch 28] training time: 0.978 [sec],avg speed: 125642.803 [imgs/sec],loss=4.408
[Training][Epoch 28] training time: 0.978 [sec],avg speed: 125642.803 [imgs/sec],loss=4.408
:::MLLOG {"namespace": "", "time_ms": 1593100746447, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1593100746447, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 29, "current_iter_num": 0}}
INFO:root:[Training][Epoch 29] training time: 0.959 [sec],avg speed: 128166.245 [imgs/sec],loss=4.487
[Training][Epoch 29] training time: 0.959 [sec],avg speed: 128166.245 [imgs/sec],loss=4.487
:::MLLOG {"namespace": "", "time_ms": 1593100747406, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1593100747406, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 30, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1700][Epoch 30, Batch 18/58] lr: 0.29250, training time: 16.372 [ms], speed: 125088.545 [imgs/sec], loss=2.504
[Training][Iteration 1700][Epoch 30, Batch 18/58] lr: 0.29250, training time: 16.372 [ms], speed: 125088.545 [imgs/sec], loss=2.504
INFO:root:[Training][Epoch 30] training time: 0.979 [sec],avg speed: 125453.464 [imgs/sec],loss=4.326
[Training][Epoch 30] training time: 0.979 [sec],avg speed: 125453.464 [imgs/sec],loss=4.326
:::MLLOG {"namespace": "", "time_ms": 1593100748386, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1593100748386, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 31, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1800][Epoch 31, Batch 60/58] lr: 0.29250, training time: 16.075 [ms], speed: 127402.491 [imgs/sec], loss=4.886
[Training][Iteration 1800][Epoch 31, Batch 60/58] lr: 0.29250, training time: 16.075 [ms], speed: 127402.491 [imgs/sec], loss=4.886
INFO:root:[Training][Epoch 31] training time: 0.965 [sec],avg speed: 127373.776 [imgs/sec],loss=4.217
[Training][Epoch 31] training time: 0.965 [sec],avg speed: 127373.776 [imgs/sec],loss=4.217
:::MLLOG {"namespace": "", "time_ms": 1593100749351, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1593100749351, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 32, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1800][Epoch 32, Batch 2/58] lr: 0.29250, training time: 19.356 [ms], speed: 105808.872 [imgs/sec], loss=2.448
[Training][Iteration 1800][Epoch 32, Batch 2/58] lr: 0.29250, training time: 19.356 [ms], speed: 105808.872 [imgs/sec], loss=2.448
INFO:root:[Training][Epoch 32] training time: 0.991 [sec],avg speed: 123969.606 [imgs/sec],loss=4.365
[Training][Epoch 32] training time: 0.991 [sec],avg speed: 123969.606 [imgs/sec],loss=4.365
:::MLLOG {"namespace": "", "time_ms": 1593100750343, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1593100750343, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 33, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1900][Epoch 33, Batch 44/58] lr: 0.29250, training time: 16.030 [ms], speed: 127757.102 [imgs/sec], loss=3.571
[Training][Iteration 1900][Epoch 33, Batch 44/58] lr: 0.29250, training time: 16.030 [ms], speed: 127757.102 [imgs/sec], loss=3.571
INFO:root:[Training][Epoch 33] training time: 0.956 [sec],avg speed: 128577.784 [imgs/sec],loss=4.250
[Training][Epoch 33] training time: 0.956 [sec],avg speed: 128577.784 [imgs/sec],loss=4.250
:::MLLOG {"namespace": "", "time_ms": 1593100751299, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1593100751299, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 34, "current_iter_num": 0}}
INFO:root:[Training][Epoch 34] training time: 0.628 [sec],avg speed: 130532.926 [imgs/sec],loss=4.100
[Training][Epoch 34] training time: 0.628 [sec],avg speed: 130532.926 [imgs/sec],loss=4.100
:::MLLOG {"namespace": "", "time_ms": 1593100751927, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 34}}
:::MLLOG {"namespace": "", "time_ms": 1593100751927, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 35, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2000][Epoch 35, Batch 28/58] lr: 0.29250, training time: 15.929 [ms], speed: 128569.358 [imgs/sec], loss=5.304
[Training][Iteration 2000][Epoch 35, Batch 28/58] lr: 0.29250, training time: 15.929 [ms], speed: 128569.358 [imgs/sec], loss=5.304
INFO:root:[Training][Epoch 35] training time: 0.953 [sec],avg speed: 128902.546 [imgs/sec],loss=4.015
[Training][Epoch 35] training time: 0.953 [sec],avg speed: 128902.546 [imgs/sec],loss=4.015
:::MLLOG {"namespace": "", "time_ms": 1593100752881, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1593100752881, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 36, "current_iter_num": 0}}
INFO:root:[Training][Epoch 36] training time: 0.973 [sec],avg speed: 126270.388 [imgs/sec],loss=4.246
[Training][Epoch 36] training time: 0.973 [sec],avg speed: 126270.388 [imgs/sec],loss=4.246
:::MLLOG {"namespace": "", "time_ms": 1593100753855, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1593100753855, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 37, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2100][Epoch 37, Batch 12/58] lr: 0.29250, training time: 16.151 [ms], speed: 126800.400 [imgs/sec], loss=4.427
[Training][Iteration 2100][Epoch 37, Batch 12/58] lr: 0.29250, training time: 16.151 [ms], speed: 126800.400 [imgs/sec], loss=4.427
INFO:root:[Training][Epoch 37] training time: 0.952 [sec],avg speed: 129039.093 [imgs/sec],loss=4.269
[Training][Epoch 37] training time: 0.952 [sec],avg speed: 129039.093 [imgs/sec],loss=4.269
:::MLLOG {"namespace": "", "time_ms": 1593100754808, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1593100754808, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 38, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2200][Epoch 38, Batch 54/58] lr: 0.29250, training time: 15.831 [ms], speed: 129365.944 [imgs/sec], loss=3.561
[Training][Iteration 2200][Epoch 38, Batch 54/58] lr: 0.29250, training time: 15.831 [ms], speed: 129365.944 [imgs/sec], loss=3.561
INFO:root:[Training][Epoch 38] training time: 0.959 [sec],avg speed: 128170.962 [imgs/sec],loss=3.917
[Training][Epoch 38] training time: 0.959 [sec],avg speed: 128170.962 [imgs/sec],loss=3.917
:::MLLOG {"namespace": "", "time_ms": 1593100755767, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 38}}
:::MLLOG {"namespace": "", "time_ms": 1593100755767, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 39, "current_iter_num": 0}}
INFO:root:[Training][Epoch 39] training time: 0.941 [sec],avg speed: 130569.302 [imgs/sec],loss=4.168
[Training][Epoch 39] training time: 0.941 [sec],avg speed: 130569.302 [imgs/sec],loss=4.168
:::MLLOG {"namespace": "", "time_ms": 1593100756708, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 39}}
:::MLLOG {"namespace": "", "time_ms": 1593100756709, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 40, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2300][Epoch 40, Batch 38/58] lr: 0.29250, training time: 15.683 [ms], speed: 130590.199 [imgs/sec], loss=6.568
[Training][Iteration 2300][Epoch 40, Batch 38/58] lr: 0.29250, training time: 15.683 [ms], speed: 130590.199 [imgs/sec], loss=6.568
INFO:root:[Training][Epoch 40] training time: 0.631 [sec],avg speed: 129906.605 [imgs/sec],loss=3.843
[Training][Epoch 40] training time: 0.631 [sec],avg speed: 129906.605 [imgs/sec],loss=3.843
:::MLLOG {"namespace": "", "time_ms": 1593100757340, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1593100757352, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 40}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 492.099 [ms], allgather: 180.285 [ms], asnumpy: 7.531 [ms], speed: 7353.848 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 492.099 [ms], allgather: 180.285 [ms], asnumpy: 7.531 [ms], speed: 7353.848 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 552.107 [ms], allgather: 119.279 [ms], asnumpy: 7.563 [ms], speed: 7364.307 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 552.107 [ms], allgather: 119.279 [ms], asnumpy: 7.563 [ms], speed: 7364.307 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 508.077 [ms], allgather: 164.379 [ms], asnumpy: 7.889 [ms], speed: 7349.199 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 508.077 [ms], allgather: 164.379 [ms], asnumpy: 7.889 [ms], speed: 7349.199 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 499.774 [ms], allgather: 171.042 [ms], asnumpy: 7.742 [ms], speed: 7368.550 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 499.774 [ms], allgather: 171.042 [ms], asnumpy: 7.742 [ms], speed: 7368.550 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 563.275 [ms], allgather: 107.188 [ms], asnumpy: 7.622 [ms], speed: 7373.690 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 563.275 [ms], allgather: 107.188 [ms], asnumpy: 7.622 [ms], speed: 7373.690 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 499.106 [ms], allgather: 171.199 [ms], asnumpy: 7.695 [ms], speed: 7374.613 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 499.106 [ms], allgather: 171.199 [ms], asnumpy: 7.695 [ms], speed: 7374.613 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 477.050 [ms], allgather: 195.869 [ms], asnumpy: 7.357 [ms], speed: 7349.938 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 477.050 [ms], allgather: 195.869 [ms], asnumpy: 7.357 [ms], speed: 7349.938 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 507.851 [ms], allgather: 159.497 [ms], asnumpy: 7.711 [ms], speed: 7406.722 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 507.851 [ms], allgather: 159.497 [ms], asnumpy: 7.711 [ms], speed: 7406.722 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 506.623 [ms], allgather: 166.076 [ms], asnumpy: 7.723 [ms], speed: 7348.362 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 506.623 [ms], allgather: 166.076 [ms], asnumpy: 7.723 [ms], speed: 7348.362 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 504.230 [ms], allgather: 168.774 [ms], asnumpy: 7.002 [ms], speed: 7352.861 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 504.230 [ms], allgather: 168.774 [ms], asnumpy: 7.002 [ms], speed: 7352.861 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 491.861 [ms], allgather: 180.104 [ms], asnumpy: 7.790 [ms], speed: 7355.563 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 491.861 [ms], allgather: 180.104 [ms], asnumpy: 7.790 [ms], speed: 7355.563 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 501.410 [ms], allgather: 171.668 [ms], asnumpy: 7.666 [ms], speed: 7344.895 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 501.410 [ms], allgather: 171.668 [ms], asnumpy: 7.666 [ms], speed: 7344.895 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 501.347 [ms], allgather: 171.260 [ms], asnumpy: 8.219 [ms], speed: 7344.008 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 501.347 [ms], allgather: 171.260 [ms], asnumpy: 8.219 [ms], speed: 7344.008 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 615.817 [ms], allgather: 57.171 [ms], asnumpy: 7.208 [ms], speed: 7350.806 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 615.817 [ms], allgather: 57.171 [ms], asnumpy: 7.208 [ms], speed: 7350.806 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 617.885 [ms], allgather: 54.370 [ms], asnumpy: 7.931 [ms], speed: 7350.912 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 617.885 [ms], allgather: 54.370 [ms], asnumpy: 7.931 [ms], speed: 7350.912 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 581.887 [ms], allgather: 83.675 [ms], asnumpy: 7.723 [ms], speed: 7426.260 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 581.887 [ms], allgather: 83.675 [ms], asnumpy: 7.723 [ms], speed: 7426.260 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 497.186 [ms], allgather: 175.735 [ms], asnumpy: 7.696 [ms], speed: 7346.254 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 497.186 [ms], allgather: 175.735 [ms], asnumpy: 7.696 [ms], speed: 7346.254 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 510.554 [ms], allgather: 160.199 [ms], asnumpy: 8.015 [ms], speed: 7366.260 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 510.554 [ms], allgather: 160.199 [ms], asnumpy: 8.015 [ms], speed: 7366.260 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 491.124 [ms], allgather: 181.239 [ms], asnumpy: 8.217 [ms], speed: 7346.655 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 491.124 [ms], allgather: 181.239 [ms], asnumpy: 8.217 [ms], speed: 7346.655 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 548.100 [ms], allgather: 123.266 [ms], asnumpy: 8.669 [ms], speed: 7352.543 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 548.100 [ms], allgather: 123.266 [ms], asnumpy: 8.669 [ms], speed: 7352.543 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 506.996 [ms], allgather: 165.393 [ms], asnumpy: 7.756 [ms], speed: 7351.355 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 506.996 [ms], allgather: 165.393 [ms], asnumpy: 7.756 [ms], speed: 7351.355 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 494.050 [ms], allgather: 179.049 [ms], asnumpy: 7.791 [ms], speed: 7343.309 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 494.050 [ms], allgather: 179.049 [ms], asnumpy: 7.791 [ms], speed: 7343.309 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 508.208 [ms], allgather: 162.341 [ms], asnumpy: 8.465 [ms], speed: 7363.606 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 508.208 [ms], allgather: 162.341 [ms], asnumpy: 8.465 [ms], speed: 7363.606 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 505.994 [ms], allgather: 164.844 [ms], asnumpy: 8.384 [ms], speed: 7361.352 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 505.994 [ms], allgather: 164.844 [ms], asnumpy: 8.384 [ms], speed: 7361.352 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 498.248 [ms], allgather: 175.343 [ms], asnumpy: 7.650 [ms], speed: 7339.536 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 498.248 [ms], allgather: 175.343 [ms], asnumpy: 7.650 [ms], speed: 7339.536 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 595.380 [ms], allgather: 77.359 [ms], asnumpy: 8.218 [ms], speed: 7342.599 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 595.380 [ms], allgather: 77.359 [ms], asnumpy: 8.218 [ms], speed: 7342.599 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 487.275 [ms], allgather: 176.882 [ms], asnumpy: 9.998 [ms], speed: 7416.666 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 487.275 [ms], allgather: 176.882 [ms], asnumpy: 9.998 [ms], speed: 7416.666 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 512.994 [ms], allgather: 159.117 [ms], asnumpy: 10.088 [ms], speed: 7329.199 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 512.994 [ms], allgather: 159.117 [ms], asnumpy: 10.088 [ms], speed: 7329.199 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 499.794 [ms], allgather: 172.648 [ms], asnumpy: 9.911 [ms], speed: 7327.575 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 499.794 [ms], allgather: 172.648 [ms], asnumpy: 9.911 [ms], speed: 7327.575 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 500.961 [ms], allgather: 164.599 [ms], asnumpy: 9.492 [ms], speed: 7406.811 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 500.961 [ms], allgather: 164.599 [ms], asnumpy: 9.492 [ms], speed: 7406.811 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 477.209 [ms], allgather: 195.836 [ms], asnumpy: 9.361 [ms], speed: 7326.997 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 477.209 [ms], allgather: 195.836 [ms], asnumpy: 9.361 [ms], speed: 7326.997 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 490.721 [ms], allgather: 181.338 [ms], asnumpy: 9.536 [ms], speed: 7335.713 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 490.721 [ms], allgather: 181.338 [ms], asnumpy: 9.536 [ms], speed: 7335.713 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 548.105 [ms], allgather: 124.953 [ms], asnumpy: 9.819 [ms], speed: 7321.957 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 548.105 [ms], allgather: 124.953 [ms], asnumpy: 9.819 [ms], speed: 7321.957 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 485.548 [ms], allgather: 182.126 [ms], asnumpy: 10.165 [ms], speed: 7376.367 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 485.548 [ms], allgather: 182.126 [ms], asnumpy: 10.165 [ms], speed: 7376.367 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 538.425 [ms], allgather: 126.822 [ms], asnumpy: 10.451 [ms], speed: 7399.737 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 538.425 [ms], allgather: 126.822 [ms], asnumpy: 10.451 [ms], speed: 7399.737 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 548.983 [ms], allgather: 115.701 [ms], asnumpy: 10.513 [ms], speed: 7405.211 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 548.983 [ms], allgather: 115.701 [ms], asnumpy: 10.513 [ms], speed: 7405.211 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 580.015 [ms], allgather: 84.475 [ms], asnumpy: 11.585 [ms], speed: 7395.606 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 580.015 [ms], allgather: 84.475 [ms], asnumpy: 11.585 [ms], speed: 7395.606 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 504.715 [ms], allgather: 168.057 [ms], asnumpy: 11.290 [ms], speed: 7309.259 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 504.715 [ms], allgather: 168.057 [ms], asnumpy: 11.290 [ms], speed: 7309.259 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 499.023 [ms], allgather: 166.824 [ms], asnumpy: 10.466 [ms], speed: 7393.007 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 499.023 [ms], allgather: 166.824 [ms], asnumpy: 10.466 [ms], speed: 7393.007 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 544.302 [ms], allgather: 129.127 [ms], asnumpy: 10.756 [ms], speed: 7307.949 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 544.302 [ms], allgather: 129.127 [ms], asnumpy: 10.756 [ms], speed: 7307.949 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 453.452 [ms], allgather: 218.418 [ms], asnumpy: 11.423 [ms], speed: 7317.478 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 453.452 [ms], allgather: 218.418 [ms], asnumpy: 11.423 [ms], speed: 7317.478 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 503.830 [ms], allgather: 169.348 [ms], asnumpy: 11.237 [ms], speed: 7305.498 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 503.830 [ms], allgather: 169.348 [ms], asnumpy: 11.237 [ms], speed: 7305.498 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 563.953 [ms], allgather: 108.219 [ms], asnumpy: 11.802 [ms], speed: 7310.201 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 563.953 [ms], allgather: 108.219 [ms], asnumpy: 11.802 [ms], speed: 7310.201 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 490.016 [ms], allgather: 182.028 [ms], asnumpy: 11.935 [ms], speed: 7310.158 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 490.016 [ms], allgather: 182.028 [ms], asnumpy: 11.935 [ms], speed: 7310.158 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 482.219 [ms], allgather: 188.748 [ms], asnumpy: 11.428 [ms], speed: 7327.127 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 482.219 [ms], allgather: 188.748 [ms], asnumpy: 11.428 [ms], speed: 7327.127 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 487.583 [ms], allgather: 185.548 [ms], asnumpy: 11.640 [ms], speed: 7301.695 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 487.583 [ms], allgather: 185.548 [ms], asnumpy: 11.640 [ms], speed: 7301.695 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 496.065 [ms], allgather: 176.792 [ms], asnumpy: 10.616 [ms], speed: 7315.559 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 496.065 [ms], allgather: 176.792 [ms], asnumpy: 10.616 [ms], speed: 7315.559 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 495.243 [ms], allgather: 169.880 [ms], asnumpy: 11.747 [ms], speed: 7386.926 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 495.243 [ms], allgather: 169.880 [ms], asnumpy: 11.747 [ms], speed: 7386.926 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 559.477 [ms], allgather: 113.785 [ms], asnumpy: 11.489 [ms], speed: 7301.911 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 559.477 [ms], allgather: 113.785 [ms], asnumpy: 11.489 [ms], speed: 7301.911 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 506.560 [ms], allgather: 164.104 [ms], asnumpy: 12.177 [ms], speed: 7322.333 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 506.560 [ms], allgather: 164.104 [ms], asnumpy: 12.177 [ms], speed: 7322.333 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 511.717 [ms], allgather: 162.720 [ms], asnumpy: 11.243 [ms], speed: 7292.004 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 511.717 [ms], allgather: 162.720 [ms], asnumpy: 11.243 [ms], speed: 7292.004 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 498.041 [ms], allgather: 166.913 [ms], asnumpy: 13.677 [ms], speed: 7367.753 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 498.041 [ms], allgather: 166.913 [ms], asnumpy: 13.677 [ms], speed: 7367.753 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 500.643 [ms], allgather: 167.160 [ms], asnumpy: 13.497 [ms], speed: 7338.883 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 500.643 [ms], allgather: 167.160 [ms], asnumpy: 13.497 [ms], speed: 7338.883 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 500.697 [ms], allgather: 171.135 [ms], asnumpy: 14.003 [ms], speed: 7290.367 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 500.697 [ms], allgather: 171.135 [ms], asnumpy: 14.003 [ms], speed: 7290.367 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 554.841 [ms], allgather: 117.721 [ms], asnumpy: 14.009 [ms], speed: 7282.544 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 554.841 [ms], allgather: 117.721 [ms], asnumpy: 14.009 [ms], speed: 7282.544 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 513.321 [ms], allgather: 158.417 [ms], asnumpy: 14.378 [ms], speed: 7287.370 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 513.321 [ms], allgather: 158.417 [ms], asnumpy: 14.378 [ms], speed: 7287.370 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 619.023 [ms], allgather: 51.495 [ms], asnumpy: 14.199 [ms], speed: 7302.265 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 619.023 [ms], allgather: 51.495 [ms], asnumpy: 14.199 [ms], speed: 7302.265 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 561.790 [ms], allgather: 110.676 [ms], asnumpy: 14.458 [ms], speed: 7278.818 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 561.790 [ms], allgather: 110.676 [ms], asnumpy: 14.458 [ms], speed: 7278.818 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 621.125 [ms], allgather: 44.081 [ms], asnumpy: 14.389 [ms], speed: 7357.303 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 621.125 [ms], allgather: 44.081 [ms], asnumpy: 14.389 [ms], speed: 7357.303 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 572.831 [ms], allgather: 100.050 [ms], asnumpy: 14.162 [ms], speed: 7277.543 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 572.831 [ms], allgather: 100.050 [ms], asnumpy: 14.162 [ms], speed: 7277.543 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 552.136 [ms], allgather: 113.450 [ms], asnumpy: 13.814 [ms], speed: 7359.412 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 552.136 [ms], allgather: 113.450 [ms], asnumpy: 13.814 [ms], speed: 7359.412 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 479.857 [ms], allgather: 191.174 [ms], asnumpy: 14.402 [ms], speed: 7294.642 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 479.857 [ms], allgather: 191.174 [ms], asnumpy: 14.402 [ms], speed: 7294.642 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 503.019 [ms], allgather: 171.441 [ms], asnumpy: 12.864 [ms], speed: 7274.584 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 503.019 [ms], allgather: 171.441 [ms], asnumpy: 12.864 [ms], speed: 7274.584 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 579.687 [ms], allgather: 100.507 [ms], asnumpy: 10.501 [ms], speed: 7239.067 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 579.687 [ms], allgather: 100.507 [ms], asnumpy: 10.501 [ms], speed: 7239.067 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100758082, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 41, "current_iter_num": 0}}
INFO:root:[Training][Epoch 41] training time: 1.018 [sec],avg speed: 120721.561 [imgs/sec],loss=4.164
[Training][Epoch 41] training time: 1.018 [sec],avg speed: 120721.561 [imgs/sec],loss=4.164
:::MLLOG {"namespace": "", "time_ms": 1593100759099, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1593100759100, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 42, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2400][Epoch 42, Batch 22/58] lr: 0.29250, training time: 16.096 [ms], speed: 127239.183 [imgs/sec], loss=2.747
[Training][Iteration 2400][Epoch 42, Batch 22/58] lr: 0.29250, training time: 16.096 [ms], speed: 127239.183 [imgs/sec], loss=2.747
INFO:root:[Training][Epoch 42] training time: 0.957 [sec],avg speed: 128399.044 [imgs/sec],loss=3.939
[Training][Epoch 42] training time: 0.957 [sec],avg speed: 128399.044 [imgs/sec],loss=3.939
:::MLLOG {"namespace": "", "time_ms": 1593100760057, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 42}}
:::MLLOG {"namespace": "", "time_ms": 1593100760058, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 43, "current_iter_num": 0}}
INFO:root:[Training][Epoch 43] training time: 0.946 [sec],avg speed: 129915.233 [imgs/sec],loss=3.720
[Training][Epoch 43] training time: 0.946 [sec],avg speed: 129915.233 [imgs/sec],loss=3.720
:::MLLOG {"namespace": "", "time_ms": 1593100761004, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 43}}
:::MLLOG {"namespace": "", "time_ms": 1593100761004, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 44, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2500][Epoch 44, Batch 6/58] lr: 0.29250, training time: 16.501 [ms], speed: 124112.573 [imgs/sec], loss=3.665
[Training][Iteration 2500][Epoch 44, Batch 6/58] lr: 0.29250, training time: 16.501 [ms], speed: 124112.573 [imgs/sec], loss=3.665
:::MLLOG {"namespace": "", "time_ms": 1593100761123, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1593100761123, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1678899094757919, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 40}}
INFO:root:[Training][Epoch 44] training time: 0.957 [sec],avg speed: 128398.629 [imgs/sec],loss=3.859
[Training][Epoch 44] training time: 0.957 [sec],avg speed: 128398.629 [imgs/sec],loss=3.859
:::MLLOG {"namespace": "", "time_ms": 1593100761961, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 44}}
:::MLLOG {"namespace": "", "time_ms": 1593100761962, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 45, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2600][Epoch 45, Batch 48/58] lr: 0.29250, training time: 15.837 [ms], speed: 129315.160 [imgs/sec], loss=2.830
[Training][Iteration 2600][Epoch 45, Batch 48/58] lr: 0.29250, training time: 15.837 [ms], speed: 129315.160 [imgs/sec], loss=2.830
INFO:root:[Training][Epoch 45] training time: 0.952 [sec],avg speed: 129131.947 [imgs/sec],loss=3.897
[Training][Epoch 45] training time: 0.952 [sec],avg speed: 129131.947 [imgs/sec],loss=3.897
:::MLLOG {"namespace": "", "time_ms": 1593100762913, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1593100762914, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 46, "current_iter_num": 0}}
INFO:root:[Training][Epoch 46] training time: 0.960 [sec],avg speed: 128065.005 [imgs/sec],loss=3.989
[Training][Epoch 46] training time: 0.960 [sec],avg speed: 128065.005 [imgs/sec],loss=3.989
:::MLLOG {"namespace": "", "time_ms": 1593100763873, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 46}}
:::MLLOG {"namespace": "", "time_ms": 1593100763874, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 47, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2700][Epoch 47, Batch 32/58] lr: 0.29250, training time: 16.089 [ms], speed: 127290.938 [imgs/sec], loss=2.311
[Training][Iteration 2700][Epoch 47, Batch 32/58] lr: 0.29250, training time: 16.089 [ms], speed: 127290.938 [imgs/sec], loss=2.311
INFO:root:[Training][Epoch 47] training time: 0.638 [sec],avg speed: 128372.612 [imgs/sec],loss=3.768
[Training][Epoch 47] training time: 0.638 [sec],avg speed: 128372.612 [imgs/sec],loss=3.768
:::MLLOG {"namespace": "", "time_ms": 1593100764512, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 47}}
:::MLLOG {"namespace": "", "time_ms": 1593100764513, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 48, "current_iter_num": 0}}
INFO:root:[Training][Epoch 48] training time: 0.956 [sec],avg speed: 128566.430 [imgs/sec],loss=3.913
[Training][Epoch 48] training time: 0.956 [sec],avg speed: 128566.430 [imgs/sec],loss=3.913
:::MLLOG {"namespace": "", "time_ms": 1593100765469, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 48}}
:::MLLOG {"namespace": "", "time_ms": 1593100765469, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 49, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2800][Epoch 49, Batch 16/58] lr: 0.29250, training time: 15.351 [ms], speed: 133413.857 [imgs/sec], loss=2.958
[Training][Iteration 2800][Epoch 49, Batch 16/58] lr: 0.29250, training time: 15.351 [ms], speed: 133413.857 [imgs/sec], loss=2.958
INFO:root:[Training][Epoch 49] training time: 0.955 [sec],avg speed: 128645.020 [imgs/sec],loss=4.093
[Training][Epoch 49] training time: 0.955 [sec],avg speed: 128645.020 [imgs/sec],loss=4.093
:::MLLOG {"namespace": "", "time_ms": 1593100766424, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 49}}
:::MLLOG {"namespace": "", "time_ms": 1593100766425, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 50, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2900][Epoch 50, Batch 58/58] lr: 0.29250, training time: 16.025 [ms], speed: 127800.045 [imgs/sec], loss=4.687
[Training][Iteration 2900][Epoch 50, Batch 58/58] lr: 0.29250, training time: 16.025 [ms], speed: 127800.045 [imgs/sec], loss=4.687
INFO:root:[Training][Epoch 50] training time: 0.963 [sec],avg speed: 127586.803 [imgs/sec],loss=3.684
[Training][Epoch 50] training time: 0.963 [sec],avg speed: 127586.803 [imgs/sec],loss=3.684
:::MLLOG {"namespace": "", "time_ms": 1593100767388, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1593100767402, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 50}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 105.782 [ms], allgather: 42.516 [ms], asnumpy: 7.508 [ms], speed: 32090.784 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 105.782 [ms], allgather: 42.516 [ms], asnumpy: 7.508 [ms], speed: 32090.784 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.136 [ms], allgather: 54.676 [ms], asnumpy: 7.472 [ms], speed: 31588.514 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.136 [ms], allgather: 54.676 [ms], asnumpy: 7.472 [ms], speed: 31588.514 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.265 [ms], allgather: 56.278 [ms], asnumpy: 7.667 [ms], speed: 31603.271 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.265 [ms], allgather: 56.278 [ms], asnumpy: 7.667 [ms], speed: 31603.271 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 103.415 [ms], allgather: 47.111 [ms], asnumpy: 8.019 [ms], speed: 31536.642 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 103.415 [ms], allgather: 47.111 [ms], asnumpy: 8.019 [ms], speed: 31536.642 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 108.835 [ms], allgather: 42.326 [ms], asnumpy: 7.170 [ms], speed: 31579.287 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 108.835 [ms], allgather: 42.326 [ms], asnumpy: 7.170 [ms], speed: 31579.287 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 109.226 [ms], allgather: 41.876 [ms], asnumpy: 7.654 [ms], speed: 31494.538 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 109.226 [ms], allgather: 41.876 [ms], asnumpy: 7.654 [ms], speed: 31494.538 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.825 [ms], allgather: 50.409 [ms], asnumpy: 7.619 [ms], speed: 32081.261 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.825 [ms], allgather: 50.409 [ms], asnumpy: 7.619 [ms], speed: 32081.261 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 107.462 [ms], allgather: 42.658 [ms], asnumpy: 7.655 [ms], speed: 31690.283 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 107.462 [ms], allgather: 42.658 [ms], asnumpy: 7.655 [ms], speed: 31690.283 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 112.336 [ms], allgather: 38.129 [ms], asnumpy: 8.587 [ms], speed: 31436.045 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 112.336 [ms], allgather: 38.129 [ms], asnumpy: 8.587 [ms], speed: 31436.045 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 108.584 [ms], allgather: 40.993 [ms], asnumpy: 7.295 [ms], speed: 31872.822 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 108.584 [ms], allgather: 40.993 [ms], asnumpy: 7.295 [ms], speed: 31872.822 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 111.537 [ms], allgather: 40.569 [ms], asnumpy: 7.904 [ms], speed: 31247.702 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 111.537 [ms], allgather: 40.569 [ms], asnumpy: 7.904 [ms], speed: 31247.702 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 110.041 [ms], allgather: 40.470 [ms], asnumpy: 9.925 [ms], speed: 31164.582 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 110.041 [ms], allgather: 40.470 [ms], asnumpy: 9.925 [ms], speed: 31164.582 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 109.725 [ms], allgather: 42.690 [ms], asnumpy: 7.996 [ms], speed: 31169.631 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 109.725 [ms], allgather: 42.690 [ms], asnumpy: 7.996 [ms], speed: 31169.631 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 108.865 [ms], allgather: 44.165 [ms], asnumpy: 7.700 [ms], speed: 31107.630 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 108.865 [ms], allgather: 44.165 [ms], asnumpy: 7.700 [ms], speed: 31107.630 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 110.541 [ms], allgather: 40.734 [ms], asnumpy: 7.624 [ms], speed: 31466.091 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 110.541 [ms], allgather: 40.734 [ms], asnumpy: 7.624 [ms], speed: 31466.091 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 101.614 [ms], allgather: 50.061 [ms], asnumpy: 7.721 [ms], speed: 31367.866 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 101.614 [ms], allgather: 50.061 [ms], asnumpy: 7.721 [ms], speed: 31367.866 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 108.306 [ms], allgather: 39.567 [ms], asnumpy: 10.319 [ms], speed: 31606.939 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 108.306 [ms], allgather: 39.567 [ms], asnumpy: 10.319 [ms], speed: 31606.939 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 109.836 [ms], allgather: 43.888 [ms], asnumpy: 7.154 [ms], speed: 31079.094 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 109.836 [ms], allgather: 43.888 [ms], asnumpy: 7.154 [ms], speed: 31079.094 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 102.531 [ms], allgather: 43.169 [ms], asnumpy: 7.824 [ms], speed: 32567.709 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 102.531 [ms], allgather: 43.169 [ms], asnumpy: 7.824 [ms], speed: 32567.709 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 106.264 [ms], allgather: 47.715 [ms], asnumpy: 7.806 [ms], speed: 30904.871 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 106.264 [ms], allgather: 47.715 [ms], asnumpy: 7.806 [ms], speed: 30904.871 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 107.090 [ms], allgather: 41.355 [ms], asnumpy: 11.537 [ms], speed: 31253.290 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 107.090 [ms], allgather: 41.355 [ms], asnumpy: 11.537 [ms], speed: 31253.290 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 111.839 [ms], allgather: 39.416 [ms], asnumpy: 10.723 [ms], speed: 30867.934 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 111.839 [ms], allgather: 39.416 [ms], asnumpy: 10.723 [ms], speed: 30867.934 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.194 [ms], allgather: 54.511 [ms], asnumpy: 7.973 [ms], speed: 30925.151 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.194 [ms], allgather: 54.511 [ms], asnumpy: 7.973 [ms], speed: 30925.151 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 110.854 [ms], allgather: 42.815 [ms], asnumpy: 8.034 [ms], speed: 30920.455 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 110.854 [ms], allgather: 42.815 [ms], asnumpy: 8.034 [ms], speed: 30920.455 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 109.620 [ms], allgather: 42.572 [ms], asnumpy: 7.712 [ms], speed: 31268.434 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 109.620 [ms], allgather: 42.572 [ms], asnumpy: 7.712 [ms], speed: 31268.434 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 110.712 [ms], allgather: 43.441 [ms], asnumpy: 7.874 [ms], speed: 30858.668 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 110.712 [ms], allgather: 43.441 [ms], asnumpy: 7.874 [ms], speed: 30858.668 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 108.570 [ms], allgather: 43.937 [ms], asnumpy: 7.921 [ms], speed: 31166.389 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 108.570 [ms], allgather: 43.937 [ms], asnumpy: 7.921 [ms], speed: 31166.389 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 109.398 [ms], allgather: 41.314 [ms], asnumpy: 11.533 [ms], speed: 30817.176 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 109.398 [ms], allgather: 41.314 [ms], asnumpy: 11.533 [ms], speed: 30817.176 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 108.963 [ms], allgather: 45.362 [ms], asnumpy: 8.022 [ms], speed: 30797.852 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 108.963 [ms], allgather: 45.362 [ms], asnumpy: 8.022 [ms], speed: 30797.852 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 109.891 [ms], allgather: 39.677 [ms], asnumpy: 11.444 [ms], speed: 31053.139 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 109.891 [ms], allgather: 39.677 [ms], asnumpy: 11.444 [ms], speed: 31053.139 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 107.891 [ms], allgather: 44.642 [ms], asnumpy: 8.133 [ms], speed: 31120.186 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 107.891 [ms], allgather: 44.642 [ms], asnumpy: 8.133 [ms], speed: 31120.186 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 108.145 [ms], allgather: 41.530 [ms], asnumpy: 11.287 [ms], speed: 31062.890 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 108.145 [ms], allgather: 41.530 [ms], asnumpy: 11.287 [ms], speed: 31062.890 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 111.575 [ms], allgather: 39.642 [ms], asnumpy: 11.554 [ms], speed: 30717.735 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 111.575 [ms], allgather: 39.642 [ms], asnumpy: 11.554 [ms], speed: 30717.735 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.842 [ms], allgather: 52.290 [ms], asnumpy: 9.892 [ms], speed: 30669.982 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.842 [ms], allgather: 52.290 [ms], asnumpy: 9.892 [ms], speed: 30669.982 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 111.595 [ms], allgather: 38.632 [ms], asnumpy: 12.942 [ms], speed: 30642.735 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 111.595 [ms], allgather: 38.632 [ms], asnumpy: 12.942 [ms], speed: 30642.735 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 111.054 [ms], allgather: 42.340 [ms], asnumpy: 9.614 [ms], speed: 30673.032 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 111.054 [ms], allgather: 42.340 [ms], asnumpy: 9.614 [ms], speed: 30673.032 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 105.781 [ms], allgather: 46.395 [ms], asnumpy: 9.069 [ms], speed: 31008.372 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 105.781 [ms], allgather: 46.395 [ms], asnumpy: 9.069 [ms], speed: 31008.372 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 106.837 [ms], allgather: 44.043 [ms], asnumpy: 11.187 [ms], speed: 30850.951 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 106.837 [ms], allgather: 44.043 [ms], asnumpy: 11.187 [ms], speed: 30850.951 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 108.182 [ms], allgather: 44.745 [ms], asnumpy: 9.735 [ms], speed: 30738.311 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 108.182 [ms], allgather: 44.745 [ms], asnumpy: 9.735 [ms], speed: 30738.311 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 107.408 [ms], allgather: 44.348 [ms], asnumpy: 10.253 [ms], speed: 30862.165 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 107.408 [ms], allgather: 44.348 [ms], asnumpy: 10.253 [ms], speed: 30862.165 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 107.404 [ms], allgather: 42.585 [ms], asnumpy: 11.338 [ms], speed: 30992.745 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 107.404 [ms], allgather: 42.585 [ms], asnumpy: 11.338 [ms], speed: 30992.745 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 108.155 [ms], allgather: 43.048 [ms], asnumpy: 11.364 [ms], speed: 30756.388 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 108.155 [ms], allgather: 43.048 [ms], asnumpy: 11.364 [ms], speed: 30756.388 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 110.288 [ms], allgather: 40.604 [ms], asnumpy: 13.671 [ms], speed: 30383.247 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 110.288 [ms], allgather: 40.604 [ms], asnumpy: 13.671 [ms], speed: 30383.247 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 107.045 [ms], allgather: 47.797 [ms], asnumpy: 9.760 [ms], speed: 30375.854 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 107.045 [ms], allgather: 47.797 [ms], asnumpy: 9.760 [ms], speed: 30375.854 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 110.377 [ms], allgather: 39.653 [ms], asnumpy: 14.733 [ms], speed: 30346.448 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 110.377 [ms], allgather: 39.653 [ms], asnumpy: 14.733 [ms], speed: 30346.448 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 107.158 [ms], allgather: 44.720 [ms], asnumpy: 11.371 [ms], speed: 30627.877 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 107.158 [ms], allgather: 44.720 [ms], asnumpy: 11.371 [ms], speed: 30627.877 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 107.492 [ms], allgather: 44.416 [ms], asnumpy: 11.732 [ms], speed: 30554.605 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 107.492 [ms], allgather: 44.416 [ms], asnumpy: 11.732 [ms], speed: 30554.605 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 107.293 [ms], allgather: 44.817 [ms], asnumpy: 11.100 [ms], speed: 30634.991 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 107.293 [ms], allgather: 44.817 [ms], asnumpy: 11.100 [ms], speed: 30634.991 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.472 [ms], allgather: 53.978 [ms], asnumpy: 11.851 [ms], speed: 30617.995 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.472 [ms], allgather: 53.978 [ms], asnumpy: 11.851 [ms], speed: 30617.995 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 108.565 [ms], allgather: 42.079 [ms], asnumpy: 13.395 [ms], speed: 30480.310 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 108.565 [ms], allgather: 42.079 [ms], asnumpy: 13.395 [ms], speed: 30480.310 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 104.726 [ms], allgather: 48.054 [ms], asnumpy: 12.634 [ms], speed: 30226.865 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 104.726 [ms], allgather: 48.054 [ms], asnumpy: 12.634 [ms], speed: 30226.865 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 108.418 [ms], allgather: 44.750 [ms], asnumpy: 14.053 [ms], speed: 29900.155 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 108.418 [ms], allgather: 44.750 [ms], asnumpy: 14.053 [ms], speed: 29900.155 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 106.333 [ms], allgather: 47.084 [ms], asnumpy: 13.996 [ms], speed: 29865.877 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 106.333 [ms], allgather: 47.084 [ms], asnumpy: 13.996 [ms], speed: 29865.877 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 109.183 [ms], allgather: 44.319 [ms], asnumpy: 11.317 [ms], speed: 30335.913 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 109.183 [ms], allgather: 44.319 [ms], asnumpy: 11.317 [ms], speed: 30335.913 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 108.402 [ms], allgather: 44.529 [ms], asnumpy: 14.132 [ms], speed: 29928.360 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 108.402 [ms], allgather: 44.529 [ms], asnumpy: 14.132 [ms], speed: 29928.360 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 108.582 [ms], allgather: 44.766 [ms], asnumpy: 14.814 [ms], speed: 29733.088 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 108.582 [ms], allgather: 44.766 [ms], asnumpy: 14.814 [ms], speed: 29733.088 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 110.028 [ms], allgather: 42.840 [ms], asnumpy: 15.983 [ms], speed: 29611.422 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 110.028 [ms], allgather: 42.840 [ms], asnumpy: 15.983 [ms], speed: 29611.422 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.713 [ms], allgather: 54.780 [ms], asnumpy: 7.215 [ms], speed: 30356.376 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.713 [ms], allgather: 54.780 [ms], asnumpy: 7.215 [ms], speed: 30356.376 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 105.084 [ms], allgather: 53.683 [ms], asnumpy: 6.963 [ms], speed: 30169.076 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 105.084 [ms], allgather: 53.683 [ms], asnumpy: 6.963 [ms], speed: 30169.076 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 100.928 [ms], allgather: 55.473 [ms], asnumpy: 8.590 [ms], speed: 30304.263 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 100.928 [ms], allgather: 55.473 [ms], asnumpy: 8.590 [ms], speed: 30304.263 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 110.525 [ms], allgather: 53.971 [ms], asnumpy: 8.938 [ms], speed: 28829.209 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 110.525 [ms], allgather: 53.971 [ms], asnumpy: 8.938 [ms], speed: 28829.209 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.602 [ms], allgather: 57.305 [ms], asnumpy: 7.409 [ms], speed: 29883.283 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.602 [ms], allgather: 57.305 [ms], asnumpy: 7.409 [ms], speed: 29883.283 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 103.066 [ms], allgather: 55.485 [ms], asnumpy: 9.156 [ms], speed: 29813.314 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 103.066 [ms], allgather: 55.485 [ms], asnumpy: 9.156 [ms], speed: 29813.314 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100767567, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 51, "current_iter_num": 0}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.474 [ms], allgather: 59.310 [ms], asnumpy: 10.932 [ms], speed: 29117.284 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.474 [ms], allgather: 59.310 [ms], asnumpy: 10.932 [ms], speed: 29117.284 [imgs/sec]
INFO:root:[Training][Epoch 51] training time: 0.971 [sec],avg speed: 126555.206 [imgs/sec],loss=4.016
[Training][Epoch 51] training time: 0.971 [sec],avg speed: 126555.206 [imgs/sec],loss=4.016
:::MLLOG {"namespace": "", "time_ms": 1593100768538, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 51}}
:::MLLOG {"namespace": "", "time_ms": 1593100768539, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 52, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3000][Epoch 52, Batch 42/58] lr: 0.29250, training time: 16.093 [ms], speed: 127260.580 [imgs/sec], loss=4.372
[Training][Iteration 3000][Epoch 52, Batch 42/58] lr: 0.29250, training time: 16.093 [ms], speed: 127260.580 [imgs/sec], loss=4.372
INFO:root:[Training][Epoch 52] training time: 0.954 [sec],avg speed: 128858.619 [imgs/sec],loss=3.570
[Training][Epoch 52] training time: 0.954 [sec],avg speed: 128858.619 [imgs/sec],loss=3.570
:::MLLOG {"namespace": "", "time_ms": 1593100769493, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 52}}
:::MLLOG {"namespace": "", "time_ms": 1593100769493, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 53, "current_iter_num": 0}}
INFO:root:[Training][Epoch 53] training time: 0.971 [sec],avg speed: 126593.596 [imgs/sec],loss=3.846
[Training][Epoch 53] training time: 0.971 [sec],avg speed: 126593.596 [imgs/sec],loss=3.846
:::MLLOG {"namespace": "", "time_ms": 1593100770464, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 53}}
:::MLLOG {"namespace": "", "time_ms": 1593100770464, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 54, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1593100770530, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1593100770530, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.18479567903888494, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 50}}
INFO:root:[Training][Iteration 3100][Epoch 54, Batch 26/58] lr: 0.29250, training time: 16.397 [ms], speed: 124903.067 [imgs/sec], loss=1.198
[Training][Iteration 3100][Epoch 54, Batch 26/58] lr: 0.29250, training time: 16.397 [ms], speed: 124903.067 [imgs/sec], loss=1.198
INFO:root:[Training][Epoch 54] training time: 0.647 [sec],avg speed: 126684.597 [imgs/sec],loss=3.633
[Training][Epoch 54] training time: 0.647 [sec],avg speed: 126684.597 [imgs/sec],loss=3.633
:::MLLOG {"namespace": "", "time_ms": 1593100771111, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 54}}
:::MLLOG {"namespace": "", "time_ms": 1593100771112, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 55, "current_iter_num": 0}}
INFO:root:[Training][Epoch 55] training time: 0.944 [sec],avg speed: 130155.914 [imgs/sec],loss=3.904
[Training][Epoch 55] training time: 0.944 [sec],avg speed: 130155.914 [imgs/sec],loss=3.904
:::MLLOG {"namespace": "", "time_ms": 1593100772056, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1593100772068, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 55}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.096 [ms], allgather: 38.666 [ms], asnumpy: 7.767 [ms], speed: 34356.787 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.096 [ms], allgather: 38.666 [ms], asnumpy: 7.767 [ms], speed: 34356.787 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.677 [ms], allgather: 45.329 [ms], asnumpy: 7.840 [ms], speed: 33818.705 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.677 [ms], allgather: 45.329 [ms], asnumpy: 7.840 [ms], speed: 33818.705 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.688 [ms], allgather: 38.563 [ms], asnumpy: 7.983 [ms], speed: 33730.153 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.688 [ms], allgather: 38.563 [ms], asnumpy: 7.983 [ms], speed: 33730.153 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.176 [ms], allgather: 39.524 [ms], asnumpy: 7.831 [ms], speed: 33662.691 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.176 [ms], allgather: 39.524 [ms], asnumpy: 7.831 [ms], speed: 33662.691 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.684 [ms], allgather: 38.844 [ms], asnumpy: 7.892 [ms], speed: 33687.728 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.684 [ms], allgather: 38.844 [ms], asnumpy: 7.892 [ms], speed: 33687.728 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.679 [ms], allgather: 43.084 [ms], asnumpy: 7.769 [ms], speed: 35578.598 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.679 [ms], allgather: 43.084 [ms], asnumpy: 7.769 [ms], speed: 35578.598 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.005 [ms], allgather: 37.363 [ms], asnumpy: 7.901 [ms], speed: 33951.034 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.005 [ms], allgather: 37.363 [ms], asnumpy: 7.901 [ms], speed: 33951.034 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.453 [ms], allgather: 37.987 [ms], asnumpy: 7.870 [ms], speed: 33712.855 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.453 [ms], allgather: 37.987 [ms], asnumpy: 7.870 [ms], speed: 33712.855 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.095 [ms], allgather: 38.216 [ms], asnumpy: 8.044 [ms], speed: 33931.039 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.095 [ms], allgather: 38.216 [ms], asnumpy: 8.044 [ms], speed: 33931.039 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.644 [ms], allgather: 50.825 [ms], asnumpy: 8.110 [ms], speed: 33651.672 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.644 [ms], allgather: 50.825 [ms], asnumpy: 8.110 [ms], speed: 33651.672 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.875 [ms], allgather: 37.753 [ms], asnumpy: 7.830 [ms], speed: 33907.614 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.875 [ms], allgather: 37.753 [ms], asnumpy: 7.830 [ms], speed: 33907.614 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 103.434 [ms], allgather: 37.529 [ms], asnumpy: 7.697 [ms], speed: 33633.376 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 103.434 [ms], allgather: 37.529 [ms], asnumpy: 7.697 [ms], speed: 33633.376 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 102.058 [ms], allgather: 39.018 [ms], asnumpy: 7.832 [ms], speed: 33577.695 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 102.058 [ms], allgather: 39.018 [ms], asnumpy: 7.832 [ms], speed: 33577.695 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.952 [ms], allgather: 39.554 [ms], asnumpy: 7.283 [ms], speed: 33604.166 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.952 [ms], allgather: 39.554 [ms], asnumpy: 7.283 [ms], speed: 33604.166 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.025 [ms], allgather: 40.519 [ms], asnumpy: 8.122 [ms], speed: 33631.974 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.025 [ms], allgather: 40.519 [ms], asnumpy: 8.122 [ms], speed: 33631.974 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.942 [ms], allgather: 39.053 [ms], asnumpy: 8.010 [ms], speed: 33555.613 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.942 [ms], allgather: 39.053 [ms], asnumpy: 8.010 [ms], speed: 33555.613 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.641 [ms], allgather: 48.191 [ms], asnumpy: 7.922 [ms], speed: 33612.137 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.641 [ms], allgather: 48.191 [ms], asnumpy: 7.922 [ms], speed: 33612.137 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 102.081 [ms], allgather: 38.160 [ms], asnumpy: 7.995 [ms], speed: 33729.773 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 102.081 [ms], allgather: 38.160 [ms], asnumpy: 7.995 [ms], speed: 33729.773 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.204 [ms], allgather: 40.873 [ms], asnumpy: 7.774 [ms], speed: 33589.957 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.204 [ms], allgather: 40.873 [ms], asnumpy: 7.774 [ms], speed: 33589.957 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.720 [ms], allgather: 41.911 [ms], asnumpy: 7.232 [ms], speed: 33587.267 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.720 [ms], allgather: 41.911 [ms], asnumpy: 7.232 [ms], speed: 33587.267 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.273 [ms], allgather: 41.024 [ms], asnumpy: 7.732 [ms], speed: 33776.601 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.273 [ms], allgather: 41.024 [ms], asnumpy: 7.732 [ms], speed: 33776.601 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.160 [ms], allgather: 38.022 [ms], asnumpy: 7.925 [ms], speed: 33988.286 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.160 [ms], allgather: 38.022 [ms], asnumpy: 7.925 [ms], speed: 33988.286 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.465 [ms], allgather: 43.375 [ms], asnumpy: 7.339 [ms], speed: 33742.363 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.465 [ms], allgather: 43.375 [ms], asnumpy: 7.339 [ms], speed: 33742.363 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.540 [ms], allgather: 38.502 [ms], asnumpy: 8.078 [ms], speed: 35430.491 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.540 [ms], allgather: 38.502 [ms], asnumpy: 8.078 [ms], speed: 35430.491 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.903 [ms], allgather: 39.379 [ms], asnumpy: 7.854 [ms], speed: 33981.512 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.903 [ms], allgather: 39.379 [ms], asnumpy: 7.854 [ms], speed: 33981.512 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.147 [ms], allgather: 39.198 [ms], asnumpy: 7.866 [ms], speed: 33735.036 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.147 [ms], allgather: 39.198 [ms], asnumpy: 7.866 [ms], speed: 33735.036 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.936 [ms], allgather: 39.397 [ms], asnumpy: 7.943 [ms], speed: 33949.660 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.936 [ms], allgather: 39.397 [ms], asnumpy: 7.943 [ms], speed: 33949.660 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.096 [ms], allgather: 40.145 [ms], asnumpy: 7.658 [ms], speed: 33579.361 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.096 [ms], allgather: 40.145 [ms], asnumpy: 7.658 [ms], speed: 33579.361 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 102.067 [ms], allgather: 39.887 [ms], asnumpy: 7.324 [ms], speed: 33494.464 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 102.067 [ms], allgather: 39.887 [ms], asnumpy: 7.324 [ms], speed: 33494.464 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.445 [ms], allgather: 40.376 [ms], asnumpy: 7.860 [ms], speed: 33628.738 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.445 [ms], allgather: 40.376 [ms], asnumpy: 7.860 [ms], speed: 33628.738 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.588 [ms], allgather: 40.693 [ms], asnumpy: 7.092 [ms], speed: 33472.865 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.588 [ms], allgather: 40.693 [ms], asnumpy: 7.092 [ms], speed: 33472.865 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.431 [ms], allgather: 39.882 [ms], asnumpy: 7.964 [ms], speed: 33494.410 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.431 [ms], allgather: 39.882 [ms], asnumpy: 7.964 [ms], speed: 33494.410 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.325 [ms], allgather: 41.115 [ms], asnumpy: 7.428 [ms], speed: 33362.265 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.325 [ms], allgather: 41.115 [ms], asnumpy: 7.428 [ms], speed: 33362.265 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 103.541 [ms], allgather: 37.603 [ms], asnumpy: 8.689 [ms], speed: 33370.016 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 103.541 [ms], allgather: 37.603 [ms], asnumpy: 8.689 [ms], speed: 33370.016 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.138 [ms], allgather: 38.916 [ms], asnumpy: 9.233 [ms], speed: 33269.063 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.138 [ms], allgather: 38.916 [ms], asnumpy: 9.233 [ms], speed: 33269.063 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.644 [ms], allgather: 41.775 [ms], asnumpy: 8.987 [ms], speed: 33465.601 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.644 [ms], allgather: 41.775 [ms], asnumpy: 8.987 [ms], speed: 33465.601 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.969 [ms], allgather: 46.732 [ms], asnumpy: 10.062 [ms], speed: 33164.314 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.969 [ms], allgather: 46.732 [ms], asnumpy: 10.062 [ms], speed: 33164.314 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.154 [ms], allgather: 39.078 [ms], asnumpy: 10.093 [ms], speed: 33041.001 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.154 [ms], allgather: 39.078 [ms], asnumpy: 10.093 [ms], speed: 33041.001 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.560 [ms], allgather: 39.583 [ms], asnumpy: 10.448 [ms], speed: 33424.051 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.560 [ms], allgather: 39.583 [ms], asnumpy: 10.448 [ms], speed: 33424.051 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.855 [ms], allgather: 38.565 [ms], asnumpy: 9.986 [ms], speed: 33023.467 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.855 [ms], allgather: 38.565 [ms], asnumpy: 9.986 [ms], speed: 33023.467 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.892 [ms], allgather: 49.968 [ms], asnumpy: 10.832 [ms], speed: 32961.028 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.892 [ms], allgather: 49.968 [ms], asnumpy: 10.832 [ms], speed: 32961.028 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.476 [ms], allgather: 39.939 [ms], asnumpy: 9.923 [ms], speed: 33038.399 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.476 [ms], allgather: 39.939 [ms], asnumpy: 9.923 [ms], speed: 33038.399 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.303 [ms], allgather: 39.821 [ms], asnumpy: 10.648 [ms], speed: 33383.615 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.303 [ms], allgather: 39.821 [ms], asnumpy: 10.648 [ms], speed: 33383.615 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 79.475 [ms], allgather: 53.072 [ms], asnumpy: 11.714 [ms], speed: 34658.915 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 79.475 [ms], allgather: 53.072 [ms], asnumpy: 11.714 [ms], speed: 34658.915 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100772220, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 56, "current_iter_num": 0}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.013 [ms], allgather: 39.629 [ms], asnumpy: 11.688 [ms], speed: 32823.030 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.013 [ms], allgather: 39.629 [ms], asnumpy: 11.688 [ms], speed: 32823.030 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.611 [ms], allgather: 39.005 [ms], asnumpy: 11.817 [ms], speed: 33237.005 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.611 [ms], allgather: 39.005 [ms], asnumpy: 11.817 [ms], speed: 33237.005 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.632 [ms], allgather: 40.478 [ms], asnumpy: 11.595 [ms], speed: 32742.420 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.632 [ms], allgather: 40.478 [ms], asnumpy: 11.595 [ms], speed: 32742.420 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 102.851 [ms], allgather: 37.563 [ms], asnumpy: 11.950 [ms], speed: 32815.891 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 102.851 [ms], allgather: 37.563 [ms], asnumpy: 11.950 [ms], speed: 32815.891 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.934 [ms], allgather: 44.230 [ms], asnumpy: 8.686 [ms], speed: 32926.769 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.934 [ms], allgather: 44.230 [ms], asnumpy: 8.686 [ms], speed: 32926.769 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.514 [ms], allgather: 48.436 [ms], asnumpy: 7.521 [ms], speed: 32792.646 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.514 [ms], allgather: 48.436 [ms], asnumpy: 7.521 [ms], speed: 32792.646 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 103.151 [ms], allgather: 47.012 [ms], asnumpy: 7.488 [ms], speed: 31715.492 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 103.151 [ms], allgather: 47.012 [ms], asnumpy: 7.488 [ms], speed: 31715.492 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 94.817 [ms], allgather: 52.038 [ms], asnumpy: 6.899 [ms], speed: 32518.825 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 94.817 [ms], allgather: 52.038 [ms], asnumpy: 6.899 [ms], speed: 32518.825 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.393 [ms], allgather: 56.077 [ms], asnumpy: 6.922 [ms], speed: 32384.747 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.393 [ms], allgather: 56.077 [ms], asnumpy: 6.922 [ms], speed: 32384.747 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.227 [ms], allgather: 55.946 [ms], asnumpy: 7.315 [ms], speed: 32156.277 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.227 [ms], allgather: 55.946 [ms], asnumpy: 7.315 [ms], speed: 32156.277 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.231 [ms], allgather: 53.405 [ms], asnumpy: 8.720 [ms], speed: 32183.567 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.231 [ms], allgather: 53.405 [ms], asnumpy: 8.720 [ms], speed: 32183.567 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 102.540 [ms], allgather: 53.066 [ms], asnumpy: 8.089 [ms], speed: 30544.370 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 102.540 [ms], allgather: 53.066 [ms], asnumpy: 8.089 [ms], speed: 30544.370 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.642 [ms], allgather: 53.368 [ms], asnumpy: 8.690 [ms], speed: 31907.689 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.642 [ms], allgather: 53.368 [ms], asnumpy: 8.690 [ms], speed: 31907.689 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.953 [ms], allgather: 54.008 [ms], asnumpy: 10.333 [ms], speed: 31787.167 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.953 [ms], allgather: 54.008 [ms], asnumpy: 10.333 [ms], speed: 31787.167 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.393 [ms], allgather: 52.911 [ms], asnumpy: 10.518 [ms], speed: 31680.947 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.393 [ms], allgather: 52.911 [ms], asnumpy: 10.518 [ms], speed: 31680.947 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 94.572 [ms], allgather: 52.832 [ms], asnumpy: 10.550 [ms], speed: 31654.264 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 94.572 [ms], allgather: 52.832 [ms], asnumpy: 10.550 [ms], speed: 31654.264 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 93.894 [ms], allgather: 52.771 [ms], asnumpy: 11.052 [ms], speed: 31701.828 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 93.894 [ms], allgather: 52.771 [ms], asnumpy: 11.052 [ms], speed: 31701.828 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.697 [ms], allgather: 54.145 [ms], asnumpy: 10.339 [ms], speed: 31608.987 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.697 [ms], allgather: 54.145 [ms], asnumpy: 10.339 [ms], speed: 31608.987 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 82.801 [ms], allgather: 64.996 [ms], asnumpy: 10.699 [ms], speed: 31546.082 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 82.801 [ms], allgather: 64.996 [ms], asnumpy: 10.699 [ms], speed: 31546.082 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 90.145 [ms], allgather: 57.677 [ms], asnumpy: 10.683 [ms], speed: 31544.089 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 90.145 [ms], allgather: 57.677 [ms], asnumpy: 10.683 [ms], speed: 31544.089 [imgs/sec]
INFO:root:[Training][Iteration 3200][Epoch 56, Batch 10/58] lr: 0.29250, training time: 17.255 [ms], speed: 118692.884 [imgs/sec], loss=3.672
[Training][Iteration 3200][Epoch 56, Batch 10/58] lr: 0.29250, training time: 17.255 [ms], speed: 118692.884 [imgs/sec], loss=3.672
INFO:root:[Training][Epoch 56] training time: 0.965 [sec],avg speed: 127346.364 [imgs/sec],loss=3.609
[Training][Epoch 56] training time: 0.965 [sec],avg speed: 127346.364 [imgs/sec],loss=3.609
:::MLLOG {"namespace": "", "time_ms": 1593100773185, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 56}}
:::MLLOG {"namespace": "", "time_ms": 1593100773186, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 57, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3300][Epoch 57, Batch 52/58] lr: 0.29250, training time: 16.505 [ms], speed: 124081.624 [imgs/sec], loss=3.113
[Training][Iteration 3300][Epoch 57, Batch 52/58] lr: 0.29250, training time: 16.505 [ms], speed: 124081.624 [imgs/sec], loss=3.113
INFO:root:[Training][Epoch 57] training time: 0.989 [sec],avg speed: 124240.414 [imgs/sec],loss=3.711
[Training][Epoch 57] training time: 0.989 [sec],avg speed: 124240.414 [imgs/sec],loss=3.711
:::MLLOG {"namespace": "", "time_ms": 1593100774175, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 57}}
:::MLLOG {"namespace": "", "time_ms": 1593100774175, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 58, "current_iter_num": 0}}
INFO:root:[Training][Epoch 58] training time: 0.961 [sec],avg speed: 127808.371 [imgs/sec],loss=3.557
[Training][Epoch 58] training time: 0.961 [sec],avg speed: 127808.371 [imgs/sec],loss=3.557
:::MLLOG {"namespace": "", "time_ms": 1593100775137, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 58}}
:::MLLOG {"namespace": "", "time_ms": 1593100775137, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 59, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1593100775236, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1593100775236, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.194003967585613, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 55}}
INFO:root:[Training][Iteration 3400][Epoch 59, Batch 36/58] lr: 0.29250, training time: 17.476 [ms], speed: 117187.407 [imgs/sec], loss=1.664
[Training][Iteration 3400][Epoch 59, Batch 36/58] lr: 0.29250, training time: 17.476 [ms], speed: 117187.407 [imgs/sec], loss=1.664
INFO:root:[Training][Epoch 59] training time: 1.009 [sec],avg speed: 121731.097 [imgs/sec],loss=3.751
[Training][Epoch 59] training time: 1.009 [sec],avg speed: 121731.097 [imgs/sec],loss=3.751
:::MLLOG {"namespace": "", "time_ms": 1593100776147, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 59}}
:::MLLOG {"namespace": "", "time_ms": 1593100776147, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 60, "current_iter_num": 0}}
INFO:root:[Training][Epoch 60] training time: 0.622 [sec],avg speed: 131698.329 [imgs/sec],loss=3.820
[Training][Epoch 60] training time: 0.622 [sec],avg speed: 131698.329 [imgs/sec],loss=3.820
:::MLLOG {"namespace": "", "time_ms": 1593100776770, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1593100776782, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 60}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.089 [ms], allgather: 39.726 [ms], asnumpy: 6.918 [ms], speed: 34786.313 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.089 [ms], allgather: 39.726 [ms], asnumpy: 6.918 [ms], speed: 34786.313 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.092 [ms], allgather: 37.312 [ms], asnumpy: 6.958 [ms], speed: 35121.350 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.092 [ms], allgather: 37.312 [ms], asnumpy: 6.958 [ms], speed: 35121.350 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.470 [ms], allgather: 36.771 [ms], asnumpy: 6.959 [ms], speed: 34434.806 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.470 [ms], allgather: 36.771 [ms], asnumpy: 6.959 [ms], speed: 34434.806 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.953 [ms], allgather: 38.213 [ms], asnumpy: 7.045 [ms], speed: 34432.318 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.953 [ms], allgather: 38.213 [ms], asnumpy: 7.045 [ms], speed: 34432.318 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.247 [ms], allgather: 39.112 [ms], asnumpy: 6.966 [ms], speed: 35630.765 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.247 [ms], allgather: 39.112 [ms], asnumpy: 6.966 [ms], speed: 35630.765 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.483 [ms], allgather: 36.899 [ms], asnumpy: 7.046 [ms], speed: 34860.328 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.483 [ms], allgather: 36.899 [ms], asnumpy: 7.046 [ms], speed: 34860.328 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.139 [ms], allgather: 36.923 [ms], asnumpy: 6.765 [ms], speed: 34286.798 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.139 [ms], allgather: 36.923 [ms], asnumpy: 6.765 [ms], speed: 34286.798 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.327 [ms], allgather: 48.107 [ms], asnumpy: 7.023 [ms], speed: 34373.850 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.327 [ms], allgather: 48.107 [ms], asnumpy: 7.023 [ms], speed: 34373.850 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.260 [ms], allgather: 37.874 [ms], asnumpy: 7.009 [ms], speed: 34448.438 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.260 [ms], allgather: 37.874 [ms], asnumpy: 7.009 [ms], speed: 34448.438 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.722 [ms], allgather: 40.062 [ms], asnumpy: 7.034 [ms], speed: 34525.510 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.722 [ms], allgather: 40.062 [ms], asnumpy: 7.034 [ms], speed: 34525.510 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.106 [ms], allgather: 36.407 [ms], asnumpy: 7.056 [ms], speed: 34585.010 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.106 [ms], allgather: 36.407 [ms], asnumpy: 7.056 [ms], speed: 34585.010 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.568 [ms], allgather: 37.032 [ms], asnumpy: 7.504 [ms], speed: 36204.234 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.568 [ms], allgather: 37.032 [ms], asnumpy: 7.504 [ms], speed: 36204.234 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.522 [ms], allgather: 36.946 [ms], asnumpy: 7.206 [ms], speed: 36316.962 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.522 [ms], allgather: 36.946 [ms], asnumpy: 7.206 [ms], speed: 36316.962 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.744 [ms], allgather: 43.246 [ms], asnumpy: 6.880 [ms], speed: 34276.599 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.744 [ms], allgather: 43.246 [ms], asnumpy: 6.880 [ms], speed: 34276.599 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.260 [ms], allgather: 38.112 [ms], asnumpy: 7.938 [ms], speed: 34888.919 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.260 [ms], allgather: 38.112 [ms], asnumpy: 7.938 [ms], speed: 34888.919 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.949 [ms], allgather: 36.583 [ms], asnumpy: 7.190 [ms], speed: 34311.649 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.949 [ms], allgather: 36.583 [ms], asnumpy: 7.190 [ms], speed: 34311.649 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.742 [ms], allgather: 42.562 [ms], asnumpy: 6.630 [ms], speed: 34261.535 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.742 [ms], allgather: 42.562 [ms], asnumpy: 6.630 [ms], speed: 34261.535 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 102.062 [ms], allgather: 36.614 [ms], asnumpy: 7.157 [ms], speed: 34285.397 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 102.062 [ms], allgather: 36.614 [ms], asnumpy: 7.157 [ms], speed: 34285.397 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.183 [ms], allgather: 37.600 [ms], asnumpy: 7.419 [ms], speed: 36178.565 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.183 [ms], allgather: 37.600 [ms], asnumpy: 7.419 [ms], speed: 36178.565 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.298 [ms], allgather: 48.504 [ms], asnumpy: 7.313 [ms], speed: 34694.177 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.298 [ms], allgather: 48.504 [ms], asnumpy: 7.313 [ms], speed: 34694.177 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 90.313 [ms], allgather: 49.007 [ms], asnumpy: 7.089 [ms], speed: 34150.564 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 90.313 [ms], allgather: 49.007 [ms], asnumpy: 7.089 [ms], speed: 34150.564 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.391 [ms], allgather: 39.933 [ms], asnumpy: 7.876 [ms], speed: 34199.405 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.391 [ms], allgather: 39.933 [ms], asnumpy: 7.876 [ms], speed: 34199.405 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.186 [ms], allgather: 37.911 [ms], asnumpy: 7.478 [ms], speed: 34111.902 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.186 [ms], allgather: 37.911 [ms], asnumpy: 7.478 [ms], speed: 34111.902 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.533 [ms], allgather: 39.771 [ms], asnumpy: 7.110 [ms], speed: 34622.409 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.533 [ms], allgather: 39.771 [ms], asnumpy: 7.110 [ms], speed: 34622.409 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.326 [ms], allgather: 43.469 [ms], asnumpy: 7.241 [ms], speed: 34237.483 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.326 [ms], allgather: 43.469 [ms], asnumpy: 7.241 [ms], speed: 34237.483 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.573 [ms], allgather: 46.388 [ms], asnumpy: 7.388 [ms], speed: 34637.448 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.573 [ms], allgather: 46.388 [ms], asnumpy: 7.388 [ms], speed: 34637.448 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.209 [ms], allgather: 38.659 [ms], asnumpy: 7.641 [ms], speed: 34127.279 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.209 [ms], allgather: 38.659 [ms], asnumpy: 7.641 [ms], speed: 34127.279 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.351 [ms], allgather: 36.674 [ms], asnumpy: 7.804 [ms], speed: 34286.462 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.351 [ms], allgather: 36.674 [ms], asnumpy: 7.804 [ms], speed: 34286.462 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.364 [ms], allgather: 39.613 [ms], asnumpy: 7.634 [ms], speed: 34103.471 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.364 [ms], allgather: 39.613 [ms], asnumpy: 7.634 [ms], speed: 34103.471 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.358 [ms], allgather: 37.091 [ms], asnumpy: 7.759 [ms], speed: 34197.454 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.358 [ms], allgather: 37.091 [ms], asnumpy: 7.759 [ms], speed: 34197.454 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.962 [ms], allgather: 41.585 [ms], asnumpy: 7.688 [ms], speed: 34190.986 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.962 [ms], allgather: 41.585 [ms], asnumpy: 7.688 [ms], speed: 34190.986 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.792 [ms], allgather: 38.246 [ms], asnumpy: 7.890 [ms], speed: 34262.991 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.792 [ms], allgather: 38.246 [ms], asnumpy: 7.890 [ms], speed: 34262.991 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.578 [ms], allgather: 43.241 [ms], asnumpy: 7.084 [ms], speed: 34268.757 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.578 [ms], allgather: 43.241 [ms], asnumpy: 7.084 [ms], speed: 34268.757 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.949 [ms], allgather: 37.077 [ms], asnumpy: 9.144 [ms], speed: 33973.970 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.949 [ms], allgather: 37.077 [ms], asnumpy: 9.144 [ms], speed: 33973.970 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.234 [ms], allgather: 47.499 [ms], asnumpy: 8.595 [ms], speed: 33937.574 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.234 [ms], allgather: 47.499 [ms], asnumpy: 8.595 [ms], speed: 33937.574 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.563 [ms], allgather: 35.991 [ms], asnumpy: 9.359 [ms], speed: 34033.073 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.563 [ms], allgather: 35.991 [ms], asnumpy: 9.359 [ms], speed: 34033.073 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.108 [ms], allgather: 36.449 [ms], asnumpy: 9.277 [ms], speed: 34051.640 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.108 [ms], allgather: 36.449 [ms], asnumpy: 9.277 [ms], speed: 34051.640 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.941 [ms], allgather: 36.021 [ms], asnumpy: 10.030 [ms], speed: 33785.471 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.941 [ms], allgather: 36.021 [ms], asnumpy: 10.030 [ms], speed: 33785.471 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.710 [ms], allgather: 39.619 [ms], asnumpy: 9.939 [ms], speed: 33722.180 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.710 [ms], allgather: 39.619 [ms], asnumpy: 9.939 [ms], speed: 33722.180 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.144 [ms], allgather: 46.277 [ms], asnumpy: 9.985 [ms], speed: 33690.921 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.144 [ms], allgather: 46.277 [ms], asnumpy: 9.985 [ms], speed: 33690.921 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.465 [ms], allgather: 36.776 [ms], asnumpy: 9.522 [ms], speed: 33609.875 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.465 [ms], allgather: 36.776 [ms], asnumpy: 9.522 [ms], speed: 33609.875 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 103.362 [ms], allgather: 35.045 [ms], asnumpy: 10.524 [ms], speed: 33572.212 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 103.362 [ms], allgather: 35.045 [ms], asnumpy: 10.524 [ms], speed: 33572.212 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.585 [ms], allgather: 39.931 [ms], asnumpy: 10.633 [ms], speed: 33523.322 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.585 [ms], allgather: 39.931 [ms], asnumpy: 10.633 [ms], speed: 33523.322 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.552 [ms], allgather: 37.381 [ms], asnumpy: 10.555 [ms], speed: 33447.187 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.552 [ms], allgather: 37.381 [ms], asnumpy: 10.555 [ms], speed: 33447.187 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.275 [ms], allgather: 39.412 [ms], asnumpy: 10.533 [ms], speed: 33962.141 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.275 [ms], allgather: 39.412 [ms], asnumpy: 10.533 [ms], speed: 33962.141 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.167 [ms], allgather: 38.848 [ms], asnumpy: 9.093 [ms], speed: 33532.435 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.167 [ms], allgather: 38.848 [ms], asnumpy: 9.093 [ms], speed: 33532.435 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.802 [ms], allgather: 38.533 [ms], asnumpy: 10.951 [ms], speed: 33492.056 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.802 [ms], allgather: 38.533 [ms], asnumpy: 10.951 [ms], speed: 33492.056 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 89.520 [ms], allgather: 49.115 [ms], asnumpy: 6.615 [ms], speed: 34422.823 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 89.520 [ms], allgather: 49.115 [ms], asnumpy: 6.615 [ms], speed: 34422.823 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.179 [ms], allgather: 47.540 [ms], asnumpy: 6.551 [ms], speed: 32621.813 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.179 [ms], allgather: 47.540 [ms], asnumpy: 6.551 [ms], speed: 32621.813 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.646 [ms], allgather: 56.869 [ms], asnumpy: 6.562 [ms], speed: 32877.523 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.646 [ms], allgather: 56.869 [ms], asnumpy: 6.562 [ms], speed: 32877.523 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.543 [ms], allgather: 48.406 [ms], asnumpy: 6.555 [ms], speed: 32785.776 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.543 [ms], allgather: 48.406 [ms], asnumpy: 6.555 [ms], speed: 32785.776 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.327 [ms], allgather: 48.058 [ms], asnumpy: 6.767 [ms], speed: 33522.358 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.327 [ms], allgather: 48.058 [ms], asnumpy: 6.767 [ms], speed: 33522.358 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.803 [ms], allgather: 47.013 [ms], asnumpy: 6.864 [ms], speed: 33404.034 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.803 [ms], allgather: 47.013 [ms], asnumpy: 6.864 [ms], speed: 33404.034 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.004 [ms], inference: 95.091 [ms], allgather: 46.964 [ms], asnumpy: 7.594 [ms], speed: 33410.633 [imgs/sec]
[Validation] save_parameters: 0.004 [ms], inference: 95.091 [ms], allgather: 46.964 [ms], asnumpy: 7.594 [ms], speed: 33410.633 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 93.183 [ms], allgather: 50.669 [ms], asnumpy: 6.205 [ms], speed: 33320.072 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 93.183 [ms], allgather: 50.669 [ms], asnumpy: 6.205 [ms], speed: 33320.072 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 93.110 [ms], allgather: 50.858 [ms], asnumpy: 6.556 [ms], speed: 33216.685 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 93.110 [ms], allgather: 50.858 [ms], asnumpy: 6.556 [ms], speed: 33216.685 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.250 [ms], allgather: 51.644 [ms], asnumpy: 6.328 [ms], speed: 31600.795 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.250 [ms], allgather: 51.644 [ms], asnumpy: 6.328 [ms], speed: 31600.795 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.044 [ms], allgather: 53.488 [ms], asnumpy: 6.457 [ms], speed: 33114.512 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.044 [ms], allgather: 53.488 [ms], asnumpy: 6.457 [ms], speed: 33114.512 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.981 [ms], allgather: 50.011 [ms], asnumpy: 7.195 [ms], speed: 33071.117 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.981 [ms], allgather: 50.011 [ms], asnumpy: 7.195 [ms], speed: 33071.117 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.963 [ms], allgather: 51.611 [ms], asnumpy: 7.200 [ms], speed: 32943.320 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.963 [ms], allgather: 51.611 [ms], asnumpy: 7.200 [ms], speed: 32943.320 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 94.738 [ms], allgather: 48.686 [ms], asnumpy: 9.429 [ms], speed: 32710.501 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 94.738 [ms], allgather: 48.686 [ms], asnumpy: 9.429 [ms], speed: 32710.501 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.240 [ms], allgather: 51.673 [ms], asnumpy: 7.929 [ms], speed: 32713.205 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.240 [ms], allgather: 51.673 [ms], asnumpy: 7.929 [ms], speed: 32713.205 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 94.369 [ms], allgather: 50.491 [ms], asnumpy: 9.879 [ms], speed: 32311.897 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 94.369 [ms], allgather: 50.491 [ms], asnumpy: 9.879 [ms], speed: 32311.897 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.794 [ms], allgather: 50.878 [ms], asnumpy: 10.098 [ms], speed: 32305.476 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.794 [ms], allgather: 50.878 [ms], asnumpy: 10.098 [ms], speed: 32305.476 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100776947, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 61, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3500][Epoch 61, Batch 20/58] lr: 0.02925, training time: 16.770 [ms], speed: 122121.411 [imgs/sec], loss=1.487
[Training][Iteration 3500][Epoch 61, Batch 20/58] lr: 0.02925, training time: 16.770 [ms], speed: 122121.411 [imgs/sec], loss=1.487
INFO:root:[Training][Epoch 61] training time: 0.963 [sec],avg speed: 127653.702 [imgs/sec],loss=3.494
[Training][Epoch 61] training time: 0.963 [sec],avg speed: 127653.702 [imgs/sec],loss=3.494
:::MLLOG {"namespace": "", "time_ms": 1593100777910, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 61}}
:::MLLOG {"namespace": "", "time_ms": 1593100777910, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 62, "current_iter_num": 0}}
INFO:root:[Training][Epoch 62] training time: 0.954 [sec],avg speed: 128822.095 [imgs/sec],loss=3.344
[Training][Epoch 62] training time: 0.954 [sec],avg speed: 128822.095 [imgs/sec],loss=3.344
:::MLLOG {"namespace": "", "time_ms": 1593100778864, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 62}}
:::MLLOG {"namespace": "", "time_ms": 1593100778865, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 63, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3600][Epoch 63, Batch 4/58] lr: 0.02925, training time: 17.900 [ms], speed: 114413.471 [imgs/sec], loss=2.709
[Training][Iteration 3600][Epoch 63, Batch 4/58] lr: 0.02925, training time: 17.900 [ms], speed: 114413.471 [imgs/sec], loss=2.709
:::MLLOG {"namespace": "", "time_ms": 1593100779792, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1593100779792, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.19329681737536628, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 60}}
INFO:root:[Training][Epoch 63] training time: 0.972 [sec],avg speed: 126451.592 [imgs/sec],loss=3.325
[Training][Epoch 63] training time: 0.972 [sec],avg speed: 126451.592 [imgs/sec],loss=3.325
:::MLLOG {"namespace": "", "time_ms": 1593100779837, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 63}}
:::MLLOG {"namespace": "", "time_ms": 1593100779837, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 64, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3700][Epoch 64, Batch 46/58] lr: 0.02925, training time: 16.594 [ms], speed: 123417.714 [imgs/sec], loss=1.721
[Training][Iteration 3700][Epoch 64, Batch 46/58] lr: 0.02925, training time: 16.594 [ms], speed: 123417.714 [imgs/sec], loss=1.721
INFO:root:[Training][Epoch 64] training time: 0.979 [sec],avg speed: 125499.653 [imgs/sec],loss=3.434
[Training][Epoch 64] training time: 0.979 [sec],avg speed: 125499.653 [imgs/sec],loss=3.434
:::MLLOG {"namespace": "", "time_ms": 1593100780817, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 64}}
:::MLLOG {"namespace": "", "time_ms": 1593100780817, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 65, "current_iter_num": 0}}
INFO:root:[Training][Epoch 65] training time: 0.960 [sec],avg speed: 127989.124 [imgs/sec],loss=3.284
[Training][Epoch 65] training time: 0.960 [sec],avg speed: 127989.124 [imgs/sec],loss=3.284
:::MLLOG {"namespace": "", "time_ms": 1593100781777, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1593100781789, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 65}}
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 100.563 [ms], allgather: 37.859 [ms], asnumpy: 6.847 [ms], speed: 34418.191 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 100.563 [ms], allgather: 37.859 [ms], asnumpy: 6.847 [ms], speed: 34418.191 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.147 [ms], allgather: 47.905 [ms], asnumpy: 7.318 [ms], speed: 34394.652 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.147 [ms], allgather: 47.905 [ms], asnumpy: 7.318 [ms], speed: 34394.652 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.960 [ms], allgather: 41.832 [ms], asnumpy: 7.107 [ms], speed: 34506.252 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.960 [ms], allgather: 41.832 [ms], asnumpy: 7.107 [ms], speed: 34506.252 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.159 [ms], allgather: 36.567 [ms], asnumpy: 7.250 [ms], speed: 34970.485 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.159 [ms], allgather: 36.567 [ms], asnumpy: 7.250 [ms], speed: 34970.485 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.511 [ms], allgather: 39.218 [ms], asnumpy: 6.928 [ms], speed: 34326.869 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.511 [ms], allgather: 39.218 [ms], asnumpy: 6.928 [ms], speed: 34326.869 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.644 [ms], allgather: 37.639 [ms], asnumpy: 7.140 [ms], speed: 34620.237 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.644 [ms], allgather: 37.639 [ms], asnumpy: 7.140 [ms], speed: 34620.237 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.192 [ms], allgather: 47.117 [ms], asnumpy: 7.286 [ms], speed: 34341.371 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.192 [ms], allgather: 47.117 [ms], asnumpy: 7.286 [ms], speed: 34341.371 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.732 [ms], allgather: 37.663 [ms], asnumpy: 7.182 [ms], speed: 34583.128 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.732 [ms], allgather: 37.663 [ms], asnumpy: 7.182 [ms], speed: 34583.128 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.007 [ms], allgather: 37.779 [ms], asnumpy: 7.218 [ms], speed: 34245.478 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.007 [ms], allgather: 37.779 [ms], asnumpy: 7.218 [ms], speed: 34245.478 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.911 [ms], allgather: 37.352 [ms], asnumpy: 7.743 [ms], speed: 34244.975 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.911 [ms], allgather: 37.352 [ms], asnumpy: 7.743 [ms], speed: 34244.975 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.057 [ms], allgather: 44.121 [ms], asnumpy: 7.037 [ms], speed: 34195.502 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.057 [ms], allgather: 44.121 [ms], asnumpy: 7.037 [ms], speed: 34195.502 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.813 [ms], allgather: 37.966 [ms], asnumpy: 7.412 [ms], speed: 34201.469 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.813 [ms], allgather: 37.966 [ms], asnumpy: 7.412 [ms], speed: 34201.469 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.263 [ms], allgather: 41.937 [ms], asnumpy: 7.533 [ms], speed: 34308.562 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.263 [ms], allgather: 41.937 [ms], asnumpy: 7.533 [ms], speed: 34308.562 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.664 [ms], allgather: 38.810 [ms], asnumpy: 7.422 [ms], speed: 34270.381 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.664 [ms], allgather: 38.810 [ms], asnumpy: 7.422 [ms], speed: 34270.381 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.943 [ms], allgather: 36.941 [ms], asnumpy: 7.694 [ms], speed: 34345.196 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.943 [ms], allgather: 36.941 [ms], asnumpy: 7.694 [ms], speed: 34345.196 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.640 [ms], allgather: 35.065 [ms], asnumpy: 7.540 [ms], speed: 35398.854 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.640 [ms], allgather: 35.065 [ms], asnumpy: 7.540 [ms], speed: 35398.854 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.271 [ms], allgather: 36.706 [ms], asnumpy: 7.396 [ms], speed: 34158.852 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.271 [ms], allgather: 36.706 [ms], asnumpy: 7.396 [ms], speed: 34158.852 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.342 [ms], allgather: 39.857 [ms], asnumpy: 7.079 [ms], speed: 34181.067 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.342 [ms], allgather: 39.857 [ms], asnumpy: 7.079 [ms], speed: 34181.067 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.807 [ms], allgather: 37.637 [ms], asnumpy: 7.086 [ms], speed: 34594.480 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.807 [ms], allgather: 37.637 [ms], asnumpy: 7.086 [ms], speed: 34594.480 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.140 [ms], allgather: 38.908 [ms], asnumpy: 7.504 [ms], speed: 34117.230 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.140 [ms], allgather: 38.908 [ms], asnumpy: 7.504 [ms], speed: 34117.230 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.004 [ms], allgather: 36.966 [ms], asnumpy: 7.835 [ms], speed: 34058.221 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.004 [ms], allgather: 36.966 [ms], asnumpy: 7.835 [ms], speed: 34058.221 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.166 [ms], allgather: 38.166 [ms], asnumpy: 8.027 [ms], speed: 34397.247 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.166 [ms], allgather: 38.166 [ms], asnumpy: 8.027 [ms], speed: 34397.247 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.697 [ms], allgather: 37.772 [ms], asnumpy: 6.994 [ms], speed: 34137.778 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.697 [ms], allgather: 37.772 [ms], asnumpy: 6.994 [ms], speed: 34137.778 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.770 [ms], allgather: 37.404 [ms], asnumpy: 8.758 [ms], speed: 34262.151 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.770 [ms], allgather: 37.404 [ms], asnumpy: 8.758 [ms], speed: 34262.151 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.871 [ms], allgather: 40.024 [ms], asnumpy: 6.756 [ms], speed: 34094.322 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.871 [ms], allgather: 40.024 [ms], asnumpy: 6.756 [ms], speed: 34094.322 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 95.565 [ms], allgather: 42.774 [ms], asnumpy: 8.078 [ms], speed: 34148.840 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 95.565 [ms], allgather: 42.774 [ms], asnumpy: 8.078 [ms], speed: 34148.840 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.100 [ms], allgather: 38.167 [ms], asnumpy: 8.049 [ms], speed: 34172.211 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.251 [ms], allgather: 41.362 [ms], asnumpy: 7.319 [ms], speed: 34029.042 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.251 [ms], allgather: 41.362 [ms], asnumpy: 7.319 [ms], speed: 34029.042 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.100 [ms], allgather: 38.167 [ms], asnumpy: 8.049 [ms], speed: 34172.211 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.325 [ms], allgather: 37.621 [ms], asnumpy: 7.293 [ms], speed: 33957.796 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.325 [ms], allgather: 37.621 [ms], asnumpy: 7.293 [ms], speed: 33957.796 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.927 [ms], allgather: 40.506 [ms], asnumpy: 6.660 [ms], speed: 34224.186 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.927 [ms], allgather: 40.506 [ms], asnumpy: 6.660 [ms], speed: 34224.186 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.874 [ms], allgather: 43.171 [ms], asnumpy: 7.343 [ms], speed: 33923.630 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.874 [ms], allgather: 43.171 [ms], asnumpy: 7.343 [ms], speed: 33923.630 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.949 [ms], allgather: 39.051 [ms], asnumpy: 7.396 [ms], speed: 33921.819 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.949 [ms], allgather: 39.051 [ms], asnumpy: 7.396 [ms], speed: 33921.819 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.738 [ms], allgather: 41.040 [ms], asnumpy: 7.431 [ms], speed: 33964.891 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.738 [ms], allgather: 41.040 [ms], asnumpy: 7.431 [ms], speed: 33964.891 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.090 [ms], allgather: 50.141 [ms], asnumpy: 7.312 [ms], speed: 34353.466 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.090 [ms], allgather: 50.141 [ms], asnumpy: 7.312 [ms], speed: 34353.466 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.779 [ms], allgather: 38.274 [ms], asnumpy: 7.568 [ms], speed: 34335.299 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.779 [ms], allgather: 38.274 [ms], asnumpy: 7.568 [ms], speed: 34335.299 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.657 [ms], allgather: 39.230 [ms], asnumpy: 7.095 [ms], speed: 33787.593 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.657 [ms], allgather: 39.230 [ms], asnumpy: 7.095 [ms], speed: 33787.593 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.086 [ms], allgather: 42.232 [ms], asnumpy: 6.965 [ms], speed: 33947.957 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.086 [ms], allgather: 42.232 [ms], asnumpy: 6.965 [ms], speed: 33947.957 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.366 [ms], allgather: 40.213 [ms], asnumpy: 7.508 [ms], speed: 33763.441 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.366 [ms], allgather: 40.213 [ms], asnumpy: 7.508 [ms], speed: 33763.441 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.919 [ms], allgather: 39.923 [ms], asnumpy: 10.012 [ms], speed: 34280.353 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.919 [ms], allgather: 39.923 [ms], asnumpy: 10.012 [ms], speed: 34280.353 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 96.943 [ms], allgather: 39.574 [ms], asnumpy: 9.192 [ms], speed: 34314.175 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 96.943 [ms], allgather: 39.574 [ms], asnumpy: 9.192 [ms], speed: 34314.175 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.761 [ms], allgather: 37.272 [ms], asnumpy: 9.797 [ms], speed: 34285.957 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.761 [ms], allgather: 37.272 [ms], asnumpy: 9.797 [ms], speed: 34285.957 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.122 [ms], allgather: 39.349 [ms], asnumpy: 7.852 [ms], speed: 34170.708 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.122 [ms], allgather: 39.349 [ms], asnumpy: 7.852 [ms], speed: 34170.708 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.517 [ms], allgather: 36.035 [ms], asnumpy: 9.802 [ms], speed: 34163.471 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.517 [ms], allgather: 36.035 [ms], asnumpy: 9.802 [ms], speed: 34163.471 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.402 [ms], allgather: 38.719 [ms], asnumpy: 7.272 [ms], speed: 33922.368 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.402 [ms], allgather: 38.719 [ms], asnumpy: 7.272 [ms], speed: 33922.368 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.270 [ms], allgather: 39.125 [ms], asnumpy: 9.341 [ms], speed: 34074.324 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.270 [ms], allgather: 39.125 [ms], asnumpy: 9.341 [ms], speed: 34074.324 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.675 [ms], allgather: 40.066 [ms], asnumpy: 7.378 [ms], speed: 33756.430 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.675 [ms], allgather: 40.066 [ms], asnumpy: 7.378 [ms], speed: 33756.430 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.648 [ms], allgather: 39.746 [ms], asnumpy: 10.722 [ms], speed: 33530.719 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.648 [ms], allgather: 39.746 [ms], asnumpy: 10.722 [ms], speed: 33530.719 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.714 [ms], allgather: 37.899 [ms], asnumpy: 10.733 [ms], speed: 33478.850 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.714 [ms], allgather: 37.899 [ms], asnumpy: 10.733 [ms], speed: 33478.850 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.364 [ms], allgather: 45.532 [ms], asnumpy: 6.832 [ms], speed: 33618.010 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.364 [ms], allgather: 45.532 [ms], asnumpy: 6.832 [ms], speed: 33618.010 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.112 [ms], allgather: 38.313 [ms], asnumpy: 10.850 [ms], speed: 33494.731 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.112 [ms], allgather: 38.313 [ms], asnumpy: 10.850 [ms], speed: 33494.731 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.756 [ms], allgather: 37.923 [ms], asnumpy: 10.972 [ms], speed: 33410.633 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.756 [ms], allgather: 37.923 [ms], asnumpy: 10.972 [ms], speed: 33410.633 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.685 [ms], allgather: 48.675 [ms], asnumpy: 10.854 [ms], speed: 33285.485 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.685 [ms], allgather: 48.675 [ms], asnumpy: 10.854 [ms], speed: 33285.485 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 90.267 [ms], allgather: 43.017 [ms], asnumpy: 10.307 [ms], speed: 34820.448 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 90.267 [ms], allgather: 43.017 [ms], asnumpy: 10.307 [ms], speed: 34820.448 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 84.906 [ms], allgather: 53.873 [ms], asnumpy: 7.699 [ms], speed: 34134.389 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 84.906 [ms], allgather: 53.873 [ms], asnumpy: 7.699 [ms], speed: 34134.389 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.448 [ms], allgather: 45.317 [ms], asnumpy: 7.453 [ms], speed: 33507.414 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.448 [ms], allgather: 45.317 [ms], asnumpy: 7.453 [ms], speed: 33507.414 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.499 [ms], allgather: 52.479 [ms], asnumpy: 6.507 [ms], speed: 33225.473 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.499 [ms], allgather: 52.479 [ms], asnumpy: 6.507 [ms], speed: 33225.473 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 86.694 [ms], allgather: 57.254 [ms], asnumpy: 7.116 [ms], speed: 33098.050 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 86.694 [ms], allgather: 57.254 [ms], asnumpy: 7.116 [ms], speed: 33098.050 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100781935, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 66, "current_iter_num": 0}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.979 [ms], allgather: 52.583 [ms], asnumpy: 9.566 [ms], speed: 32866.651 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.979 [ms], allgather: 52.583 [ms], asnumpy: 9.566 [ms], speed: 32866.651 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 94.457 [ms], allgather: 51.826 [ms], asnumpy: 6.785 [ms], speed: 32664.545 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 94.457 [ms], allgather: 51.826 [ms], asnumpy: 6.785 [ms], speed: 32664.545 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.193 [ms], allgather: 52.931 [ms], asnumpy: 9.451 [ms], speed: 32346.235 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.193 [ms], allgather: 52.931 [ms], asnumpy: 9.451 [ms], speed: 32346.235 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 92.424 [ms], allgather: 53.203 [ms], asnumpy: 9.800 [ms], speed: 32168.855 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 92.424 [ms], allgather: 53.203 [ms], asnumpy: 9.800 [ms], speed: 32168.855 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.609 [ms], allgather: 51.633 [ms], asnumpy: 10.226 [ms], speed: 32160.321 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.609 [ms], allgather: 51.633 [ms], asnumpy: 10.226 [ms], speed: 32160.321 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.584 [ms], allgather: 53.092 [ms], asnumpy: 9.697 [ms], speed: 31974.288 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.584 [ms], allgather: 53.092 [ms], asnumpy: 9.697 [ms], speed: 31974.288 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 94.426 [ms], allgather: 51.119 [ms], asnumpy: 11.335 [ms], speed: 31870.884 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 94.426 [ms], allgather: 51.119 [ms], asnumpy: 11.335 [ms], speed: 31870.884 [imgs/sec]
INFO:root:[Training][Iteration 3800][Epoch 66, Batch 30/58] lr: 0.02925, training time: 17.501 [ms], speed: 117024.936 [imgs/sec], loss=1.551
[Training][Iteration 3800][Epoch 66, Batch 30/58] lr: 0.02925, training time: 17.501 [ms], speed: 117024.936 [imgs/sec], loss=1.551
INFO:root:[Training][Epoch 66] training time: 0.990 [sec],avg speed: 124177.702 [imgs/sec],loss=3.368
[Training][Epoch 66] training time: 0.990 [sec],avg speed: 124177.702 [imgs/sec],loss=3.368
:::MLLOG {"namespace": "", "time_ms": 1593100782925, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 66}}
:::MLLOG {"namespace": "", "time_ms": 1593100782925, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 67, "current_iter_num": 0}}
INFO:root:[Training][Epoch 67] training time: 0.652 [sec],avg speed: 125694.833 [imgs/sec],loss=3.651
[Training][Epoch 67] training time: 0.652 [sec],avg speed: 125694.833 [imgs/sec],loss=3.651
:::MLLOG {"namespace": "", "time_ms": 1593100783577, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 67}}
:::MLLOG {"namespace": "", "time_ms": 1593100783578, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 68, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3900][Epoch 68, Batch 14/58] lr: 0.02925, training time: 15.944 [ms], speed: 128452.834 [imgs/sec], loss=5.682
[Training][Iteration 3900][Epoch 68, Batch 14/58] lr: 0.02925, training time: 15.944 [ms], speed: 128452.834 [imgs/sec], loss=5.682
INFO:root:[Training][Epoch 68] training time: 0.975 [sec],avg speed: 126024.063 [imgs/sec],loss=3.389
[Training][Epoch 68] training time: 0.975 [sec],avg speed: 126024.063 [imgs/sec],loss=3.389
:::MLLOG {"namespace": "", "time_ms": 1593100784553, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 68}}
:::MLLOG {"namespace": "", "time_ms": 1593100784553, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 69, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1593100784764, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1593100784765, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.23405343509479146, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 65}}
INFO:root:[Training][Iteration 4000][Epoch 69, Batch 56/58] lr: 0.02925, training time: 16.271 [ms], speed: 125864.787 [imgs/sec], loss=4.628
[Training][Iteration 4000][Epoch 69, Batch 56/58] lr: 0.02925, training time: 16.271 [ms], speed: 125864.787 [imgs/sec], loss=4.628
INFO:root:[Training][Epoch 69] training time: 0.976 [sec],avg speed: 125846.418 [imgs/sec],loss=3.401
[Training][Epoch 69] training time: 0.976 [sec],avg speed: 125846.418 [imgs/sec],loss=3.401
:::MLLOG {"namespace": "", "time_ms": 1593100785530, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 69}}
:::MLLOG {"namespace": "", "time_ms": 1593100785530, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 520, "status": "success"}}
INFO:root:Rank 0 done. map=23.405343509479145 @ epoch=65
Rank 0 done. map=23.405343509479145 @ epoch=65
INFO:root:Rank 608 done. map=23.405343509479145 @ epoch=-1
Rank 608 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 560 done. map=23.405343509479145 @ epoch=-1
Rank 560 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 272 done. map=23.405343509479145 @ epoch=-1
Rank 272 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 864 done. map=23.405343509479145 @ epoch=-1
Rank 864 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 352 done. map=23.405343509479145 @ epoch=-1
Rank 352 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 224 done. map=23.405343509479145 @ epoch=-1
Rank 224 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 768 done. map=23.405343509479145 @ epoch=-1
Rank 768 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 896 done. map=23.405343509479145 @ epoch=-1
Rank 896 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 96 done. map=23.405343509479145 @ epoch=-1
Rank 96 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 704 done. map=23.405343509479145 @ epoch=-1
Rank 704 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 32 done. map=23.405343509479145 @ epoch=-1
Rank 32 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 320 done. map=23.405343509479145 @ epoch=-1
Rank 320 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 736 done. map=23.405343509479145 @ epoch=-1
Rank 736 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 288 done. map=23.405343509479145 @ epoch=-1
Rank 288 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 432 done. map=23.405343509479145 @ epoch=-1
Rank 432 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 720 done. map=23.405343509479145 @ epoch=-1
Rank 720 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 464 done. map=23.405343509479145 @ epoch=-1
Rank 464 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 80 done. map=23.405343509479145 @ epoch=-1
Rank 80 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 880 done. map=23.405343509479145 @ epoch=-1
Rank 880 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 144 done. map=23.405343509479145 @ epoch=-1
Rank 144 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 16 done. map=23.405343509479145 @ epoch=-1
Rank 16 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 816 done. map=23.405343509479145 @ epoch=-1
Rank 816 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 752 done. map=23.405343509479145 @ epoch=-1
Rank 752 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 976 done. map=23.405343509479145 @ epoch=-1
Rank 976 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 912 done. map=23.405343509479145 @ epoch=-1
Rank 912 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 656 done. map=23.405343509479145 @ epoch=-1
Rank 656 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 832 done. map=23.405343509479145 @ epoch=-1
Rank 832 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 960 done. map=23.405343509479145 @ epoch=-1
Rank 960 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 384 done. map=23.405343509479145 @ epoch=-1
Rank 384 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 512 done. map=23.405343509479145 @ epoch=-1
Rank 512 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 448 done. map=23.405343509479145 @ epoch=-1
Rank 448 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 544 done. map=23.405343509479145 @ epoch=-1
Rank 544 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 112 done. map=23.405343509479145 @ epoch=-1
Rank 112 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 688 done. map=23.405343509479145 @ epoch=-1
Rank 688 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 400 done. map=23.405343509479145 @ epoch=-1
Rank 400 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 176 done. map=23.405343509479145 @ epoch=-1
Rank 176 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 368 done. map=23.405343509479145 @ epoch=-1
Rank 368 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 784 done. map=23.405343509479145 @ epoch=-1
Rank 784 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 304 done. map=23.405343509479145 @ epoch=-1
Rank 304 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 336 done. map=23.405343509479145 @ epoch=-1
Rank 336 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 208 done. map=23.405343509479145 @ epoch=-1
Rank 208 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 944 done. map=23.405343509479145 @ epoch=-1
Rank 944 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 928 done. map=23.405343509479145 @ epoch=-1
Rank 928 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 576 done. map=23.405343509479145 @ epoch=-1
Rank 576 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 992 done. map=23.405343509479145 @ epoch=-1
Rank 992 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 480 done. map=23.405343509479145 @ epoch=-1
Rank 480 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 160 done. map=23.405343509479145 @ epoch=-1
Rank 160 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 416 done. map=23.405343509479145 @ epoch=-1
Rank 416 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 48 done. map=23.405343509479145 @ epoch=-1
Rank 48 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 592 done. map=23.405343509479145 @ epoch=-1
Rank 592 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 1008 done. map=23.405343509479145 @ epoch=-1
Rank 1008 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 624 done. map=23.405343509479145 @ epoch=-1
Rank 624 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 192 done. map=23.405343509479145 @ epoch=-1
Rank 192 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 64 done. map=23.405343509479145 @ epoch=-1
Rank 64 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 640 done. map=23.405343509479145 @ epoch=-1
Rank 640 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 256 done. map=23.405343509479145 @ epoch=-1
Rank 256 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 800 done. map=23.405343509479145 @ epoch=-1
Rank 800 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 128 done. map=23.405343509479145 @ epoch=-1
Rank 128 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 496 done. map=23.405343509479145 @ epoch=-1
Rank 496 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 848 done. map=23.405343509479145 @ epoch=-1
Rank 848 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 240 done. map=23.405343509479145 @ epoch=-1
Rank 240 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 672 done. map=23.405343509479145 @ epoch=-1
Rank 672 done. map=23.405343509479145 @ epoch=-1
INFO:root:Rank 528 done. map=23.405343509479145 @ epoch=-1
Rank 528 done. map=23.405343509479145 @ epoch=-1
loading annotations into memory...
Done (t=0.12s)
creating index...
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.20s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16789
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.30703
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.16684
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.24843
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.17926
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.25821
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.26850
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26850
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.41s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.45s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.18480
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.33520
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.18677
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27102
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.19307
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.27996
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.29124
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.29124
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.46s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.43s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.19400
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.34558
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.19913
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27385
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.19805
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.28458
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.29583
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.29583
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.42s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.33s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.19330
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.34220
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.19776
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28244
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.19926
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.28728
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.29799
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.29799
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.44s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.28s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23405
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.39660
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.24111
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.31857
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.22659
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.32574
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.33732
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.33732
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:55 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:55 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:55 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:55 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 08:59:55 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:57:33 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
slurmstepd: error: _is_a_lwp: open() /proc/82420/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
slurmstepd: error: _is_a_lwp: open() /proc/83771/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
slurmstepd: error: _is_a_lwp: open() /proc/83773/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
slurmstepd: error: _is_a_lwp: open() /proc/72274/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
slurmstepd: error: _is_a_lwp: open() /proc/87867/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
slurmstepd: error: _is_a_lwp: open() /proc/76445/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
slurmstepd: error: _is_a_lwp: open() /proc/85159/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
slurmstepd: error: _is_a_lwp: open() /proc/82060/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
ENDING TIMING RUN AT 2020-06-25 09:00:00 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:57:33 AM
