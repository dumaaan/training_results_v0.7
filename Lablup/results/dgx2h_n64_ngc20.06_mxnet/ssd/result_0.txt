+ echo 'Beginning trial 2 of 5'
Beginning trial 2 of 5
+ srun -N1 -n1 --container-name=single_stage_detector python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.SSD)'
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
:::MLLOG {"namespace": "", "time_ms": 1593100183779, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "ssd", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 75}}
:::MLLOG {"namespace": "", "time_ms": 1593100183785, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "NVIDIA", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 80}}
:::MLLOG {"namespace": "", "time_ms": 1593100183785, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 84}}
:::MLLOG {"namespace": "", "time_ms": 1593100183785, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 88}}
:::MLLOG {"namespace": "", "time_ms": 1593100183785, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "64xNVIDIA DGX-2H", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 92}}
+ '[' 1 -eq 1 ']'
+ srun --ntasks=64 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n090
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n043
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n084
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n033
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n074
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n032
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n060
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n053
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n045
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n069
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n078
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n067
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n041
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n037
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n039
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n031
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n092
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n077
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n054
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n091
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n036
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n058
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n081
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n038
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n079
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n046
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n050
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n093
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n034
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n085
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n030
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n044
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n062
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n066
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n052
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n089
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n071
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n042
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n068
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n075
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n064
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n040
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n073
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n083
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n056
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n061
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n080
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n088
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n076
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n057
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n047
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n049
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n051
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n086
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n063
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n072
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n055
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n065
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n059
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n035
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n082
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n087
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n048
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
Clearing cache on circe-n029
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
+ srun --ntasks=64 --container-name=single_stage_detector python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import log_event
log_event(key=constants.CACHE_CLEAR, value=True)'
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
:::MLLOG {"namespace": "", "time_ms": 1593100190689, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ srun --mpi=pmix --ntasks=1024 --ntasks-per-node=16 --container-name=single_stage_detector --container-mounts=/raid/datasets/coco/coco-2017:/data,/gpfs/fs1/svcnvdlfw/14238152/results:/results,/raid/datasets/coco/coco-2017/coco2017/models:/pretrained/mxnet ./run_and_time.sh
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: pyxis: reusing existing container filesystem
slurmstepd: pyxis: starting container ...
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 0 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 7 ']'
+ NUMEPOCHS=80
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 14 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 10 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ '[' -n 15 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 13 ']'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 11 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 1 ']'
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 3 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ '[' -n 5 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 11 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 13 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 2 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 6 ']'
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 13 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ '[' -n 15 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 6 ']'
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 15 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 11 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 10 ']'
+ '[' -n 8 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 11 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 5 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' -n 7 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 5 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 9 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 13 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 5 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 8 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ '[' -n 10 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 15 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 9 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ declare -a CMD
+ '[' -n 2 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ cluster=
running benchmark
+ '[' -n 9 ']'
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 11 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 6 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 15 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 6 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 10 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 3 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 14 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ '[' -n 13 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
running benchmark
+ '[' -n 12 ']'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 14 ']'
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
running benchmark
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ '[' -n 12 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 0 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 0 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 14 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 8 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 14 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ '[' -n 4 ']'
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 5 ']'
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 10 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ '[' -n 8 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 2 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 10 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 15 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 11 ']'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 0 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ '[' -n 11 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ declare -a CMD
+ '[' -n 10 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 7 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 14 ']'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 1 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ '[' -n 7 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
running benchmark
+ '[' -n 9 ']'
+ '[' -n 15 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ cluster=circe
+ cluster=circe
+ '[' -n 0 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 14 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ '[' -n 3 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ '[' -n 4 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ '[' -n 2 ']'
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 8 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 10 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ '[' -n 8 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ '[' -n 9 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ '[' -n 6 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
running benchmark
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ cluster=
+ declare -a CMD
+ '[' -n 9 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ '[' -n 12 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 7 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 15 ']'
+ '[' -n 6 ']'
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 1 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 12 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 15 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ declare -a CMD
+ '[' -n 5 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 13 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 12 ']'
+ cluster=
+ '[' -n 8 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
running benchmark
+ '[' -n 4 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 14 ']'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' -n 2 ']'
+ '[' -n 13 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 10 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
running benchmark
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 3 ']'
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 0 ']'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 6 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 12 ']'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 14 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 5 ']'
+ '[' -n 4 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ '[' -n 3 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 8 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 15 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 13 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 15 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 12 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 13 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 2 ']'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ '[' -n 11 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 1 ']'
running benchmark
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ '[' -n 5 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 15 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 12 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 13 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 15 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 8 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 5 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 13 ']'
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 8 ']'
+ NUMEPOCHS=80
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' -n 4 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 14 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 13 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 15 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 0 ']'
+ '[' -n 7 ']'
running benchmark
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 2 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ '[' -n 5 ']'
+ '[' -n 5 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ '[' -n 8 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' -n 11 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 6 ']'
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
running benchmark
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ '[' -n 2 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 10 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ '[' -n 13 ']'
running benchmark
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
running benchmark
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 15 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 15 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 2 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 15 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 15 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 11 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 15 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 2 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 11 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' -n 6 ']'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 8 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ '[' -n 5 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 13 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ '[' -n 5 ']'
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 15 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 10 ']'
+ '[' -n 8 ']'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ cluster=
+ '[' -n 1 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ '[' -n 13 ']'
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 4 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 13 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ '[' -n 4 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ '[' -n 1 ']'
+ '[' -n 10 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 2 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
running benchmark
+ '[' -n 11 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 15 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 14 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' -n 15 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ '[' -n 3 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 0 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 12 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' -n 11 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
running benchmark
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 2 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 2 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ cluster=
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 11 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 3 ']'
running benchmark
+ declare -a CMD
+ '[' -n 7 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 8 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 8 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 13 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 7 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 10 ']'
running benchmark
+ '[' -n 13 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 14 ']'
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
running benchmark
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 15 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 3 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ NUMEPOCHS=80
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 12 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' -n 14 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 4 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 6 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 14 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 13 ']'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 3 ']'
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 15 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 5 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ '[' -n 8 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 15 ']'
+ '[' -n 2 ']'
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 12 ']'
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 13 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 15 ']'
+ '[' -n 7 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 64 ']'
+ '[' -n 1 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 10 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 11 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 5 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 9 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ '[' -n 9 ']'
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 15 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 1 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' -n 10 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 5 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 9 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ NUMEPOCHS=80
+ cluster=
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 8 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 2 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 14 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 1 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 0 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 7 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 12 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 10 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 3 ']'
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 13 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 3 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 4 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 2 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 11 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 12 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 0 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ '[' -n 15 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 8 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 3 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 4 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 8 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 13 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 12 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 15 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 2 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 15 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 14 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 4 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 12 ']'
+ '[' -n 6 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 11 ']'
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 11 ']'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 9 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' -n 6 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 2 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 2 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
running benchmark
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ '[' -n 5 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' -n 6 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ '[' -n 15 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 13 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 11 ']'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 11 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 5 ']'
+ '[' -n 12 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ '[' 1024 -gt 64 ']'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 10 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ '[' -n 7 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ '[' -n 4 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
running benchmark
+ '[' -n 5 ']'
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 7 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 7 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 11 ']'
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 2 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 5 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 13 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 10 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 4 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 15 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ declare -a CMD
+ declare -a CMD
+ '[' -n 5 ']'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 12 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 14 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' -n 6 ']'
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 0 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 12 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 9 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' -n 6 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 5 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 8 ']'
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 12 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
running benchmark
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
running benchmark
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 7 ']'
running benchmark
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ NUMEPOCHS=80
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 5 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 10 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 15 ']'
running benchmark
+ NUMEPOCHS=80
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 11 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 14 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' -n 8 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 11 ']'
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 1 ']'
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 9 ']'
+ '[' -n 9 ']'
+ cluster=circe
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 10 ']'
running benchmark
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 12 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 10 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ declare -a CMD
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ echo 'running benchmark'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ '[' -n 0 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 10 ']'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ NUMEPOCHS=80
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ echo 'running benchmark'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ declare -a CMD
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' -n 12 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ '[' 1024 -gt 64 ']'
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
slurmstepd: task_p_pre_launch: Using sched_affinity for tasks
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ NUMEPOCHS=80
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ echo 'running benchmark'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 14 ']'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ NUMEPOCHS=80
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 15 ']'
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 8 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' -n 13 ']'
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ '[' -n 0 ']'
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ declare -a CMD
+ '[' -n 12 ']'
+ '[' -n 11 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 10 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 9 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ declare -a CMD
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 15 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 12 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ NUMEPOCHS=80
running benchmark
+ declare -a CMD
+ '[' -n 12 ']'
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 0 ']'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ '[' 1024 -gt 64 ']'
+ declare -a CMD
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 14 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=80
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ declare -a CMD
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' -n 11 ']'
running benchmark
+ cluster=circe
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 15 ']'
+ '[' -n 10 ']'
running benchmark
+ '[' 1024 -gt 64 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
running benchmark
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ '[' -n 8 ']'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 64 ']'
+ cluster=
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ declare -a CMD
+ cluster=circe
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' -n 0 ']'
+ NUMEPOCHS=80
+ '[' 1024 -gt 64 ']'
running benchmark
+ echo 'running benchmark'
+ cluster=
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' -n 9 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 14 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 64 ']'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 11 ']'
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=80
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 13 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2020-06-25 08:49:54 AM
+ NUMEPOCHS=80
running benchmark
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export PRETRAINED_DIR=/pretrained/mxnet
+ PRETRAINED_DIR=/pretrained/mxnet
+ declare -a CMD
+ '[' -n 8 ']'
+ '[' 1024 -gt 64 ']'
+ cluster=
+ [[ DGX2_multi_64x16x02x08_bmul == DGX2* ]]
+ cluster=circe
+ [[ DGX2_multi_64x16x02x08_bmul == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=circe --ib=single -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=2 cores_per_socket=24
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --log-interval=100 --coco-root=/data/coco2017 --pretrained-backbone=/pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout=NHWC --epochs 80 --async-val --dataset-size 117266 --eval-dataset-size 5000 --lr-decay-epochs 60 75 --batch-size=2 --eval-batch-size=5 --lr-warmup-epoch=26 --dali-workers=3 --lr=4.57e-3 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198066, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198066, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198066, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198066, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198066, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198068, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198066, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198066, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198066, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198066, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198068, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198066, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198068, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198068, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198066, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198068, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198067, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198069, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198069, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198069, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198069, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198069, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198069, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198069, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198069, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198068, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198070, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198069, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198070, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198070, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198070, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198070, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198070, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198070, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198069, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198069, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198069, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198070, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198070, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198070, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198071, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198073, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198072, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198074, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198075, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198082, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198076, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198084, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198084, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198156, "event_type": "POINT_IN_TIME", "key": "sgd", "value": 1651820564, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 193}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198077, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198082, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198078, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198086, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198079, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198086, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198081, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198085, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198080, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198088, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198083, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198089, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198088, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198088, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198088, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198097, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198097, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198097, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198094, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198099, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198096, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198096, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198097, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198094, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198096, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198096, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198099, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198098, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198098, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198098, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198099, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198098, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198099, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198098, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198097, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198100, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198097, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198100, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198100, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198100, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198099, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198099, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198099, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198099, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198100, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198100, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198100, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198099, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198101, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198100, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198099, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198101, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198087, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198108, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198108, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198088, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198102, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198127, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100198128, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 231}}
:::MLLOG {"namespace": "", "time_ms": 1593100199235, "event_type": "POINT_IN_TIME", "key": "seed", "value": 1651820564, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 218}}
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820564, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820564, start_epoch=1, synthetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1651820564
Seed: 1651820564
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn group: 8
bn group: 8
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI global rank: 0
MPI global rank: 0
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820580, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820580, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820580
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651820580
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
INFO:root:MPI global rank: 16
MPI global rank: 16
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820612, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820612, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820596, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820612
Seed: 1651820612
INFO:root:precision: fp16
precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820596, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820596
Seed: 1651820596
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 48
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 48
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 32
MPI global rank: 32
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820660, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820660, start_epoch=1, synthetic=FalseINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820676, start_epoch=1, synth, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Seed: 1651820660
Seed: 1651820660
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820676, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820676
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651820676
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 96
MPI global rank: 96
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 112
MPI global rank: 112
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820644, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820804, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820644, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820804, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820644
Seed: 1651820644
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820628, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820788, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820804
Seed: 1651820804
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820628, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820628
Seed: 1651820628
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820788, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820788
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651820788
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 80
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821572, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 80
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821316, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 240
MPI global rank: 240
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821572, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821060, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821316, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821572
Seed: 1651821572
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821060, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 64
MPI global rank: 64
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821060
Seed: 1651821060
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821316
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651821316
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821044, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821300, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821556, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821044, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821300, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821556, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821556
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821044
Seed: 1651821044
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651821300
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651821556
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 224
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820756, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 224
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 496
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 1008
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 496
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 1008
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820756, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820724, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820756
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820740, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820724, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
Seed: 1651820756
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 480
MPI global rank: 480
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820740, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 752
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 752
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820724
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820740
Seed: 1651820740
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820772, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651820724
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 992
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 992
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820772, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 736
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 736
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820772
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651820772
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820708, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 176
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820708, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821428, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
MPI global rank: 176
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821236, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821492, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 192
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820932, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821172, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820980, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
MPI global rank: 192
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820916, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821428, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820708
Seed: 1651820708
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821236, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821188, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820996, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821492, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820932, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 160
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821172, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820980, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821428
Seed: 1651821428
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821028, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821284, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821236
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821188, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820996, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821252, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
MPI global rank: 160
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820692, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821492
Seed: 1651821492
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820916, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821444, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651821236
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821508, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820932
Seed: 1651820932
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821172
Seed: 1651821172
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820980
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821028, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821284, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821540, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821188
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820996
Seed: 1651820996
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821252, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820692, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651820980
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820916
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821444, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651821188
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821508, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651820916
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821028
Seed: 1651821028
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 208
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821284
Seed: 1651821284
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821540, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821252
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821444
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 208
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821508
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651821252
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820692
Seed: 1651820692
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651821444
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821540
Seed: 1651821540
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651821508
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821524, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821012, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821396, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821524, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 144
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821268, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821012, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 864
MPI global rank: 864
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820884, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821140, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 144
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821396, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 928
MPI global rank: 928
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821524
Seed: 1651821524
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821268, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820948, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821012
Seed: 1651821012
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820884, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821108, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821396
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821460, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820964, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 432
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651821268
Seed: 1651821268
about to model_zoo.get_model( resnet34_v1 )
Seed: 1651821396
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1651820884
Seed: 1651820884
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821140, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820900, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821108, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821364, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820868, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 368
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 432
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821380, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821220, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820948, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821460, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 608
MPI global rank: 608
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 416
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821204, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821476, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 464
MPI global rank: 464
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820964, start_epoch=1, synthetic=Falseabout to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 368
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 416
INFO:root:bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
precision: fp16
INFO:root:Seed: 1651821140
Seed: 1651821140
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821124, start_epoch=1, synthINFO:root:MPI local rank: 0
bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820900, start_epoch=1, synthetic=FalseINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821156, start_epoch=1, synthINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:Seed: 1651821108
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821364, start_epoch=1, synthetic=Falsebn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820868, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:MPI global rank: 624
MPI global rank: 624
bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:async validation: True
bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821380, start_epoch=1, synthetic=FalseNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821220, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820852, start_epoch=1, synthINFO:root:MPI size: 1024
MPI size: 1024
INFO:root:Seed: 1651820948
Seed: 1651820948
INFO:root:Seed: 1651821460
Seed: 1651821460
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
bn all reduce fp16: False
INFO:root:fuse bn relu: True
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:loss scaling: 128.0
INFO:root:precision: fp16
precision: fp16
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821412, start_epoch=1, synthNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821476, start_epoch=1, synthetic=Falseetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
MPI local rank: 0
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 720
Seed: 1651821108
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:MPI size: 1024
INFO:root:Seed: 1651820964
Seed: 1651820964
INFO:root:precision: fp16
precision: fp16
INFO:root:MPI local rank: 0
INFO:root:bn all reduce fp16: False
INFO:root:async validation: True
async validation: True
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:MPI global rank: 128
INFO:root:precision: fp16
INFO:root:precision: fp16
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
INFO:root:MPI size: 1024
fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821204, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
loss scaling: 128.0
INFO:root:loss scaling: 128.0
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821124, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
INFO:root:Seed: 1651820900
Seed: 1651820900
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821156, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
MPI global rank: 720
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:MPI size: 1024
INFO:root:Seed: 1651820868
MPI size: 1024
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
bn all reduce fp16: False
async validation: True
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:Seed: 1651821380
Seed: 1651821380
INFO:root:precision: fp16
INFO:root:Seed: 1651821220
fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820852, start_epoch=1, synthetic=FalseMPI global rank: 128
precision: fp16
precision: fp16
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
async validation: True
MPI size: 1024
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821412, start_epoch=1, synthetic=FalseINFO:root:Seed: 1651821476
Seed: 1651821476
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:async validation: True
async validation: True
MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
precision: fp16
INFO:root:Seed: 1651821364
Seed: 1651821364
MPI size: 1024
Seed: 1651820868
INFO:root:MPI global rank: 976
MPI global rank: 976
INFO:root:fuse bn relu: True
INFO:root:async validation: True
async validation: True
INFO:root:MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
precision: fp16
Seed: 1651821220
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:loss scaling: 128.0
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
INFO:root:MPI global rank: 352
fuse bn add relu: True
INFO:root:Seed: 1651821204
Seed: 1651821204
INFO:root:MPI global rank: 448
INFO:root:fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:precision: fp16
precision: fp16
INFO:root:Seed: 1651821124
Seed: 1651821124
INFO:root:[SSD] network: resnet34_v1
INFO:root:MPI global rank: 880
MPI global rank: 880
INFO:root:precision: fp16
precision: fp16
INFO:root:Seed: 1651821156
Seed: 1651821156
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
INFO:root:loss scaling: 128.0
INFO:root:precision: fp16
precision: fp16
INFO:root:MPI global rank: 672
INFO:root:precision: fp16
precision: fp16
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:precision: fp16
INFO:root:bn group: 8
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:Seed: 1651820852
Seed: 1651820852
INFO:root:async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
[SSD] network: resnet34_v1
MPI global rank: 352
INFO:root:bn group: 8
bn group: 8
INFO:root:precision: fp16
precision: fp16
MPI global rank: 448
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:Seed: 1651821412
Seed: 1651821412
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:precision: fp16
precision: fp16
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:loss scaling: 128.0
INFO:root:precision: fp16
precision: fp16
INFO:root:[SSD] bn group: 8
async validation: True
loss scaling: 128.0
INFO:root:loss scaling: 128.0
MPI global rank: 672
INFO:root:loss scaling: 128.0
MPI local rank: 0
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 944
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 688
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
bn group: 8
INFO:root:bn group: 8
bn group: 8
INFO:root:precision: fp16
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:loss scaling: 128.0
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:precision: fp16
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:loss scaling: 128.0
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:async validation: True
async validation: True
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI global rank: 944
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI global rank: 688
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:loss scaling: 128.0
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821092, start_epoch=1, synth[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
[SSD] network: resnet34_v1
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820836, start_epoch=1, synthINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821348, start_epoch=1, synth[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
INFO:root:fuse bn relu: True
fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI size: 1024
MPI size: 1024
bn all reduce fp16: False
INFO:root:loss scaling: 128.0
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:async validation: True
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:bn group: 8
bn group: 8
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
MPI local rank: 0
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 704
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI global rank: 832
MPI global rank: 832
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:async validation: True
async validation: True
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:MPI global rank: 960
MPI global rank: 960
INFO:root:fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:fuse bn relu: True
fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821092, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820836, start_epoch=1, synthetic=Falsefuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821348, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
[SSD] bn group: 8
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 704
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 400
async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:async validation: True
INFO:root:bn group: 8
bn group: 8
INFO:root:fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
bn group: 8
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:bn group: 8
INFO:root:bn group: 8
bn group: 8
INFO:root:Seed: 1651821092
Seed: 1651821092
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
INFO:root:fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:Seed: 1651820836
Seed: 1651820836
INFO:root:bn group: 8
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
MPI global rank: 400
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:Seed: 1651821348
Seed: 1651821348
async validation: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
fuse bn relu: True
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821076, start_epoch=1, synthINFO:root:fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821332, start_epoch=1, synthINFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:bn group: 8
bn group: 8
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820820, start_epoch=1, synthINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
async validation: True
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 320
MPI global rank: 320
MPI size: 1024
INFO:root:fuse bn add relu: True
fuse bn add relu: True
bn group: 8
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:precision: fp16
precision: fp16
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
fuse bn add relu: True
[SSD] fuse bn add relu: True
bn group: 8
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:precision: fp16
precision: fp16
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI global rank: 816
MPI global rank: 816
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:async validation: True
async validation: True
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
fuse bn relu: True
[SSD] fuse bn add relu: True
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:MPI size: 1024
INFO:root:bn all reduce fp16: False
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
INFO:root:bn group: 8
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:precision: fp16
precision: fp16
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:bn group: 8
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
INFO:root:async validation: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821076, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651821332, start_epoch=1, synthetic=FalseMPI size: 1024
bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=2, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=1, dali_workers=3, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=80, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.00457, lr_decay_epochs=[60, 75], lr_decay_factor=0.1, lr_warmup_epochs=26.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.0, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1651820820, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI global rank: 576
MPI global rank: 576
bn group: 8
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:bn all reduce fp16: False
INFO:root:loss scaling: 128.0
INFO:root:MPI size: 1024
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
INFO:root:MPI global rank: 384
MPI global rank: 384
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[40, 50, 55, 60, 65, 70, 75, 80], val_interval=None, weight_decay=4e-05)
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] fuse bn add relu: True
INFO:root:async validation: True
async validation: True
INFO:root:MPI local rank: 0
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:MPI global rank: 912
INFO:root:MPI global rank: 560
INFO:root:fuse bn relu: True
fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 336
bn all reduce fp16: False
loss scaling: 128.0
MPI size: 1024
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
INFO:root:Seed: 1651821076
INFO:root:bn group: 8
INFO:root:Seed: 1651821332
Seed: 1651821332
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:Seed: 1651820820
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:MPI size: 1024
MPI global rank: 912
MPI global rank: 560
INFO:root:fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
MPI global rank: 336
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 544
MPI global rank: 544
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
Seed: 1651821076
bn group: 8
INFO:root:precision: fp16
MPI local rank: 0
INFO:root:MPI global rank: 896
MPI global rank: 896
Seed: 1651820820
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:async validation: True
async validation: True
MPI size: 1024
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:MPI global rank: 592
INFO:root:fuse bn relu: True
INFO:root:MPI local rank: 0
INFO:root:MPI global rank: 800
MPI global rank: 800
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 304
MPI global rank: 304
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:async validation: True
async validation: True
INFO:root:MPI local rank: 0
INFO:root:precision: fp16
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:MPI global rank: 848
MPI global rank: 848
INFO:root:async validation: True
MPI local rank: 0
INFO:root:async validation: True
MPI global rank: 592
fuse bn relu: True
MPI local rank: 0
INFO:root:MPI local rank: 0
INFO:root:[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
bn all reduce fp16: False
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
precision: fp16
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
MPI size: 1024
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:bn group: 8
INFO:root:[SSD] bn group: 8
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 656
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI size: 1024
MPI global rank: 656
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 784
MPI global rank: 784
INFO:root:MPI local rank: 0
INFO:root:[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
[SSD] bn group: 8
MPI local rank: 0
INFO:root:async validation: True
INFO:root:loss scaling: 128.0
INFO:root:async validation: True
async validation: True
async validation: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:MPI global rank: 288
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
fuse bn add relu: True
MPI global rank: 288
INFO:root:[SSD] fuse bn relu: True
INFO:root:bn group: 8
INFO:root:MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
bn group: 8
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:async validation: True
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI global rank: 512
MPI global rank: 512
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:async validation: True
async validation: True
async validation: True
[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
async validation: True
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
INFO:root:bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] bn group: 8
bn group: 8
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:loss scaling: 128.0
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI global rank: 768
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
MPI global rank: 768
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:MPI global rank: 640
INFO:root:async validation: True
[SSD] fuse bn add relu: True
MPI global rank: 640
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
async validation: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
INFO:root:async validation: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI global rank: 256
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
MPI global rank: 256
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:async validation: True
async validation: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
async validation: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
INFO:root:async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
[SSD] network: resnet34_v1
async validation: True
INFO:root:[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI size: 1024
MPI size: 1024
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 528
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
MPI global rank: 528
INFO:root:async validation: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
async validation: True
INFO:root:bn group: 8
INFO:root:async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
bn group: 8
async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 272
MPI global rank: 272
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:async validation: True
async validation: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:async validation: True
async validation: True
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
INFO:root:async validation: True
async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1389: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
:::MLLOG {"namespace": "", "time_ms": 1593100213751, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 363}}
:::MLLOG {"namespace": "", "time_ms": 1593100213751, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 364}}
:::MLLOG {"namespace": "", "time_ms": 1593100213752, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 1488, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 30}}
:::MLLOG {"namespace": "", "time_ms": 1593100213752, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 31}}
:::MLLOG {"namespace": "", "time_ms": 1593100213752, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.2925, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 36}}
:::MLLOG {"namespace": "", "time_ms": 1593100213752, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [60, 75], "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 37}}
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
:::MLLOG {"namespace": "", "time_ms": 1593100214043, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 5000, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 407}}
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
:::MLLOG {"namespace": "", "time_ms": 1593100216653, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 4e-05, "metadata": {"file": "/workspace/ssd/trainer.py", "lineno": 29}}
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs
Running training dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:23] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:24] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
[08:50:25] src/imperative/./../executor/cuda_graphs.h:289: Created CUDA graphs.
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Running inference dry runs
Running inference dry runs
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Done
Done
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
:::MLLOG {"namespace": "", "time_ms": 1593100258324, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 495}}
:::MLLOG {"namespace": "", "time_ms": 1593100258419, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 499}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1593100259849, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 16, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 101}}
:::MLLOG {"namespace": "", "time_ms": 1593100259850, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 2048, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 102}}
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1593100259850, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 1, "current_iter_num": 0}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:[Training][Epoch 1] training time: 1.324 [sec],avg speed: 92829.535 [imgs/sec],loss=17.770
[Training][Epoch 1] training time: 1.324 [sec],avg speed: 92829.535 [imgs/sec],loss=17.770
:::MLLOG {"namespace": "", "time_ms": 1593100261174, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1593100261175, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 2, "current_iter_num": 0}}
INFO:root:[Training][Iteration 100][Epoch 2, Batch 42/58] lr: 0.01966, training time: 19.252 [ms], speed: 106378.122 [imgs/sec], loss=7.763
[Training][Iteration 100][Epoch 2, Batch 42/58] lr: 0.01966, training time: 19.252 [ms], speed: 106378.122 [imgs/sec], loss=7.763
INFO:root:[Training][Epoch 2] training time: 1.122 [sec],avg speed: 109487.217 [imgs/sec],loss=10.079
[Training][Epoch 2] training time: 1.122 [sec],avg speed: 109487.217 [imgs/sec],loss=10.079
:::MLLOG {"namespace": "", "time_ms": 1593100262297, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1593100262297, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 3, "current_iter_num": 0}}
INFO:root:[Training][Epoch 3] training time: 1.109 [sec],avg speed: 110831.359 [imgs/sec],loss=8.833
[Training][Epoch 3] training time: 1.109 [sec],avg speed: 110831.359 [imgs/sec],loss=8.833
:::MLLOG {"namespace": "", "time_ms": 1593100263406, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1593100263407, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 4, "current_iter_num": 0}}
INFO:root:[Training][Iteration 200][Epoch 4, Batch 26/58] lr: 0.03931, training time: 18.190 [ms], speed: 112591.102 [imgs/sec], loss=9.072
[Training][Iteration 200][Epoch 4, Batch 26/58] lr: 0.03931, training time: 18.190 [ms], speed: 112591.102 [imgs/sec], loss=9.072
INFO:root:[Training][Epoch 4] training time: 1.102 [sec],avg speed: 111460.679 [imgs/sec],loss=8.378
[Training][Epoch 4] training time: 1.102 [sec],avg speed: 111460.679 [imgs/sec],loss=8.378
:::MLLOG {"namespace": "", "time_ms": 1593100264509, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1593100264510, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 5, "current_iter_num": 0}}
INFO:root:[Training][Epoch 5] training time: 1.090 [sec],avg speed: 112723.130 [imgs/sec],loss=7.606
[Training][Epoch 5] training time: 1.090 [sec],avg speed: 112723.130 [imgs/sec],loss=7.606
:::MLLOG {"namespace": "", "time_ms": 1593100265600, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1593100265600, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 6, "current_iter_num": 0}}
INFO:root:[Training][Iteration 300][Epoch 6, Batch 10/58] lr: 0.05897, training time: 18.232 [ms], speed: 112330.631 [imgs/sec], loss=7.574
[Training][Iteration 300][Epoch 6, Batch 10/58] lr: 0.05897, training time: 18.232 [ms], speed: 112330.631 [imgs/sec], loss=7.574
INFO:root:[Training][Epoch 6] training time: 1.054 [sec],avg speed: 116604.524 [imgs/sec],loss=7.258
[Training][Epoch 6] training time: 1.054 [sec],avg speed: 116604.524 [imgs/sec],loss=7.258
:::MLLOG {"namespace": "", "time_ms": 1593100266654, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1593100266655, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 7, "current_iter_num": 0}}
INFO:root:[Training][Epoch 7] training time: 0.726 [sec],avg speed: 112851.834 [imgs/sec],loss=7.352
[Training][Epoch 7] training time: 0.726 [sec],avg speed: 112851.834 [imgs/sec],loss=7.352
:::MLLOG {"namespace": "", "time_ms": 1593100267381, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1593100267381, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 8, "current_iter_num": 0}}
INFO:root:[Training][Epoch 8] training time: 1.030 [sec],avg speed: 119280.432 [imgs/sec],loss=6.869
[Training][Epoch 8] training time: 1.030 [sec],avg speed: 119280.432 [imgs/sec],loss=6.869
:::MLLOG {"namespace": "", "time_ms": 1593100268411, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1593100268412, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 9, "current_iter_num": 0}}
INFO:root:[Training][Iteration 500][Epoch 9, Batch 36/58] lr: 0.09829, training time: 17.573 [ms], speed: 116541.683 [imgs/sec], loss=7.248
[Training][Iteration 500][Epoch 9, Batch 36/58] lr: 0.09829, training time: 17.573 [ms], speed: 116541.683 [imgs/sec], loss=7.248
INFO:root:[Training][Epoch 9] training time: 1.056 [sec],avg speed: 116370.468 [imgs/sec],loss=6.594
[Training][Epoch 9] training time: 1.056 [sec],avg speed: 116370.468 [imgs/sec],loss=6.594
:::MLLOG {"namespace": "", "time_ms": 1593100269468, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1593100269468, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 10, "current_iter_num": 0}}
INFO:root:[Training][Epoch 10] training time: 1.011 [sec],avg speed: 121591.926 [imgs/sec],loss=6.495
[Training][Epoch 10] training time: 1.011 [sec],avg speed: 121591.926 [imgs/sec],loss=6.495
:::MLLOG {"namespace": "", "time_ms": 1593100270479, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1593100270479, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 11, "current_iter_num": 0}}
INFO:root:[Training][Iteration 600][Epoch 11, Batch 20/58] lr: 0.11794, training time: 17.509 [ms], speed: 116971.552 [imgs/sec], loss=8.321
[Training][Iteration 600][Epoch 11, Batch 20/58] lr: 0.11794, training time: 17.509 [ms], speed: 116971.552 [imgs/sec], loss=8.321
INFO:root:[Training][Epoch 11] training time: 1.045 [sec],avg speed: 117559.300 [imgs/sec],loss=6.233
[Training][Epoch 11] training time: 1.045 [sec],avg speed: 117559.300 [imgs/sec],loss=6.233
:::MLLOG {"namespace": "", "time_ms": 1593100271525, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1593100271525, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 12, "current_iter_num": 0}}
INFO:root:[Training][Epoch 12] training time: 1.018 [sec],avg speed: 120758.897 [imgs/sec],loss=5.845
[Training][Epoch 12] training time: 1.018 [sec],avg speed: 120758.897 [imgs/sec],loss=5.845
:::MLLOG {"namespace": "", "time_ms": 1593100272543, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1593100272543, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 13, "current_iter_num": 0}}
INFO:root:[Training][Iteration 700][Epoch 13, Batch 4/58] lr: 0.13760, training time: 19.343 [ms], speed: 105877.668 [imgs/sec], loss=7.002
[Training][Iteration 700][Epoch 13, Batch 4/58] lr: 0.13760, training time: 19.343 [ms], speed: 105877.668 [imgs/sec], loss=7.002
INFO:root:[Training][Epoch 13] training time: 1.019 [sec],avg speed: 120560.175 [imgs/sec],loss=5.492
[Training][Epoch 13] training time: 1.019 [sec],avg speed: 120560.175 [imgs/sec],loss=5.492
:::MLLOG {"namespace": "", "time_ms": 1593100273562, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1593100273563, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 14, "current_iter_num": 0}}
INFO:root:[Training][Epoch 14] training time: 0.662 [sec],avg speed: 123822.938 [imgs/sec],loss=5.798
[Training][Epoch 14] training time: 0.662 [sec],avg speed: 123822.938 [imgs/sec],loss=5.798
:::MLLOG {"namespace": "", "time_ms": 1593100274225, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1593100274225, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 15, "current_iter_num": 0}}
INFO:root:[Training][Epoch 15] training time: 1.000 [sec],avg speed: 122928.388 [imgs/sec],loss=5.327
[Training][Epoch 15] training time: 1.000 [sec],avg speed: 122928.388 [imgs/sec],loss=5.327
:::MLLOG {"namespace": "", "time_ms": 1593100275225, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1593100275225, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 16, "current_iter_num": 0}}
INFO:root:[Training][Iteration 900][Epoch 16, Batch 30/58] lr: 0.17692, training time: 17.107 [ms], speed: 119714.002 [imgs/sec], loss=5.021
[Training][Iteration 900][Epoch 16, Batch 30/58] lr: 0.17692, training time: 17.107 [ms], speed: 119714.002 [imgs/sec], loss=5.021
INFO:root:[Training][Epoch 16] training time: 1.005 [sec],avg speed: 122307.552 [imgs/sec],loss=5.353
[Training][Epoch 16] training time: 1.005 [sec],avg speed: 122307.552 [imgs/sec],loss=5.353
:::MLLOG {"namespace": "", "time_ms": 1593100276230, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1593100276230, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 17, "current_iter_num": 0}}
INFO:root:[Training][Epoch 17] training time: 0.999 [sec],avg speed: 123023.664 [imgs/sec],loss=5.311
[Training][Epoch 17] training time: 0.999 [sec],avg speed: 123023.664 [imgs/sec],loss=5.311
:::MLLOG {"namespace": "", "time_ms": 1593100277229, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1593100277230, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 18, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1000][Epoch 18, Batch 14/58] lr: 0.19657, training time: 16.806 [ms], speed: 121863.416 [imgs/sec], loss=1.912
[Training][Iteration 1000][Epoch 18, Batch 14/58] lr: 0.19657, training time: 16.806 [ms], speed: 121863.416 [imgs/sec], loss=1.912
INFO:root:[Training][Epoch 18] training time: 0.996 [sec],avg speed: 123405.598 [imgs/sec],loss=5.150
[Training][Epoch 18] training time: 0.996 [sec],avg speed: 123405.598 [imgs/sec],loss=5.150
:::MLLOG {"namespace": "", "time_ms": 1593100278225, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 18}}
:::MLLOG {"namespace": "", "time_ms": 1593100278226, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 19, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1100][Epoch 19, Batch 56/58] lr: 0.21623, training time: 16.568 [ms], speed: 123609.774 [imgs/sec], loss=5.337
[Training][Iteration 1100][Epoch 19, Batch 56/58] lr: 0.21623, training time: 16.568 [ms], speed: 123609.774 [imgs/sec], loss=5.337
INFO:root:[Training][Epoch 19] training time: 1.000 [sec],avg speed: 122894.943 [imgs/sec],loss=4.844
[Training][Epoch 19] training time: 1.000 [sec],avg speed: 122894.943 [imgs/sec],loss=4.844
:::MLLOG {"namespace": "", "time_ms": 1593100279226, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1593100279226, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 20, "current_iter_num": 0}}
INFO:root:[Training][Epoch 20] training time: 0.668 [sec],avg speed: 122651.281 [imgs/sec],loss=5.007
[Training][Epoch 20] training time: 0.668 [sec],avg speed: 122651.281 [imgs/sec],loss=5.007
:::MLLOG {"namespace": "", "time_ms": 1593100279894, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1593100279895, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 21, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1200][Epoch 21, Batch 40/58] lr: 0.23589, training time: 16.256 [ms], speed: 125981.907 [imgs/sec], loss=3.430
[Training][Iteration 1200][Epoch 21, Batch 40/58] lr: 0.23589, training time: 16.256 [ms], speed: 125981.907 [imgs/sec], loss=3.430
INFO:root:[Training][Epoch 21] training time: 0.976 [sec],avg speed: 125875.893 [imgs/sec],loss=4.820
[Training][Epoch 21] training time: 0.976 [sec],avg speed: 125875.893 [imgs/sec],loss=4.820
:::MLLOG {"namespace": "", "time_ms": 1593100280871, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1593100280871, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 22, "current_iter_num": 0}}
INFO:root:[Training][Epoch 22] training time: 0.990 [sec],avg speed: 124119.417 [imgs/sec],loss=4.902
[Training][Epoch 22] training time: 0.990 [sec],avg speed: 124119.417 [imgs/sec],loss=4.902
:::MLLOG {"namespace": "", "time_ms": 1593100281862, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 22}}
:::MLLOG {"namespace": "", "time_ms": 1593100281862, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 23, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1300][Epoch 23, Batch 24/58] lr: 0.25554, training time: 16.524 [ms], speed: 123943.490 [imgs/sec], loss=4.867
[Training][Iteration 1300][Epoch 23, Batch 24/58] lr: 0.25554, training time: 16.524 [ms], speed: 123943.490 [imgs/sec], loss=4.867
INFO:root:[Training][Epoch 23] training time: 0.975 [sec],avg speed: 125994.087 [imgs/sec],loss=4.692
[Training][Epoch 23] training time: 0.975 [sec],avg speed: 125994.087 [imgs/sec],loss=4.692
:::MLLOG {"namespace": "", "time_ms": 1593100282837, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1593100282838, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 24, "current_iter_num": 0}}
INFO:root:[Training][Epoch 24] training time: 0.987 [sec],avg speed: 124523.297 [imgs/sec],loss=4.699
[Training][Epoch 24] training time: 0.987 [sec],avg speed: 124523.297 [imgs/sec],loss=4.699
:::MLLOG {"namespace": "", "time_ms": 1593100283825, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1593100283825, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 25, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1400][Epoch 25, Batch 8/58] lr: 0.27520, training time: 17.285 [ms], speed: 118485.942 [imgs/sec], loss=4.451
[Training][Iteration 1400][Epoch 25, Batch 8/58] lr: 0.27520, training time: 17.285 [ms], speed: 118485.942 [imgs/sec], loss=4.451
INFO:root:[Training][Epoch 25] training time: 0.979 [sec],avg speed: 125472.369 [imgs/sec],loss=4.573
[Training][Epoch 25] training time: 0.979 [sec],avg speed: 125472.369 [imgs/sec],loss=4.573
:::MLLOG {"namespace": "", "time_ms": 1593100284805, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1593100284805, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 26, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1500][Epoch 26, Batch 50/58] lr: 0.29250, training time: 16.128 [ms], speed: 126982.766 [imgs/sec], loss=5.879
[Training][Iteration 1500][Epoch 26, Batch 50/58] lr: 0.29250, training time: 16.128 [ms], speed: 126982.766 [imgs/sec], loss=5.879
INFO:root:[Training][Epoch 26] training time: 0.984 [sec],avg speed: 124930.390 [imgs/sec],loss=4.540
[Training][Epoch 26] training time: 0.984 [sec],avg speed: 124930.390 [imgs/sec],loss=4.540
:::MLLOG {"namespace": "", "time_ms": 1593100285789, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 26}}
:::MLLOG {"namespace": "", "time_ms": 1593100285789, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 27, "current_iter_num": 0}}
INFO:root:[Training][Epoch 27] training time: 0.652 [sec],avg speed: 125548.689 [imgs/sec],loss=4.728
[Training][Epoch 27] training time: 0.652 [sec],avg speed: 125548.689 [imgs/sec],loss=4.728
:::MLLOG {"namespace": "", "time_ms": 1593100286442, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1593100286442, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 28, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1600][Epoch 28, Batch 34/58] lr: 0.29250, training time: 16.380 [ms], speed: 125033.618 [imgs/sec], loss=4.500
[Training][Iteration 1600][Epoch 28, Batch 34/58] lr: 0.29250, training time: 16.380 [ms], speed: 125033.618 [imgs/sec], loss=4.500
INFO:root:[Training][Epoch 28] training time: 0.978 [sec],avg speed: 125592.255 [imgs/sec],loss=4.504
[Training][Epoch 28] training time: 0.978 [sec],avg speed: 125592.255 [imgs/sec],loss=4.504
:::MLLOG {"namespace": "", "time_ms": 1593100287421, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1593100287421, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 29, "current_iter_num": 0}}
INFO:root:[Training][Epoch 29] training time: 0.958 [sec],avg speed: 128249.995 [imgs/sec],loss=4.430
[Training][Epoch 29] training time: 0.958 [sec],avg speed: 128249.995 [imgs/sec],loss=4.430
:::MLLOG {"namespace": "", "time_ms": 1593100288379, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1593100288380, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 30, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1700][Epoch 30, Batch 18/58] lr: 0.29250, training time: 16.456 [ms], speed: 124451.424 [imgs/sec], loss=2.768
[Training][Iteration 1700][Epoch 30, Batch 18/58] lr: 0.29250, training time: 16.456 [ms], speed: 124451.424 [imgs/sec], loss=2.768
INFO:root:[Training][Epoch 30] training time: 0.982 [sec],avg speed: 125160.842 [imgs/sec],loss=4.461
[Training][Epoch 30] training time: 0.982 [sec],avg speed: 125160.842 [imgs/sec],loss=4.461
:::MLLOG {"namespace": "", "time_ms": 1593100289362, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1593100289362, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 31, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1800][Epoch 31, Batch 60/58] lr: 0.29250, training time: 15.965 [ms], speed: 128283.864 [imgs/sec], loss=4.820
[Training][Iteration 1800][Epoch 31, Batch 60/58] lr: 0.29250, training time: 15.965 [ms], speed: 128283.864 [imgs/sec], loss=4.820
INFO:root:[Training][Epoch 31] training time: 0.958 [sec],avg speed: 128251.942 [imgs/sec],loss=4.129
[Training][Epoch 31] training time: 0.958 [sec],avg speed: 128251.942 [imgs/sec],loss=4.129
:::MLLOG {"namespace": "", "time_ms": 1593100290320, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1593100290320, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 32, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1800][Epoch 32, Batch 2/58] lr: 0.29250, training time: 20.331 [ms], speed: 100730.975 [imgs/sec], loss=2.207
[Training][Iteration 1800][Epoch 32, Batch 2/58] lr: 0.29250, training time: 20.331 [ms], speed: 100730.975 [imgs/sec], loss=2.207
INFO:root:[Training][Epoch 32] training time: 0.971 [sec],avg speed: 126507.119 [imgs/sec],loss=4.225
[Training][Epoch 32] training time: 0.971 [sec],avg speed: 126507.119 [imgs/sec],loss=4.225
:::MLLOG {"namespace": "", "time_ms": 1593100291292, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1593100291292, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 33, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1900][Epoch 33, Batch 44/58] lr: 0.29250, training time: 15.866 [ms], speed: 129079.352 [imgs/sec], loss=5.875
[Training][Iteration 1900][Epoch 33, Batch 44/58] lr: 0.29250, training time: 15.866 [ms], speed: 129079.352 [imgs/sec], loss=5.875
INFO:root:[Training][Epoch 33] training time: 0.949 [sec],avg speed: 129514.041 [imgs/sec],loss=4.275
[Training][Epoch 33] training time: 0.949 [sec],avg speed: 129514.041 [imgs/sec],loss=4.275
:::MLLOG {"namespace": "", "time_ms": 1593100292241, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1593100292242, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 34, "current_iter_num": 0}}
INFO:root:[Training][Epoch 34] training time: 0.642 [sec],avg speed: 127687.272 [imgs/sec],loss=4.155
[Training][Epoch 34] training time: 0.642 [sec],avg speed: 127687.272 [imgs/sec],loss=4.155
:::MLLOG {"namespace": "", "time_ms": 1593100292883, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 34}}
:::MLLOG {"namespace": "", "time_ms": 1593100292884, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 35, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2000][Epoch 35, Batch 28/58] lr: 0.29250, training time: 16.836 [ms], speed: 121645.847 [imgs/sec], loss=4.415
[Training][Iteration 2000][Epoch 35, Batch 28/58] lr: 0.29250, training time: 16.836 [ms], speed: 121645.847 [imgs/sec], loss=4.415
INFO:root:[Training][Epoch 35] training time: 0.982 [sec],avg speed: 125186.926 [imgs/sec],loss=4.187
[Training][Epoch 35] training time: 0.982 [sec],avg speed: 125186.926 [imgs/sec],loss=4.187
:::MLLOG {"namespace": "", "time_ms": 1593100293865, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1593100293866, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 36, "current_iter_num": 0}}
INFO:root:[Training][Epoch 36] training time: 0.956 [sec],avg speed: 128516.675 [imgs/sec],loss=4.250
[Training][Epoch 36] training time: 0.956 [sec],avg speed: 128516.675 [imgs/sec],loss=4.250
:::MLLOG {"namespace": "", "time_ms": 1593100294822, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1593100294822, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 37, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2100][Epoch 37, Batch 12/58] lr: 0.29250, training time: 15.795 [ms], speed: 129662.000 [imgs/sec], loss=5.312
[Training][Iteration 2100][Epoch 37, Batch 12/58] lr: 0.29250, training time: 15.795 [ms], speed: 129662.000 [imgs/sec], loss=5.312
INFO:root:[Training][Epoch 37] training time: 0.975 [sec],avg speed: 126012.016 [imgs/sec],loss=4.099
[Training][Epoch 37] training time: 0.975 [sec],avg speed: 126012.016 [imgs/sec],loss=4.099
:::MLLOG {"namespace": "", "time_ms": 1593100295798, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1593100295798, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 38, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2200][Epoch 38, Batch 54/58] lr: 0.29250, training time: 16.223 [ms], speed: 126237.275 [imgs/sec], loss=3.238
[Training][Iteration 2200][Epoch 38, Batch 54/58] lr: 0.29250, training time: 16.223 [ms], speed: 126237.275 [imgs/sec], loss=3.238
INFO:root:[Training][Epoch 38] training time: 0.985 [sec],avg speed: 124711.044 [imgs/sec],loss=4.131
[Training][Epoch 38] training time: 0.985 [sec],avg speed: 124711.044 [imgs/sec],loss=4.131
:::MLLOG {"namespace": "", "time_ms": 1593100296784, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 38}}
:::MLLOG {"namespace": "", "time_ms": 1593100296784, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 39, "current_iter_num": 0}}
INFO:root:[Training][Epoch 39] training time: 0.962 [sec],avg speed: 127710.986 [imgs/sec],loss=4.030
[Training][Epoch 39] training time: 0.962 [sec],avg speed: 127710.986 [imgs/sec],loss=4.030
:::MLLOG {"namespace": "", "time_ms": 1593100297746, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 39}}
:::MLLOG {"namespace": "", "time_ms": 1593100297747, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 40, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2300][Epoch 40, Batch 38/58] lr: 0.29250, training time: 16.262 [ms], speed: 125939.048 [imgs/sec], loss=6.244
[Training][Iteration 2300][Epoch 40, Batch 38/58] lr: 0.29250, training time: 16.262 [ms], speed: 125939.048 [imgs/sec], loss=6.244
INFO:root:[Training][Epoch 40] training time: 0.649 [sec],avg speed: 126252.989 [imgs/sec],loss=4.009
[Training][Epoch 40] training time: 0.649 [sec],avg speed: 126252.989 [imgs/sec],loss=4.009
:::MLLOG {"namespace": "", "time_ms": 1593100298396, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1593100298408, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 40}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 487.540 [ms], allgather: 194.859 [ms], asnumpy: 7.299 [ms], speed: 7249.527 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 487.540 [ms], allgather: 194.859 [ms], asnumpy: 7.299 [ms], speed: 7249.527 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 554.190 [ms], allgather: 128.356 [ms], asnumpy: 6.819 [ms], speed: 7253.025 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 554.190 [ms], allgather: 128.356 [ms], asnumpy: 6.819 [ms], speed: 7253.025 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 483.899 [ms], allgather: 199.994 [ms], asnumpy: 7.368 [ms], speed: 7233.140 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 483.899 [ms], allgather: 199.994 [ms], asnumpy: 7.368 [ms], speed: 7233.140 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 582.541 [ms], allgather: 93.842 [ms], asnumpy: 7.659 [ms], speed: 7309.478 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 582.541 [ms], allgather: 93.842 [ms], asnumpy: 7.659 [ms], speed: 7309.478 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 488.183 [ms], allgather: 195.703 [ms], asnumpy: 7.647 [ms], speed: 7230.297 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 488.183 [ms], allgather: 195.703 [ms], asnumpy: 7.647 [ms], speed: 7230.297 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 472.728 [ms], allgather: 211.122 [ms], asnumpy: 7.910 [ms], speed: 7227.925 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 472.728 [ms], allgather: 211.122 [ms], asnumpy: 7.910 [ms], speed: 7227.925 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 510.080 [ms], allgather: 172.237 [ms], asnumpy: 7.068 [ms], speed: 7252.837 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 510.080 [ms], allgather: 172.237 [ms], asnumpy: 7.068 [ms], speed: 7252.837 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 527.927 [ms], allgather: 156.056 [ms], asnumpy: 7.216 [ms], speed: 7233.786 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 527.927 [ms], allgather: 156.056 [ms], asnumpy: 7.216 [ms], speed: 7233.786 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 510.573 [ms], allgather: 166.999 [ms], asnumpy: 6.460 [ms], speed: 7309.577 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 510.573 [ms], allgather: 166.999 [ms], asnumpy: 6.460 [ms], speed: 7309.577 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 504.828 [ms], allgather: 175.338 [ms], asnumpy: 6.971 [ms], speed: 7276.550 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 504.828 [ms], allgather: 175.338 [ms], asnumpy: 6.971 [ms], speed: 7276.550 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 502.539 [ms], allgather: 182.651 [ms], asnumpy: 7.016 [ms], speed: 7223.269 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 502.539 [ms], allgather: 182.651 [ms], asnumpy: 7.016 [ms], speed: 7223.269 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 512.954 [ms], allgather: 171.579 [ms], asnumpy: 8.110 [ms], speed: 7218.707 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 512.954 [ms], allgather: 171.579 [ms], asnumpy: 8.110 [ms], speed: 7218.707 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 588.712 [ms], allgather: 96.443 [ms], asnumpy: 6.687 [ms], speed: 7227.053 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 588.712 [ms], allgather: 96.443 [ms], asnumpy: 6.687 [ms], speed: 7227.053 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 503.656 [ms], allgather: 181.564 [ms], asnumpy: 6.886 [ms], speed: 7224.312 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 503.656 [ms], allgather: 181.564 [ms], asnumpy: 6.886 [ms], speed: 7224.312 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 488.132 [ms], allgather: 197.380 [ms], asnumpy: 7.030 [ms], speed: 7219.763 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 488.132 [ms], allgather: 197.380 [ms], asnumpy: 7.030 [ms], speed: 7219.763 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 588.288 [ms], allgather: 97.321 [ms], asnumpy: 7.079 [ms], speed: 7218.250 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 588.288 [ms], allgather: 97.321 [ms], asnumpy: 7.079 [ms], speed: 7218.250 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 496.587 [ms], allgather: 189.361 [ms], asnumpy: 7.205 [ms], speed: 7213.403 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 496.587 [ms], allgather: 189.361 [ms], asnumpy: 7.205 [ms], speed: 7213.403 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 511.146 [ms], allgather: 175.661 [ms], asnumpy: 6.526 [ms], speed: 7211.535 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 511.146 [ms], allgather: 175.661 [ms], asnumpy: 6.526 [ms], speed: 7211.535 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 557.167 [ms], allgather: 129.219 [ms], asnumpy: 7.047 [ms], speed: 7210.489 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 557.167 [ms], allgather: 129.219 [ms], asnumpy: 7.047 [ms], speed: 7210.489 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 560.315 [ms], allgather: 126.332 [ms], asnumpy: 6.557 [ms], speed: 7212.857 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 560.315 [ms], allgather: 126.332 [ms], asnumpy: 6.557 [ms], speed: 7212.857 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 492.732 [ms], allgather: 193.763 [ms], asnumpy: 7.009 [ms], speed: 7209.750 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 492.732 [ms], allgather: 193.763 [ms], asnumpy: 7.009 [ms], speed: 7209.750 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 625.313 [ms], allgather: 59.243 [ms], asnumpy: 7.078 [ms], speed: 7229.240 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 625.313 [ms], allgather: 59.243 [ms], asnumpy: 7.078 [ms], speed: 7229.240 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 509.247 [ms], allgather: 169.173 [ms], asnumpy: 7.509 [ms], speed: 7289.371 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 509.247 [ms], allgather: 169.173 [ms], asnumpy: 7.509 [ms], speed: 7289.371 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 502.955 [ms], allgather: 183.087 [ms], asnumpy: 7.178 [ms], speed: 7212.709 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 502.955 [ms], allgather: 183.087 [ms], asnumpy: 7.178 [ms], speed: 7212.709 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 581.056 [ms], allgather: 105.725 [ms], asnumpy: 6.685 [ms], speed: 7210.152 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 581.056 [ms], allgather: 105.725 [ms], asnumpy: 6.685 [ms], speed: 7210.152 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 509.910 [ms], allgather: 177.017 [ms], asnumpy: 6.794 [ms], speed: 7207.491 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 509.910 [ms], allgather: 177.017 [ms], asnumpy: 6.794 [ms], speed: 7207.491 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 511.167 [ms], allgather: 175.184 [ms], asnumpy: 6.515 [ms], speed: 7216.392 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 511.167 [ms], allgather: 175.184 [ms], asnumpy: 6.515 [ms], speed: 7216.392 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 512.010 [ms], allgather: 174.027 [ms], asnumpy: 7.170 [ms], speed: 7212.840 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 512.010 [ms], allgather: 174.027 [ms], asnumpy: 7.170 [ms], speed: 7212.840 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 479.255 [ms], allgather: 205.561 [ms], asnumpy: 8.826 [ms], speed: 7208.316 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 479.255 [ms], allgather: 205.561 [ms], asnumpy: 8.826 [ms], speed: 7208.316 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 498.508 [ms], allgather: 184.712 [ms], asnumpy: 8.367 [ms], speed: 7229.724 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 498.508 [ms], allgather: 184.712 [ms], asnumpy: 8.367 [ms], speed: 7229.724 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 586.397 [ms], allgather: 99.000 [ms], asnumpy: 7.081 [ms], speed: 7220.422 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 586.397 [ms], allgather: 99.000 [ms], asnumpy: 7.081 [ms], speed: 7220.422 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 542.298 [ms], allgather: 142.224 [ms], asnumpy: 7.798 [ms], speed: 7222.080 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 542.298 [ms], allgather: 142.224 [ms], asnumpy: 7.798 [ms], speed: 7222.080 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 493.349 [ms], allgather: 191.389 [ms], asnumpy: 7.211 [ms], speed: 7225.950 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 493.349 [ms], allgather: 191.389 [ms], asnumpy: 7.211 [ms], speed: 7225.950 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 498.663 [ms], allgather: 186.724 [ms], asnumpy: 7.590 [ms], speed: 7215.225 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 498.663 [ms], allgather: 186.724 [ms], asnumpy: 7.590 [ms], speed: 7215.225 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 493.101 [ms], allgather: 194.072 [ms], asnumpy: 6.873 [ms], speed: 7204.123 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 493.101 [ms], allgather: 194.072 [ms], asnumpy: 6.873 [ms], speed: 7204.123 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 489.938 [ms], allgather: 194.031 [ms], asnumpy: 10.359 [ms], speed: 7201.189 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 489.938 [ms], allgather: 194.031 [ms], asnumpy: 10.359 [ms], speed: 7201.189 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 492.142 [ms], allgather: 190.537 [ms], asnumpy: 10.293 [ms], speed: 7215.294 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 492.142 [ms], allgather: 190.537 [ms], asnumpy: 10.293 [ms], speed: 7215.294 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 559.722 [ms], allgather: 125.556 [ms], asnumpy: 7.645 [ms], speed: 7215.788 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 559.722 [ms], allgather: 125.556 [ms], asnumpy: 7.645 [ms], speed: 7215.788 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 502.213 [ms], allgather: 184.239 [ms], asnumpy: 7.778 [ms], speed: 7202.198 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 502.213 [ms], allgather: 184.239 [ms], asnumpy: 7.778 [ms], speed: 7202.198 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 551.124 [ms], allgather: 136.851 [ms], asnumpy: 7.212 [ms], speed: 7192.284 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 551.124 [ms], allgather: 136.851 [ms], asnumpy: 7.212 [ms], speed: 7192.284 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 568.802 [ms], allgather: 116.590 [ms], asnumpy: 9.659 [ms], speed: 7193.693 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 568.802 [ms], allgather: 116.590 [ms], asnumpy: 9.659 [ms], speed: 7193.693 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 510.987 [ms], allgather: 167.154 [ms], asnumpy: 9.725 [ms], speed: 7268.838 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 510.987 [ms], allgather: 167.154 [ms], asnumpy: 9.725 [ms], speed: 7268.838 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 485.708 [ms], allgather: 199.606 [ms], asnumpy: 9.873 [ms], speed: 7192.291 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 485.708 [ms], allgather: 199.606 [ms], asnumpy: 9.873 [ms], speed: 7192.291 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 501.034 [ms], allgather: 176.479 [ms], asnumpy: 10.467 [ms], speed: 7267.634 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 501.034 [ms], allgather: 176.479 [ms], asnumpy: 10.467 [ms], speed: 7267.634 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 482.880 [ms], allgather: 204.291 [ms], asnumpy: 7.097 [ms], speed: 7201.813 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 482.880 [ms], allgather: 204.291 [ms], asnumpy: 7.097 [ms], speed: 7201.813 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 508.708 [ms], allgather: 172.494 [ms], asnumpy: 9.921 [ms], speed: 7234.580 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 508.708 [ms], allgather: 172.494 [ms], asnumpy: 9.921 [ms], speed: 7234.580 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 505.199 [ms], allgather: 178.343 [ms], asnumpy: 10.509 [ms], speed: 7204.057 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 505.199 [ms], allgather: 178.343 [ms], asnumpy: 10.509 [ms], speed: 7204.057 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 496.255 [ms], allgather: 189.142 [ms], asnumpy: 9.989 [ms], speed: 7190.227 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 496.255 [ms], allgather: 189.142 [ms], asnumpy: 9.989 [ms], speed: 7190.227 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 537.351 [ms], allgather: 149.500 [ms], asnumpy: 9.790 [ms], speed: 7177.288 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 537.351 [ms], allgather: 149.500 [ms], asnumpy: 9.790 [ms], speed: 7177.288 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 500.068 [ms], allgather: 179.362 [ms], asnumpy: 9.759 [ms], speed: 7254.887 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 500.068 [ms], allgather: 179.362 [ms], asnumpy: 9.759 [ms], speed: 7254.887 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 492.004 [ms], allgather: 192.668 [ms], asnumpy: 10.465 [ms], speed: 7192.804 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 492.004 [ms], allgather: 192.668 [ms], asnumpy: 10.465 [ms], speed: 7192.804 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 595.189 [ms], allgather: 88.907 [ms], asnumpy: 12.027 [ms], speed: 7182.613 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 595.189 [ms], allgather: 88.907 [ms], asnumpy: 12.027 [ms], speed: 7182.613 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 520.285 [ms], allgather: 161.301 [ms], asnumpy: 10.545 [ms], speed: 7224.033 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 520.285 [ms], allgather: 161.301 [ms], asnumpy: 10.545 [ms], speed: 7224.033 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 500.587 [ms], allgather: 185.613 [ms], asnumpy: 10.063 [ms], speed: 7181.179 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 500.587 [ms], allgather: 185.613 [ms], asnumpy: 10.063 [ms], speed: 7181.179 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 561.638 [ms], allgather: 120.038 [ms], asnumpy: 10.258 [ms], speed: 7226.102 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 561.638 [ms], allgather: 120.038 [ms], asnumpy: 10.258 [ms], speed: 7226.102 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 501.901 [ms], allgather: 184.669 [ms], asnumpy: 10.711 [ms], speed: 7170.702 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 501.901 [ms], allgather: 184.669 [ms], asnumpy: 10.711 [ms], speed: 7170.702 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 532.320 [ms], allgather: 152.374 [ms], asnumpy: 12.897 [ms], speed: 7167.523 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 532.320 [ms], allgather: 152.374 [ms], asnumpy: 12.897 [ms], speed: 7167.523 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 498.949 [ms], allgather: 188.000 [ms], asnumpy: 11.155 [ms], speed: 7162.236 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 498.949 [ms], allgather: 188.000 [ms], asnumpy: 11.155 [ms], speed: 7162.236 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 559.412 [ms], allgather: 125.535 [ms], asnumpy: 13.028 [ms], speed: 7163.574 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 559.412 [ms], allgather: 125.535 [ms], asnumpy: 13.028 [ms], speed: 7163.574 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 507.675 [ms], allgather: 179.725 [ms], asnumpy: 9.831 [ms], speed: 7171.212 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 507.675 [ms], allgather: 179.725 [ms], asnumpy: 9.831 [ms], speed: 7171.212 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 529.474 [ms], allgather: 153.878 [ms], asnumpy: 12.734 [ms], speed: 7183.006 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 529.474 [ms], allgather: 153.878 [ms], asnumpy: 12.734 [ms], speed: 7183.006 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 495.943 [ms], allgather: 182.269 [ms], asnumpy: 13.138 [ms], speed: 7232.210 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 495.943 [ms], allgather: 182.269 [ms], asnumpy: 13.138 [ms], speed: 7232.210 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 560.945 [ms], allgather: 134.049 [ms], asnumpy: 9.305 [ms], speed: 7099.234 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 560.945 [ms], allgather: 134.049 [ms], asnumpy: 9.305 [ms], speed: 7099.234 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 502.926 [ms], allgather: 190.126 [ms], asnumpy: 8.506 [ms], speed: 7126.976 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 502.926 [ms], allgather: 190.126 [ms], asnumpy: 8.506 [ms], speed: 7126.976 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100299148, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 41, "current_iter_num": 0}}
INFO:root:[Training][Epoch 41] training time: 1.020 [sec],avg speed: 120490.362 [imgs/sec],loss=4.141
[Training][Epoch 41] training time: 1.020 [sec],avg speed: 120490.362 [imgs/sec],loss=4.141
:::MLLOG {"namespace": "", "time_ms": 1593100300168, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1593100300168, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 42, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2400][Epoch 42, Batch 22/58] lr: 0.29250, training time: 15.964 [ms], speed: 128287.615 [imgs/sec], loss=4.104
[Training][Iteration 2400][Epoch 42, Batch 22/58] lr: 0.29250, training time: 15.964 [ms], speed: 128287.615 [imgs/sec], loss=4.104
INFO:root:[Training][Epoch 42] training time: 0.966 [sec],avg speed: 127217.926 [imgs/sec],loss=4.087
[Training][Epoch 42] training time: 0.966 [sec],avg speed: 127217.926 [imgs/sec],loss=4.087
:::MLLOG {"namespace": "", "time_ms": 1593100301134, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 42}}
:::MLLOG {"namespace": "", "time_ms": 1593100301135, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 43, "current_iter_num": 0}}
INFO:root:[Training][Epoch 43] training time: 0.968 [sec],avg speed: 126947.785 [imgs/sec],loss=3.863
[Training][Epoch 43] training time: 0.968 [sec],avg speed: 126947.785 [imgs/sec],loss=3.863
:::MLLOG {"namespace": "", "time_ms": 1593100302103, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 43}}
:::MLLOG {"namespace": "", "time_ms": 1593100302103, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 44, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1593100302146, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1593100302147, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.16891770653520397, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 40}}
INFO:root:[Training][Iteration 2500][Epoch 44, Batch 6/58] lr: 0.29250, training time: 16.925 [ms], speed: 121007.435 [imgs/sec], loss=3.252
[Training][Iteration 2500][Epoch 44, Batch 6/58] lr: 0.29250, training time: 16.925 [ms], speed: 121007.435 [imgs/sec], loss=3.252
INFO:root:[Training][Epoch 44] training time: 0.957 [sec],avg speed: 128459.049 [imgs/sec],loss=3.975
[Training][Epoch 44] training time: 0.957 [sec],avg speed: 128459.049 [imgs/sec],loss=3.975
:::MLLOG {"namespace": "", "time_ms": 1593100303060, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 44}}
:::MLLOG {"namespace": "", "time_ms": 1593100303060, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 45, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2600][Epoch 45, Batch 48/58] lr: 0.29250, training time: 15.763 [ms], speed: 129926.925 [imgs/sec], loss=3.186
[Training][Iteration 2600][Epoch 45, Batch 48/58] lr: 0.29250, training time: 15.763 [ms], speed: 129926.925 [imgs/sec], loss=3.186
INFO:root:[Training][Epoch 45] training time: 0.960 [sec],avg speed: 127976.952 [imgs/sec],loss=3.715
[Training][Epoch 45] training time: 0.960 [sec],avg speed: 127976.952 [imgs/sec],loss=3.715
:::MLLOG {"namespace": "", "time_ms": 1593100304021, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1593100304021, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 46, "current_iter_num": 0}}
INFO:root:[Training][Epoch 46] training time: 0.969 [sec],avg speed: 126777.413 [imgs/sec],loss=4.416
[Training][Epoch 46] training time: 0.969 [sec],avg speed: 126777.413 [imgs/sec],loss=4.416
:::MLLOG {"namespace": "", "time_ms": 1593100304990, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 46}}
:::MLLOG {"namespace": "", "time_ms": 1593100304991, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 47, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2700][Epoch 47, Batch 32/58] lr: 0.29250, training time: 16.134 [ms], speed: 126938.300 [imgs/sec], loss=2.745
[Training][Iteration 2700][Epoch 47, Batch 32/58] lr: 0.29250, training time: 16.134 [ms], speed: 126938.300 [imgs/sec], loss=2.745
INFO:root:[Training][Epoch 47] training time: 0.643 [sec],avg speed: 127327.896 [imgs/sec],loss=3.809
[Training][Epoch 47] training time: 0.643 [sec],avg speed: 127327.896 [imgs/sec],loss=3.809
:::MLLOG {"namespace": "", "time_ms": 1593100305634, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 47}}
:::MLLOG {"namespace": "", "time_ms": 1593100305635, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 48, "current_iter_num": 0}}
INFO:root:[Training][Epoch 48] training time: 0.964 [sec],avg speed: 127432.227 [imgs/sec],loss=3.739
[Training][Epoch 48] training time: 0.964 [sec],avg speed: 127432.227 [imgs/sec],loss=3.739
:::MLLOG {"namespace": "", "time_ms": 1593100306599, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 48}}
:::MLLOG {"namespace": "", "time_ms": 1593100306600, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 49, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2800][Epoch 49, Batch 16/58] lr: 0.29250, training time: 15.812 [ms], speed: 129518.508 [imgs/sec], loss=5.226
[Training][Iteration 2800][Epoch 49, Batch 16/58] lr: 0.29250, training time: 15.812 [ms], speed: 129518.508 [imgs/sec], loss=5.226
INFO:root:[Training][Epoch 49] training time: 0.945 [sec],avg speed: 130097.007 [imgs/sec],loss=3.987
[Training][Epoch 49] training time: 0.945 [sec],avg speed: 130097.007 [imgs/sec],loss=3.987
:::MLLOG {"namespace": "", "time_ms": 1593100307544, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 49}}
:::MLLOG {"namespace": "", "time_ms": 1593100307545, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 50, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2900][Epoch 50, Batch 58/58] lr: 0.29250, training time: 16.207 [ms], speed: 126362.584 [imgs/sec], loss=2.891
[Training][Iteration 2900][Epoch 50, Batch 58/58] lr: 0.29250, training time: 16.207 [ms], speed: 126362.584 [imgs/sec], loss=2.891
INFO:root:[Training][Epoch 50] training time: 0.972 [sec],avg speed: 126415.210 [imgs/sec],loss=3.772
[Training][Epoch 50] training time: 0.972 [sec],avg speed: 126415.210 [imgs/sec],loss=3.772
:::MLLOG {"namespace": "", "time_ms": 1593100308517, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1593100308531, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 50}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.746 [ms], allgather: 40.006 [ms], asnumpy: 6.981 [ms], speed: 34308.955 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.746 [ms], allgather: 40.006 [ms], asnumpy: 6.981 [ms], speed: 34308.955 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.409 [ms], allgather: 43.154 [ms], asnumpy: 6.839 [ms], speed: 34625.324 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.409 [ms], allgather: 43.154 [ms], asnumpy: 6.839 [ms], speed: 34625.324 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 85.088 [ms], allgather: 53.851 [ms], asnumpy: 6.921 [ms], speed: 34279.064 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 85.088 [ms], allgather: 53.851 [ms], asnumpy: 6.921 [ms], speed: 34279.064 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.667 [ms], allgather: 40.248 [ms], asnumpy: 6.939 [ms], speed: 36008.235 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.667 [ms], allgather: 40.248 [ms], asnumpy: 6.939 [ms], speed: 36008.235 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.766 [ms], allgather: 39.512 [ms], asnumpy: 7.444 [ms], speed: 34077.480 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.766 [ms], allgather: 39.512 [ms], asnumpy: 7.444 [ms], speed: 34077.480 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.691 [ms], allgather: 41.944 [ms], asnumpy: 7.319 [ms], speed: 34024.018 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.691 [ms], allgather: 41.944 [ms], asnumpy: 7.319 [ms], speed: 34024.018 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.185 [ms], allgather: 41.157 [ms], asnumpy: 7.059 [ms], speed: 33920.722 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.185 [ms], allgather: 41.157 [ms], asnumpy: 7.059 [ms], speed: 33920.722 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 90.162 [ms], allgather: 41.364 [ms], asnumpy: 8.116 [ms], speed: 35805.113 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 90.162 [ms], allgather: 41.364 [ms], asnumpy: 8.116 [ms], speed: 35805.113 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.983 [ms], allgather: 46.458 [ms], asnumpy: 7.337 [ms], speed: 34064.528 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.983 [ms], allgather: 46.458 [ms], asnumpy: 7.337 [ms], speed: 34064.528 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.774 [ms], allgather: 49.212 [ms], asnumpy: 6.872 [ms], speed: 34279.456 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.774 [ms], allgather: 49.212 [ms], asnumpy: 6.872 [ms], speed: 34279.456 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.216 [ms], allgather: 42.190 [ms], asnumpy: 7.144 [ms], speed: 33658.207 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.216 [ms], allgather: 42.190 [ms], asnumpy: 7.144 [ms], speed: 33658.207 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.694 [ms], allgather: 40.978 [ms], asnumpy: 10.632 [ms], speed: 33714.265 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.694 [ms], allgather: 40.978 [ms], asnumpy: 10.632 [ms], speed: 33714.265 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.154 [ms], allgather: 42.632 [ms], asnumpy: 6.997 [ms], speed: 33605.620 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.154 [ms], allgather: 42.632 [ms], asnumpy: 6.997 [ms], speed: 33605.620 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.122 [ms], allgather: 52.456 [ms], asnumpy: 6.397 [ms], speed: 33562.433 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.122 [ms], allgather: 52.456 [ms], asnumpy: 6.397 [ms], speed: 33562.433 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.756 [ms], allgather: 40.901 [ms], asnumpy: 8.907 [ms], speed: 34114.177 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.756 [ms], allgather: 40.901 [ms], asnumpy: 8.907 [ms], speed: 34114.177 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.636 [ms], allgather: 43.085 [ms], asnumpy: 6.318 [ms], speed: 33774.425 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.636 [ms], allgather: 43.085 [ms], asnumpy: 6.318 [ms], speed: 33774.425 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.086 [ms], allgather: 43.414 [ms], asnumpy: 6.357 [ms], speed: 33588.881 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.086 [ms], allgather: 43.414 [ms], asnumpy: 6.357 [ms], speed: 33588.881 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.341 [ms], allgather: 42.617 [ms], asnumpy: 6.735 [ms], speed: 33401.533 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.341 [ms], allgather: 42.617 [ms], asnumpy: 6.735 [ms], speed: 33401.533 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.586 [ms], allgather: 43.040 [ms], asnumpy: 8.413 [ms], speed: 33548.044 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.586 [ms], allgather: 43.040 [ms], asnumpy: 8.413 [ms], speed: 33548.044 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.437 [ms], allgather: 45.450 [ms], asnumpy: 7.245 [ms], speed: 33526.913 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.437 [ms], allgather: 45.450 [ms], asnumpy: 7.245 [ms], speed: 33526.913 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 96.774 [ms], allgather: 45.036 [ms], asnumpy: 7.511 [ms], speed: 33484.623 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 96.774 [ms], allgather: 45.036 [ms], asnumpy: 7.511 [ms], speed: 33484.623 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.641 [ms], allgather: 44.386 [ms], asnumpy: 6.569 [ms], speed: 33422.880 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.641 [ms], allgather: 44.386 [ms], asnumpy: 6.569 [ms], speed: 33422.880 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.073 [ms], allgather: 44.578 [ms], asnumpy: 7.022 [ms], speed: 33405.630 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.073 [ms], allgather: 44.578 [ms], asnumpy: 7.022 [ms], speed: 33405.630 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.915 [ms], allgather: 43.882 [ms], asnumpy: 7.300 [ms], speed: 35186.524 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.915 [ms], allgather: 43.882 [ms], asnumpy: 7.300 [ms], speed: 35186.524 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 95.256 [ms], allgather: 42.220 [ms], asnumpy: 10.608 [ms], speed: 33764.202 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 95.256 [ms], allgather: 42.220 [ms], asnumpy: 10.608 [ms], speed: 33764.202 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.095 [ms], allgather: 41.264 [ms], asnumpy: 9.843 [ms], speed: 33288.127 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.095 [ms], allgather: 41.264 [ms], asnumpy: 9.843 [ms], speed: 33288.127 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.960 [ms], allgather: 40.046 [ms], asnumpy: 10.208 [ms], speed: 33285.538 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.960 [ms], allgather: 40.046 [ms], asnumpy: 10.208 [ms], speed: 33285.538 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 93.997 [ms], allgather: 47.202 [ms], asnumpy: 7.859 [ms], speed: 33543.644 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 93.997 [ms], allgather: 47.202 [ms], asnumpy: 7.859 [ms], speed: 33543.644 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.778 [ms], allgather: 44.691 [ms], asnumpy: 7.152 [ms], speed: 33195.601 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.778 [ms], allgather: 44.691 [ms], asnumpy: 7.152 [ms], speed: 33195.601 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.814 [ms], allgather: 40.010 [ms], asnumpy: 10.656 [ms], speed: 33007.199 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.814 [ms], allgather: 40.010 [ms], asnumpy: 10.656 [ms], speed: 33007.199 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.800 [ms], allgather: 42.811 [ms], asnumpy: 10.215 [ms], speed: 33150.526 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.800 [ms], allgather: 42.811 [ms], asnumpy: 10.215 [ms], speed: 33150.526 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.541 [ms], allgather: 43.679 [ms], asnumpy: 6.843 [ms], speed: 33098.311 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.541 [ms], allgather: 43.679 [ms], asnumpy: 6.843 [ms], speed: 33098.311 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.874 [ms], allgather: 41.493 [ms], asnumpy: 9.691 [ms], speed: 33319.966 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.874 [ms], allgather: 41.493 [ms], asnumpy: 9.691 [ms], speed: 33319.966 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.499 [ms], allgather: 43.151 [ms], asnumpy: 9.613 [ms], speed: 33274.817 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.499 [ms], allgather: 43.151 [ms], asnumpy: 9.613 [ms], speed: 33274.817 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.417 [ms], allgather: 46.362 [ms], asnumpy: 6.776 [ms], speed: 32991.050 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.417 [ms], allgather: 46.362 [ms], asnumpy: 6.776 [ms], speed: 32991.050 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.803 [ms], allgather: 43.634 [ms], asnumpy: 10.197 [ms], speed: 32973.570 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.803 [ms], allgather: 43.634 [ms], asnumpy: 10.197 [ms], speed: 32973.570 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.928 [ms], allgather: 45.705 [ms], asnumpy: 6.782 [ms], speed: 33241.115 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.928 [ms], allgather: 45.705 [ms], asnumpy: 6.782 [ms], speed: 33241.115 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.158 [ms], allgather: 42.885 [ms], asnumpy: 9.760 [ms], speed: 33376.601 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.158 [ms], allgather: 42.885 [ms], asnumpy: 9.760 [ms], speed: 33376.601 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.568 [ms], allgather: 44.132 [ms], asnumpy: 8.416 [ms], speed: 33087.031 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.568 [ms], allgather: 44.132 [ms], asnumpy: 8.416 [ms], speed: 33087.031 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.578 [ms], allgather: 44.280 [ms], asnumpy: 10.517 [ms], speed: 32813.375 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.578 [ms], allgather: 44.280 [ms], asnumpy: 10.517 [ms], speed: 32813.375 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.266 [ms], allgather: 42.069 [ms], asnumpy: 10.318 [ms], speed: 32753.721 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.266 [ms], allgather: 42.069 [ms], asnumpy: 10.318 [ms], speed: 32753.721 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.234 [ms], allgather: 46.672 [ms], asnumpy: 6.740 [ms], speed: 32971.133 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.234 [ms], allgather: 46.672 [ms], asnumpy: 6.740 [ms], speed: 32971.133 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.229 [ms], allgather: 41.979 [ms], asnumpy: 10.623 [ms], speed: 33821.923 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.229 [ms], allgather: 41.979 [ms], asnumpy: 10.623 [ms], speed: 33821.923 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.220 [ms], allgather: 42.802 [ms], asnumpy: 9.598 [ms], speed: 32760.629 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.220 [ms], allgather: 42.802 [ms], asnumpy: 9.598 [ms], speed: 32760.629 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.949 [ms], allgather: 42.663 [ms], asnumpy: 10.267 [ms], speed: 33138.687 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.949 [ms], allgather: 42.663 [ms], asnumpy: 10.267 [ms], speed: 33138.687 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 85.921 [ms], allgather: 55.987 [ms], asnumpy: 10.263 [ms], speed: 32857.228 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 85.921 [ms], allgather: 55.987 [ms], asnumpy: 10.263 [ms], speed: 32857.228 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.966 [ms], allgather: 44.024 [ms], asnumpy: 10.674 [ms], speed: 32751.317 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.966 [ms], allgather: 44.024 [ms], asnumpy: 10.674 [ms], speed: 32751.317 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 83.389 [ms], allgather: 52.857 [ms], asnumpy: 9.601 [ms], speed: 34281.866 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 83.389 [ms], allgather: 52.857 [ms], asnumpy: 9.601 [ms], speed: 34281.866 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 94.537 [ms], allgather: 49.835 [ms], asnumpy: 6.498 [ms], speed: 33140.520 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 94.537 [ms], allgather: 49.835 [ms], asnumpy: 6.498 [ms], speed: 33140.520 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.811 [ms], allgather: 45.489 [ms], asnumpy: 12.903 [ms], speed: 32215.603 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.811 [ms], allgather: 45.489 [ms], asnumpy: 12.903 [ms], speed: 32215.603 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 94.348 [ms], allgather: 48.828 [ms], asnumpy: 7.677 [ms], speed: 33144.239 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 94.348 [ms], allgather: 48.828 [ms], asnumpy: 7.677 [ms], speed: 33144.239 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.866 [ms], allgather: 47.859 [ms], asnumpy: 9.421 [ms], speed: 32227.138 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.866 [ms], allgather: 47.859 [ms], asnumpy: 9.421 [ms], speed: 32227.138 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 92.913 [ms], allgather: 53.674 [ms], asnumpy: 6.446 [ms], speed: 32672.077 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 92.913 [ms], allgather: 53.674 [ms], asnumpy: 6.446 [ms], speed: 32672.077 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.645 [ms], allgather: 52.628 [ms], asnumpy: 9.292 [ms], speed: 31335.151 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.645 [ms], allgather: 52.628 [ms], asnumpy: 9.292 [ms], speed: 31335.151 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.756 [ms], allgather: 57.186 [ms], asnumpy: 6.228 [ms], speed: 32643.140 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.756 [ms], allgather: 57.186 [ms], asnumpy: 6.228 [ms], speed: 32643.140 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.536 [ms], allgather: 54.657 [ms], asnumpy: 6.771 [ms], speed: 32474.612 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.536 [ms], allgather: 54.657 [ms], asnumpy: 6.771 [ms], speed: 32474.612 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 85.095 [ms], allgather: 69.935 [ms], asnumpy: 7.082 [ms], speed: 30842.285 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 85.095 [ms], allgather: 69.935 [ms], asnumpy: 7.082 [ms], speed: 30842.285 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 90.474 [ms], allgather: 57.280 [ms], asnumpy: 8.229 [ms], speed: 32054.291 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 90.474 [ms], allgather: 57.280 [ms], asnumpy: 8.229 [ms], speed: 32054.291 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 90.853 [ms], allgather: 58.008 [ms], asnumpy: 7.788 [ms], speed: 31918.033 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 90.853 [ms], allgather: 58.008 [ms], asnumpy: 7.788 [ms], speed: 31918.033 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.476 [ms], allgather: 60.116 [ms], asnumpy: 6.812 [ms], speed: 31968.098 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.476 [ms], allgather: 60.116 [ms], asnumpy: 6.812 [ms], speed: 31968.098 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.263 [ms], allgather: 60.893 [ms], asnumpy: 7.019 [ms], speed: 31811.421 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.263 [ms], allgather: 60.893 [ms], asnumpy: 7.019 [ms], speed: 31811.421 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100308687, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 51, "current_iter_num": 0}}
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 76.567 [ms], allgather: 71.837 [ms], asnumpy: 10.159 [ms], speed: 31532.517 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 76.567 [ms], allgather: 71.837 [ms], asnumpy: 10.159 [ms], speed: 31532.517 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 86.378 [ms], allgather: 63.251 [ms], asnumpy: 9.131 [ms], speed: 31493.639 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 86.378 [ms], allgather: 63.251 [ms], asnumpy: 9.131 [ms], speed: 31493.639 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.117 [ms], allgather: 60.759 [ms], asnumpy: 10.115 [ms], speed: 31251.380 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.117 [ms], allgather: 60.759 [ms], asnumpy: 10.115 [ms], speed: 31251.380 [imgs/sec]
INFO:root:[Training][Epoch 51] training time: 0.960 [sec],avg speed: 128045.501 [imgs/sec],loss=3.914
[Training][Epoch 51] training time: 0.960 [sec],avg speed: 128045.501 [imgs/sec],loss=3.914
:::MLLOG {"namespace": "", "time_ms": 1593100309647, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 51}}
:::MLLOG {"namespace": "", "time_ms": 1593100309647, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 52, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3000][Epoch 52, Batch 42/58] lr: 0.29250, training time: 16.808 [ms], speed: 121847.159 [imgs/sec], loss=4.645
[Training][Iteration 3000][Epoch 52, Batch 42/58] lr: 0.29250, training time: 16.808 [ms], speed: 121847.159 [imgs/sec], loss=4.645
INFO:root:[Training][Epoch 52] training time: 0.986 [sec],avg speed: 124668.510 [imgs/sec],loss=3.706
[Training][Epoch 52] training time: 0.986 [sec],avg speed: 124668.510 [imgs/sec],loss=3.706
:::MLLOG {"namespace": "", "time_ms": 1593100310633, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 52}}
:::MLLOG {"namespace": "", "time_ms": 1593100310633, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 53, "current_iter_num": 0}}
INFO:root:[Training][Epoch 53] training time: 0.948 [sec],avg speed: 129675.375 [imgs/sec],loss=3.978
[Training][Epoch 53] training time: 0.948 [sec],avg speed: 129675.375 [imgs/sec],loss=3.978
:::MLLOG {"namespace": "", "time_ms": 1593100311581, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 53}}
:::MLLOG {"namespace": "", "time_ms": 1593100311582, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 54, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1593100311600, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1593100311601, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.18579229228451136, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 50}}
INFO:root:[Training][Iteration 3100][Epoch 54, Batch 26/58] lr: 0.29250, training time: 16.335 [ms], speed: 125373.966 [imgs/sec], loss=1.203
[Training][Iteration 3100][Epoch 54, Batch 26/58] lr: 0.29250, training time: 16.335 [ms], speed: 125373.966 [imgs/sec], loss=1.203
INFO:root:[Training][Epoch 54] training time: 0.643 [sec],avg speed: 127396.681 [imgs/sec],loss=3.656
[Training][Epoch 54] training time: 0.643 [sec],avg speed: 127396.681 [imgs/sec],loss=3.656
:::MLLOG {"namespace": "", "time_ms": 1593100312225, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 54}}
:::MLLOG {"namespace": "", "time_ms": 1593100312225, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 55, "current_iter_num": 0}}
INFO:root:[Training][Epoch 55] training time: 0.984 [sec],avg speed: 124924.000 [imgs/sec],loss=4.016
[Training][Epoch 55] training time: 0.984 [sec],avg speed: 124924.000 [imgs/sec],loss=4.016
:::MLLOG {"namespace": "", "time_ms": 1593100313209, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1593100313221, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 55}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.806 [ms], allgather: 42.853 [ms], asnumpy: 7.892 [ms], speed: 34589.345 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.806 [ms], allgather: 42.853 [ms], asnumpy: 7.892 [ms], speed: 34589.345 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.044 [ms], allgather: 36.217 [ms], asnumpy: 8.071 [ms], speed: 34168.481 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.044 [ms], allgather: 36.217 [ms], asnumpy: 8.071 [ms], speed: 34168.481 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.254 [ms], allgather: 37.466 [ms], asnumpy: 7.618 [ms], speed: 34166.978 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.254 [ms], allgather: 37.466 [ms], asnumpy: 7.618 [ms], speed: 34166.978 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.233 [ms], allgather: 38.449 [ms], asnumpy: 7.781 [ms], speed: 34610.809 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.233 [ms], allgather: 38.449 [ms], asnumpy: 7.781 [ms], speed: 34610.809 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.295 [ms], allgather: 38.113 [ms], asnumpy: 7.498 [ms], speed: 34268.197 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.295 [ms], allgather: 38.113 [ms], asnumpy: 7.498 [ms], speed: 34268.197 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 89.139 [ms], allgather: 49.062 [ms], asnumpy: 8.306 [ms], speed: 34127.668 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 89.139 [ms], allgather: 49.062 [ms], asnumpy: 8.306 [ms], speed: 34127.668 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.566 [ms], allgather: 39.488 [ms], asnumpy: 7.576 [ms], speed: 34333.163 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.566 [ms], allgather: 39.488 [ms], asnumpy: 7.576 [ms], speed: 34333.163 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.067 [ms], allgather: 46.818 [ms], asnumpy: 8.305 [ms], speed: 33969.127 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.067 [ms], allgather: 46.818 [ms], asnumpy: 8.305 [ms], speed: 33969.127 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.613 [ms], allgather: 36.778 [ms], asnumpy: 7.748 [ms], speed: 34449.456 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.613 [ms], allgather: 36.778 [ms], asnumpy: 7.748 [ms], speed: 34449.456 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.217 [ms], allgather: 38.928 [ms], asnumpy: 7.969 [ms], speed: 33986.909 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.236 [ms], allgather: 38.949 [ms], asnumpy: 7.700 [ms], speed: 34039.647 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.236 [ms], allgather: 38.949 [ms], asnumpy: 7.700 [ms], speed: 34039.647 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.008 [ms], allgather: 39.549 [ms], asnumpy: 7.964 [ms], speed: 34124.336 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.008 [ms], allgather: 39.549 [ms], asnumpy: 7.964 [ms], speed: 34124.336 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.217 [ms], allgather: 38.928 [ms], asnumpy: 7.969 [ms], speed: 33986.909 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.755 [ms], allgather: 40.741 [ms], asnumpy: 7.674 [ms], speed: 34206.490 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.755 [ms], allgather: 40.741 [ms], asnumpy: 7.674 [ms], speed: 34206.490 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.564 [ms], allgather: 42.788 [ms], asnumpy: 7.723 [ms], speed: 33995.834 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.564 [ms], allgather: 42.788 [ms], asnumpy: 7.723 [ms], speed: 33995.834 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.036 [ms], allgather: 38.661 [ms], asnumpy: 8.146 [ms], speed: 34049.540 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.036 [ms], allgather: 38.661 [ms], asnumpy: 8.146 [ms], speed: 34049.540 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.580 [ms], allgather: 37.941 [ms], asnumpy: 8.323 [ms], speed: 34519.145 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.580 [ms], allgather: 37.941 [ms], asnumpy: 8.323 [ms], speed: 34519.145 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.375 [ms], allgather: 38.141 [ms], asnumpy: 8.284 [ms], speed: 34529.888 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.375 [ms], allgather: 38.141 [ms], asnumpy: 8.284 [ms], speed: 34529.888 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.505 [ms], allgather: 41.368 [ms], asnumpy: 8.471 [ms], speed: 34400.858 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.505 [ms], allgather: 41.368 [ms], asnumpy: 8.471 [ms], speed: 34400.858 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 97.955 [ms], allgather: 39.403 [ms], asnumpy: 8.384 [ms], speed: 34306.653 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 97.955 [ms], allgather: 39.403 [ms], asnumpy: 8.384 [ms], speed: 34306.653 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.158 [ms], allgather: 40.570 [ms], asnumpy: 7.614 [ms], speed: 33934.443 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.158 [ms], allgather: 40.570 [ms], asnumpy: 7.614 [ms], speed: 33934.443 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.360 [ms], allgather: 38.658 [ms], asnumpy: 8.283 [ms], speed: 34410.736 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.360 [ms], allgather: 38.658 [ms], asnumpy: 8.283 [ms], speed: 34410.736 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.491 [ms], allgather: 38.628 [ms], asnumpy: 8.064 [ms], speed: 33971.108 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.491 [ms], allgather: 38.628 [ms], asnumpy: 8.064 [ms], speed: 33971.108 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.128 [ms], allgather: 42.165 [ms], asnumpy: 7.531 [ms], speed: 33823.396 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.128 [ms], allgather: 42.165 [ms], asnumpy: 7.531 [ms], speed: 33823.396 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 99.614 [ms], allgather: 37.647 [ms], asnumpy: 8.676 [ms], speed: 34260.808 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 99.614 [ms], allgather: 37.647 [ms], asnumpy: 8.676 [ms], speed: 34260.808 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 91.939 [ms], allgather: 39.656 [ms], asnumpy: 7.970 [ms], speed: 35824.991 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 91.939 [ms], allgather: 39.656 [ms], asnumpy: 7.970 [ms], speed: 35824.991 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.508 [ms], allgather: 43.102 [ms], asnumpy: 7.836 [ms], speed: 33910.081 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.508 [ms], allgather: 43.102 [ms], asnumpy: 7.836 [ms], speed: 33910.081 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.504 [ms], allgather: 45.346 [ms], asnumpy: 8.175 [ms], speed: 33777.471 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.504 [ms], allgather: 45.346 [ms], asnumpy: 8.175 [ms], speed: 33777.471 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 93.327 [ms], allgather: 45.025 [ms], asnumpy: 8.654 [ms], speed: 34011.988 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 93.327 [ms], allgather: 45.025 [ms], asnumpy: 8.654 [ms], speed: 34011.988 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.959 [ms], allgather: 39.261 [ms], asnumpy: 7.646 [ms], speed: 33814.179 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.959 [ms], allgather: 39.261 [ms], asnumpy: 7.646 [ms], speed: 33814.179 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.738 [ms], allgather: 42.056 [ms], asnumpy: 8.068 [ms], speed: 33814.888 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.738 [ms], allgather: 42.056 [ms], asnumpy: 8.068 [ms], speed: 33814.888 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.121 [ms], allgather: 39.518 [ms], asnumpy: 8.451 [ms], speed: 33762.952 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.121 [ms], allgather: 39.518 [ms], asnumpy: 8.451 [ms], speed: 33762.952 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.882 [ms], allgather: 40.645 [ms], asnumpy: 8.617 [ms], speed: 33750.292 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.882 [ms], allgather: 40.645 [ms], asnumpy: 8.617 [ms], speed: 33750.292 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.308 [ms], allgather: 40.558 [ms], asnumpy: 7.512 [ms], speed: 33697.417 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.308 [ms], allgather: 40.558 [ms], asnumpy: 7.512 [ms], speed: 33697.417 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 87.342 [ms], allgather: 52.104 [ms], asnumpy: 8.894 [ms], speed: 33706.028 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 87.342 [ms], allgather: 52.104 [ms], asnumpy: 8.894 [ms], speed: 33706.028 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.281 [ms], allgather: 39.227 [ms], asnumpy: 8.804 [ms], speed: 34173.158 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.281 [ms], allgather: 39.227 [ms], asnumpy: 8.804 [ms], speed: 34173.158 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.181 [ms], allgather: 46.426 [ms], asnumpy: 8.226 [ms], speed: 33594.369 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.181 [ms], allgather: 46.426 [ms], asnumpy: 8.226 [ms], speed: 33594.369 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.264 [ms], allgather: 37.276 [ms], asnumpy: 10.933 [ms], speed: 33450.388 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.264 [ms], allgather: 37.276 [ms], asnumpy: 10.933 [ms], speed: 33450.388 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.292 [ms], allgather: 37.322 [ms], asnumpy: 10.719 [ms], speed: 33936.146 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.292 [ms], allgather: 37.322 [ms], asnumpy: 10.719 [ms], speed: 33936.146 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 90.927 [ms], allgather: 42.489 [ms], asnumpy: 11.088 [ms], speed: 34600.645 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 90.927 [ms], allgather: 42.489 [ms], asnumpy: 11.088 [ms], speed: 34600.645 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.972 [ms], allgather: 38.038 [ms], asnumpy: 10.743 [ms], speed: 33387.920 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.972 [ms], allgather: 38.038 [ms], asnumpy: 10.743 [ms], speed: 33387.920 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.984 [ms], allgather: 37.948 [ms], asnumpy: 10.598 [ms], speed: 33437.854 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.984 [ms], allgather: 37.948 [ms], asnumpy: 10.598 [ms], speed: 33437.854 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 86.795 [ms], allgather: 52.070 [ms], asnumpy: 10.968 [ms], speed: 33370.016 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 86.795 [ms], allgather: 52.070 [ms], asnumpy: 10.968 [ms], speed: 33370.016 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.801 [ms], allgather: 44.092 [ms], asnumpy: 7.307 [ms], speed: 33511.644 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.801 [ms], allgather: 44.092 [ms], asnumpy: 7.307 [ms], speed: 33511.644 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.285 [ms], allgather: 39.927 [ms], asnumpy: 11.078 [ms], speed: 33268.799 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.285 [ms], allgather: 39.927 [ms], asnumpy: 11.078 [ms], speed: 33268.799 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.367 [ms], allgather: 39.138 [ms], asnumpy: 10.688 [ms], speed: 33739.323 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.367 [ms], allgather: 39.138 [ms], asnumpy: 10.688 [ms], speed: 33739.323 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.422 [ms], allgather: 37.435 [ms], asnumpy: 12.071 [ms], speed: 33799.846 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.422 [ms], allgather: 37.435 [ms], asnumpy: 12.071 [ms], speed: 33799.846 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.553 [ms], allgather: 38.558 [ms], asnumpy: 11.658 [ms], speed: 33608.744 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.553 [ms], allgather: 38.558 [ms], asnumpy: 11.658 [ms], speed: 33608.744 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.464 [ms], allgather: 50.795 [ms], asnumpy: 11.656 [ms], speed: 33130.834 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.464 [ms], allgather: 50.795 [ms], asnumpy: 11.656 [ms], speed: 33130.834 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.492 [ms], allgather: 39.916 [ms], asnumpy: 11.765 [ms], speed: 33294.627 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.492 [ms], allgather: 39.916 [ms], asnumpy: 11.765 [ms], speed: 33294.627 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.164 [ms], allgather: 37.853 [ms], asnumpy: 12.180 [ms], speed: 33069.032 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.164 [ms], allgather: 37.853 [ms], asnumpy: 12.180 [ms], speed: 33069.032 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.426 [ms], allgather: 37.854 [ms], asnumpy: 11.905 [ms], speed: 33515.018 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.426 [ms], allgather: 37.854 [ms], asnumpy: 11.905 [ms], speed: 33515.018 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.233 [ms], allgather: 42.903 [ms], asnumpy: 13.771 [ms], speed: 32699.331 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.233 [ms], allgather: 42.903 [ms], asnumpy: 13.771 [ms], speed: 32699.331 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.143 [ms], allgather: 48.165 [ms], asnumpy: 6.937 [ms], speed: 32206.648 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.143 [ms], allgather: 48.165 [ms], asnumpy: 6.937 [ms], speed: 32206.648 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.766 [ms], allgather: 47.567 [ms], asnumpy: 9.665 [ms], speed: 32894.748 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.766 [ms], allgather: 47.567 [ms], asnumpy: 9.665 [ms], speed: 32894.748 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.965 [ms], allgather: 50.583 [ms], asnumpy: 6.885 [ms], speed: 33017.436 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.965 [ms], allgather: 50.583 [ms], asnumpy: 6.885 [ms], speed: 33017.436 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.845 [ms], allgather: 48.545 [ms], asnumpy: 9.645 [ms], speed: 32459.533 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.845 [ms], allgather: 48.545 [ms], asnumpy: 9.645 [ms], speed: 32459.533 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 91.018 [ms], allgather: 54.304 [ms], asnumpy: 6.735 [ms], speed: 32881.699 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 91.018 [ms], allgather: 54.304 [ms], asnumpy: 6.735 [ms], speed: 32881.699 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.321 [ms], allgather: 48.284 [ms], asnumpy: 10.810 [ms], speed: 31562.319 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.321 [ms], allgather: 48.284 [ms], asnumpy: 10.810 [ms], speed: 31562.319 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.209 [ms], allgather: 54.728 [ms], asnumpy: 7.567 [ms], speed: 32785.469 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.209 [ms], allgather: 54.728 [ms], asnumpy: 7.567 [ms], speed: 32785.469 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.895 [ms], allgather: 51.718 [ms], asnumpy: 6.886 [ms], speed: 32786.647 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.895 [ms], allgather: 51.718 [ms], asnumpy: 6.886 [ms], speed: 32786.647 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 77.966 [ms], allgather: 68.671 [ms], asnumpy: 6.974 [ms], speed: 32549.057 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 77.966 [ms], allgather: 68.671 [ms], asnumpy: 6.974 [ms], speed: 32549.057 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.343 [ms], allgather: 52.125 [ms], asnumpy: 7.896 [ms], speed: 32601.731 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.343 [ms], allgather: 52.125 [ms], asnumpy: 7.896 [ms], speed: 32601.731 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 93.446 [ms], allgather: 52.808 [ms], asnumpy: 8.536 [ms], speed: 32301.297 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 93.446 [ms], allgather: 52.808 [ms], asnumpy: 8.536 [ms], speed: 32301.297 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.884 [ms], allgather: 52.736 [ms], asnumpy: 10.460 [ms], speed: 32241.060 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.884 [ms], allgather: 52.736 [ms], asnumpy: 10.460 [ms], speed: 32241.060 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100313387, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 56, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3200][Epoch 56, Batch 10/58] lr: 0.29250, training time: 16.264 [ms], speed: 125924.793 [imgs/sec], loss=4.422
[Training][Iteration 3200][Epoch 56, Batch 10/58] lr: 0.29250, training time: 16.264 [ms], speed: 125924.793 [imgs/sec], loss=4.422
INFO:root:[Training][Epoch 56] training time: 0.941 [sec],avg speed: 130577.109 [imgs/sec],loss=3.659
[Training][Epoch 56] training time: 0.941 [sec],avg speed: 130577.109 [imgs/sec],loss=3.659
:::MLLOG {"namespace": "", "time_ms": 1593100314328, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 56}}
:::MLLOG {"namespace": "", "time_ms": 1593100314329, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 57, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3300][Epoch 57, Batch 52/58] lr: 0.29250, training time: 15.918 [ms], speed: 128662.359 [imgs/sec], loss=3.515
[Training][Iteration 3300][Epoch 57, Batch 52/58] lr: 0.29250, training time: 15.918 [ms], speed: 128662.359 [imgs/sec], loss=3.515
INFO:root:[Training][Epoch 57] training time: 0.950 [sec],avg speed: 129327.076 [imgs/sec],loss=3.744
[Training][Epoch 57] training time: 0.950 [sec],avg speed: 129327.076 [imgs/sec],loss=3.744
:::MLLOG {"namespace": "", "time_ms": 1593100315279, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 57}}
:::MLLOG {"namespace": "", "time_ms": 1593100315280, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 58, "current_iter_num": 0}}
INFO:root:[Training][Epoch 58] training time: 0.979 [sec],avg speed: 125555.234 [imgs/sec],loss=3.828
[Training][Epoch 58] training time: 0.979 [sec],avg speed: 125555.234 [imgs/sec],loss=3.828
:::MLLOG {"namespace": "", "time_ms": 1593100316259, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 58}}
:::MLLOG {"namespace": "", "time_ms": 1593100316259, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 59, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1593100316364, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1593100316365, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1801083600997775, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 55}}
INFO:root:[Training][Iteration 3400][Epoch 59, Batch 36/58] lr: 0.29250, training time: 15.992 [ms], speed: 128061.759 [imgs/sec], loss=2.600
[Training][Iteration 3400][Epoch 59, Batch 36/58] lr: 0.29250, training time: 15.992 [ms], speed: 128061.759 [imgs/sec], loss=2.600
INFO:root:[Training][Epoch 59] training time: 0.963 [sec],avg speed: 127626.864 [imgs/sec],loss=3.706
[Training][Epoch 59] training time: 0.963 [sec],avg speed: 127626.864 [imgs/sec],loss=3.706
:::MLLOG {"namespace": "", "time_ms": 1593100317222, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 59}}
:::MLLOG {"namespace": "", "time_ms": 1593100317222, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 60, "current_iter_num": 0}}
INFO:root:[Training][Epoch 60] training time: 0.645 [sec],avg speed: 126956.463 [imgs/sec],loss=3.517
[Training][Epoch 60] training time: 0.645 [sec],avg speed: 126956.463 [imgs/sec],loss=3.517
:::MLLOG {"namespace": "", "time_ms": 1593100317868, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1593100317881, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 60}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.300 [ms], allgather: 40.567 [ms], asnumpy: 7.129 [ms], speed: 35714.928 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.300 [ms], allgather: 40.567 [ms], asnumpy: 7.129 [ms], speed: 35714.928 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100318022, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 61, "current_iter_num": 0}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.923 [ms], allgather: 76.761 [ms], asnumpy: 7.095 [ms], speed: 27967.173 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.923 [ms], allgather: 76.761 [ms], asnumpy: 7.095 [ms], speed: 27967.173 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 74.688 [ms], allgather: 95.162 [ms], asnumpy: 7.159 [ms], speed: 28246.830 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 74.688 [ms], allgather: 95.162 [ms], asnumpy: 7.159 [ms], speed: 28246.830 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 96.769 [ms], allgather: 75.020 [ms], asnumpy: 7.146 [ms], speed: 27942.914 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 96.769 [ms], allgather: 75.020 [ms], asnumpy: 7.146 [ms], speed: 27942.914 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.240 [ms], allgather: 75.463 [ms], asnumpy: 7.052 [ms], speed: 27815.421 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.240 [ms], allgather: 75.463 [ms], asnumpy: 7.052 [ms], speed: 27815.421 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.268 [ms], allgather: 78.465 [ms], asnumpy: 7.225 [ms], speed: 27784.134 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.268 [ms], allgather: 78.465 [ms], asnumpy: 7.225 [ms], speed: 27784.134 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.143 [ms], allgather: 75.377 [ms], asnumpy: 7.161 [ms], speed: 27826.788 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.143 [ms], allgather: 75.377 [ms], asnumpy: 7.161 [ms], speed: 27826.788 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.046 [ms], allgather: 75.045 [ms], asnumpy: 7.163 [ms], speed: 28049.541 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.046 [ms], allgather: 75.045 [ms], asnumpy: 7.163 [ms], speed: 28049.541 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.862 [ms], allgather: 75.204 [ms], asnumpy: 7.042 [ms], speed: 27760.706 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.862 [ms], allgather: 75.204 [ms], asnumpy: 7.042 [ms], speed: 27760.706 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.847 [ms], allgather: 76.708 [ms], asnumpy: 7.357 [ms], speed: 27946.377 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.847 [ms], allgather: 76.708 [ms], asnumpy: 7.357 [ms], speed: 27946.377 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 86.385 [ms], allgather: 86.304 [ms], asnumpy: 7.373 [ms], speed: 27767.984 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 86.385 [ms], allgather: 86.304 [ms], asnumpy: 7.373 [ms], speed: 27767.984 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.638 [ms], allgather: 77.871 [ms], asnumpy: 6.849 [ms], speed: 28033.306 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.638 [ms], allgather: 77.871 [ms], asnumpy: 6.849 [ms], speed: 28033.306 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.208 [ms], allgather: 74.224 [ms], asnumpy: 7.429 [ms], speed: 27799.013 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.208 [ms], allgather: 74.224 [ms], asnumpy: 7.429 [ms], speed: 27799.013 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.478 [ms], allgather: 74.735 [ms], asnumpy: 7.354 [ms], speed: 27690.329 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.478 [ms], allgather: 74.735 [ms], asnumpy: 7.354 [ms], speed: 27690.329 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.131 [ms], allgather: 75.758 [ms], asnumpy: 7.585 [ms], speed: 27704.669 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.131 [ms], allgather: 75.758 [ms], asnumpy: 7.585 [ms], speed: 27704.669 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 95.407 [ms], allgather: 77.135 [ms], asnumpy: 6.602 [ms], speed: 27910.448 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 95.407 [ms], allgather: 77.135 [ms], asnumpy: 6.602 [ms], speed: 27910.448 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.116 [ms], allgather: 75.783 [ms], asnumpy: 7.381 [ms], speed: 27889.069 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.116 [ms], allgather: 75.783 [ms], asnumpy: 7.381 [ms], speed: 27889.069 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.192 [ms], allgather: 76.101 [ms], asnumpy: 7.370 [ms], speed: 27675.493 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.192 [ms], allgather: 76.101 [ms], asnumpy: 7.370 [ms], speed: 27675.493 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 75.137 [ms], allgather: 90.729 [ms], asnumpy: 7.521 [ms], speed: 28836.900 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 75.137 [ms], allgather: 90.729 [ms], asnumpy: 7.521 [ms], speed: 28836.900 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.052 [ms], allgather: 76.433 [ms], asnumpy: 7.557 [ms], speed: 27617.617 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.052 [ms], allgather: 76.433 [ms], asnumpy: 7.557 [ms], speed: 27617.617 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 87.305 [ms], allgather: 86.215 [ms], asnumpy: 7.292 [ms], speed: 27652.904 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 87.305 [ms], allgather: 86.215 [ms], asnumpy: 7.292 [ms], speed: 27652.904 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 95.529 [ms], allgather: 78.979 [ms], asnumpy: 6.462 [ms], speed: 27628.641 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 95.529 [ms], allgather: 78.979 [ms], asnumpy: 6.462 [ms], speed: 27628.641 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 97.644 [ms], allgather: 76.948 [ms], asnumpy: 6.596 [ms], speed: 27595.412 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 97.644 [ms], allgather: 76.948 [ms], asnumpy: 6.596 [ms], speed: 27595.412 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.772 [ms], allgather: 78.130 [ms], asnumpy: 7.437 [ms], speed: 27572.519 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.772 [ms], allgather: 78.130 [ms], asnumpy: 7.437 [ms], speed: 27572.519 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 87.945 [ms], allgather: 83.893 [ms], asnumpy: 7.676 [ms], speed: 27852.622 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 87.945 [ms], allgather: 83.893 [ms], asnumpy: 7.676 [ms], speed: 27852.622 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.093 [ms], allgather: 79.639 [ms], asnumpy: 7.689 [ms], speed: 27559.837 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.093 [ms], allgather: 79.639 [ms], asnumpy: 7.689 [ms], speed: 27559.837 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.325 [ms], allgather: 78.408 [ms], asnumpy: 6.748 [ms], speed: 27857.690 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.325 [ms], allgather: 78.408 [ms], asnumpy: 6.748 [ms], speed: 27857.690 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 87.403 [ms], allgather: 85.945 [ms], asnumpy: 7.737 [ms], speed: 27611.144 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 87.403 [ms], allgather: 85.945 [ms], asnumpy: 7.737 [ms], speed: 27611.144 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.230 [ms], allgather: 75.934 [ms], asnumpy: 8.378 [ms], speed: 27541.450 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.230 [ms], allgather: 75.934 [ms], asnumpy: 8.378 [ms], speed: 27541.450 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.307 [ms], allgather: 78.902 [ms], asnumpy: 7.810 [ms], speed: 27469.373 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.307 [ms], allgather: 78.902 [ms], asnumpy: 7.810 [ms], speed: 27469.373 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 83.026 [ms], allgather: 92.045 [ms], asnumpy: 7.017 [ms], speed: 27459.014 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 83.026 [ms], allgather: 92.045 [ms], asnumpy: 7.017 [ms], speed: 27459.014 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.492 [ms], allgather: 77.748 [ms], asnumpy: 9.195 [ms], speed: 27864.945 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.492 [ms], allgather: 77.748 [ms], asnumpy: 9.195 [ms], speed: 27864.945 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.796 [ms], allgather: 78.435 [ms], asnumpy: 8.190 [ms], speed: 27408.736 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.796 [ms], allgather: 78.435 [ms], asnumpy: 8.190 [ms], speed: 27408.736 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.029 [ms], allgather: 79.597 [ms], asnumpy: 7.078 [ms], speed: 27669.176 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.029 [ms], allgather: 79.597 [ms], asnumpy: 7.078 [ms], speed: 27669.176 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.257 [ms], allgather: 78.968 [ms], asnumpy: 7.948 [ms], speed: 27446.221 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.257 [ms], allgather: 78.968 [ms], asnumpy: 7.948 [ms], speed: 27446.221 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.679 [ms], allgather: 80.236 [ms], asnumpy: 7.494 [ms], speed: 27714.444 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.679 [ms], allgather: 80.236 [ms], asnumpy: 7.494 [ms], speed: 27714.444 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.416 [ms], allgather: 80.124 [ms], asnumpy: 7.087 [ms], speed: 27377.820 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.416 [ms], allgather: 80.124 [ms], asnumpy: 7.087 [ms], speed: 27377.820 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.584 [ms], allgather: 78.201 [ms], asnumpy: 9.901 [ms], speed: 27519.621 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.584 [ms], allgather: 78.201 [ms], asnumpy: 9.901 [ms], speed: 27519.621 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.703 [ms], allgather: 76.340 [ms], asnumpy: 8.661 [ms], speed: 27366.388 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.703 [ms], allgather: 76.340 [ms], asnumpy: 8.661 [ms], speed: 27366.388 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 85.560 [ms], allgather: 88.630 [ms], asnumpy: 8.129 [ms], speed: 27424.255 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 85.560 [ms], allgather: 88.630 [ms], asnumpy: 8.129 [ms], speed: 27424.255 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.793 [ms], allgather: 75.693 [ms], asnumpy: 10.602 [ms], speed: 27308.942 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.793 [ms], allgather: 75.693 [ms], asnumpy: 10.602 [ms], speed: 27308.942 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 94.174 [ms], allgather: 77.453 [ms], asnumpy: 9.686 [ms], speed: 27576.507 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 94.174 [ms], allgather: 77.453 [ms], asnumpy: 9.686 [ms], speed: 27576.507 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.369 [ms], allgather: 76.844 [ms], asnumpy: 9.705 [ms], speed: 27185.852 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.369 [ms], allgather: 76.844 [ms], asnumpy: 9.705 [ms], speed: 27185.852 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.789 [ms], allgather: 78.610 [ms], asnumpy: 9.748 [ms], speed: 27300.162 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.789 [ms], allgather: 78.610 [ms], asnumpy: 9.748 [ms], speed: 27300.162 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 89.606 [ms], allgather: 77.977 [ms], asnumpy: 9.703 [ms], speed: 28202.614 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 89.606 [ms], allgather: 77.977 [ms], asnumpy: 9.703 [ms], speed: 28202.614 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.395 [ms], allgather: 75.186 [ms], asnumpy: 10.647 [ms], speed: 27139.975 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.395 [ms], allgather: 75.186 [ms], asnumpy: 10.647 [ms], speed: 27139.975 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 94.453 [ms], allgather: 77.133 [ms], asnumpy: 10.548 [ms], speed: 27452.041 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 94.453 [ms], allgather: 77.133 [ms], asnumpy: 10.548 [ms], speed: 27452.041 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.232 [ms], allgather: 79.747 [ms], asnumpy: 9.650 [ms], speed: 27080.992 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.232 [ms], allgather: 79.747 [ms], asnumpy: 9.650 [ms], speed: 27080.992 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 85.615 [ms], allgather: 89.633 [ms], asnumpy: 7.168 [ms], speed: 27409.595 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 85.615 [ms], allgather: 89.633 [ms], asnumpy: 7.168 [ms], speed: 27409.595 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 89.247 [ms], allgather: 88.910 [ms], asnumpy: 6.894 [ms], speed: 27019.096 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 89.247 [ms], allgather: 88.910 [ms], asnumpy: 6.894 [ms], speed: 27019.096 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.399 [ms], allgather: 92.012 [ms], asnumpy: 7.166 [ms], speed: 25963.399 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.399 [ms], allgather: 92.012 [ms], asnumpy: 7.166 [ms], speed: 25963.399 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 90.549 [ms], allgather: 95.913 [ms], asnumpy: 7.623 [ms], speed: 25761.576 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 90.549 [ms], allgather: 95.913 [ms], asnumpy: 7.623 [ms], speed: 25761.576 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.093 [ms], allgather: 94.871 [ms], asnumpy: 9.389 [ms], speed: 25464.131 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.093 [ms], allgather: 94.871 [ms], asnumpy: 9.389 [ms], speed: 25464.131 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 89.600 [ms], allgather: 102.027 [ms], asnumpy: 6.375 [ms], speed: 25252.075 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 89.600 [ms], allgather: 102.027 [ms], asnumpy: 6.375 [ms], speed: 25252.075 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.655 [ms], allgather: 103.802 [ms], asnumpy: 6.287 [ms], speed: 25157.713 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.655 [ms], allgather: 103.802 [ms], asnumpy: 6.287 [ms], speed: 25157.713 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 87.744 [ms], allgather: 104.707 [ms], asnumpy: 6.258 [ms], speed: 25162.090 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 87.744 [ms], allgather: 104.707 [ms], asnumpy: 6.258 [ms], speed: 25162.090 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.061 [ms], allgather: 103.603 [ms], asnumpy: 7.491 [ms], speed: 25105.701 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.061 [ms], allgather: 103.603 [ms], asnumpy: 7.491 [ms], speed: 25105.701 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 88.171 [ms], allgather: 104.378 [ms], asnumpy: 7.550 [ms], speed: 24987.364 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 88.171 [ms], allgather: 104.378 [ms], asnumpy: 7.550 [ms], speed: 24987.364 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 86.309 [ms], allgather: 106.752 [ms], asnumpy: 7.325 [ms], speed: 24951.540 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 86.309 [ms], allgather: 106.752 [ms], asnumpy: 7.325 [ms], speed: 24951.540 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 87.388 [ms], allgather: 104.123 [ms], asnumpy: 9.190 [ms], speed: 24912.297 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 87.388 [ms], allgather: 104.123 [ms], asnumpy: 9.190 [ms], speed: 24912.297 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 89.087 [ms], allgather: 103.081 [ms], asnumpy: 8.548 [ms], speed: 24910.551 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 89.087 [ms], allgather: 103.081 [ms], asnumpy: 8.548 [ms], speed: 24910.551 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 91.076 [ms], allgather: 102.807 [ms], asnumpy: 7.485 [ms], speed: 24829.944 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 91.076 [ms], allgather: 102.807 [ms], asnumpy: 7.485 [ms], speed: 24829.944 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 89.616 [ms], allgather: 102.772 [ms], asnumpy: 9.593 [ms], speed: 24754.416 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 89.616 [ms], allgather: 102.772 [ms], asnumpy: 9.593 [ms], speed: 24754.416 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 90.511 [ms], allgather: 101.706 [ms], asnumpy: 11.071 [ms], speed: 24595.263 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 90.511 [ms], allgather: 101.706 [ms], asnumpy: 11.071 [ms], speed: 24595.263 [imgs/sec]
INFO:root:[Training][Iteration 3500][Epoch 61, Batch 20/58] lr: 0.02925, training time: 19.824 [ms], speed: 103306.800 [imgs/sec], loss=1.569
[Training][Iteration 3500][Epoch 61, Batch 20/58] lr: 0.02925, training time: 19.824 [ms], speed: 103306.800 [imgs/sec], loss=1.569
INFO:root:[Training][Epoch 61] training time: 1.046 [sec],avg speed: 117521.557 [imgs/sec],loss=3.564
[Training][Epoch 61] training time: 1.046 [sec],avg speed: 117521.557 [imgs/sec],loss=3.564
:::MLLOG {"namespace": "", "time_ms": 1593100319068, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 61}}
:::MLLOG {"namespace": "", "time_ms": 1593100319068, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 62, "current_iter_num": 0}}
INFO:root:[Training][Epoch 62] training time: 0.965 [sec],avg speed: 127331.231 [imgs/sec],loss=3.564
[Training][Epoch 62] training time: 0.965 [sec],avg speed: 127331.231 [imgs/sec],loss=3.564
:::MLLOG {"namespace": "", "time_ms": 1593100320033, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 62}}
:::MLLOG {"namespace": "", "time_ms": 1593100320034, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 63, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3600][Epoch 63, Batch 4/58] lr: 0.02925, training time: 17.728 [ms], speed: 115525.208 [imgs/sec], loss=3.483
[Training][Iteration 3600][Epoch 63, Batch 4/58] lr: 0.02925, training time: 17.728 [ms], speed: 115525.208 [imgs/sec], loss=3.483
:::MLLOG {"namespace": "", "time_ms": 1593100320895, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1593100320895, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.19170480424175015, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 60}}
INFO:root:[Training][Epoch 63] training time: 0.971 [sec],avg speed: 126608.958 [imgs/sec],loss=3.197
[Training][Epoch 63] training time: 0.971 [sec],avg speed: 126608.958 [imgs/sec],loss=3.197
:::MLLOG {"namespace": "", "time_ms": 1593100321005, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 63}}
:::MLLOG {"namespace": "", "time_ms": 1593100321005, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 64, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3700][Epoch 64, Batch 46/58] lr: 0.02925, training time: 16.042 [ms], speed: 127665.999 [imgs/sec], loss=2.834
[Training][Iteration 3700][Epoch 64, Batch 46/58] lr: 0.02925, training time: 16.042 [ms], speed: 127665.999 [imgs/sec], loss=2.834
INFO:root:[Training][Epoch 64] training time: 0.970 [sec],avg speed: 126712.550 [imgs/sec],loss=3.370
[Training][Epoch 64] training time: 0.970 [sec],avg speed: 126712.550 [imgs/sec],loss=3.370
:::MLLOG {"namespace": "", "time_ms": 1593100321975, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 64}}
:::MLLOG {"namespace": "", "time_ms": 1593100321975, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 65, "current_iter_num": 0}}
INFO:root:[Training][Epoch 65] training time: 0.963 [sec],avg speed: 127545.977 [imgs/sec],loss=3.256
[Training][Epoch 65] training time: 0.963 [sec],avg speed: 127545.977 [imgs/sec],loss=3.256
:::MLLOG {"namespace": "", "time_ms": 1593100322939, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1593100322951, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 243, "epoch_num": 65}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.986 [ms], allgather: 36.730 [ms], asnumpy: 7.122 [ms], speed: 35251.110 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.986 [ms], allgather: 36.730 [ms], asnumpy: 7.122 [ms], speed: 35251.110 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.662 [ms], allgather: 36.309 [ms], asnumpy: 7.285 [ms], speed: 34660.175 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.662 [ms], allgather: 36.309 [ms], asnumpy: 7.285 [ms], speed: 34660.175 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.001 [ms], allgather: 38.109 [ms], asnumpy: 7.046 [ms], speed: 34684.193 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.001 [ms], allgather: 38.109 [ms], asnumpy: 7.046 [ms], speed: 34684.193 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.067 [ms], allgather: 37.170 [ms], asnumpy: 7.470 [ms], speed: 34792.546 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.067 [ms], allgather: 37.170 [ms], asnumpy: 7.470 [ms], speed: 34792.546 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 100.842 [ms], allgather: 36.280 [ms], asnumpy: 6.445 [ms], speed: 34826.404 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 100.842 [ms], allgather: 36.280 [ms], asnumpy: 6.445 [ms], speed: 34826.404 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.843 [ms], allgather: 36.526 [ms], asnumpy: 7.240 [ms], speed: 35060.520 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.843 [ms], allgather: 36.526 [ms], asnumpy: 7.240 [ms], speed: 35060.520 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.088 [ms], allgather: 38.641 [ms], asnumpy: 7.208 [ms], speed: 34736.933 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.088 [ms], allgather: 38.641 [ms], asnumpy: 7.208 [ms], speed: 34736.933 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.092 [ms], allgather: 36.146 [ms], asnumpy: 7.196 [ms], speed: 34858.647 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.092 [ms], allgather: 36.146 [ms], asnumpy: 7.196 [ms], speed: 34858.647 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.823 [ms], allgather: 36.545 [ms], asnumpy: 7.533 [ms], speed: 34988.863 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.823 [ms], allgather: 36.545 [ms], asnumpy: 7.533 [ms], speed: 34988.863 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.646 [ms], allgather: 37.566 [ms], asnumpy: 7.221 [ms], speed: 34379.597 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.646 [ms], allgather: 37.566 [ms], asnumpy: 7.221 [ms], speed: 34379.597 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.574 [ms], allgather: 37.671 [ms], asnumpy: 7.180 [ms], speed: 34860.849 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.574 [ms], allgather: 37.671 [ms], asnumpy: 7.180 [ms], speed: 34860.849 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.559 [ms], allgather: 38.135 [ms], asnumpy: 7.169 [ms], speed: 34515.225 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.559 [ms], allgather: 38.135 [ms], asnumpy: 7.169 [ms], speed: 34515.225 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.466 [ms], allgather: 37.181 [ms], asnumpy: 7.166 [ms], speed: 34526.761 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.466 [ms], allgather: 37.181 [ms], asnumpy: 7.166 [ms], speed: 34526.761 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.974 [ms], allgather: 36.173 [ms], asnumpy: 8.282 [ms], speed: 34860.154 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.974 [ms], allgather: 36.173 [ms], asnumpy: 8.282 [ms], speed: 34860.154 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.311 [ms], allgather: 37.397 [ms], asnumpy: 7.568 [ms], speed: 34897.047 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.311 [ms], allgather: 37.397 [ms], asnumpy: 7.568 [ms], speed: 34897.047 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.476 [ms], allgather: 37.401 [ms], asnumpy: 7.084 [ms], speed: 34491.497 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.476 [ms], allgather: 37.401 [ms], asnumpy: 7.084 [ms], speed: 34491.497 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.324 [ms], allgather: 39.972 [ms], asnumpy: 7.784 [ms], speed: 34945.078 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.324 [ms], allgather: 39.972 [ms], asnumpy: 7.784 [ms], speed: 34945.078 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.362 [ms], allgather: 37.172 [ms], asnumpy: 7.159 [ms], speed: 34318.331 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.362 [ms], allgather: 37.172 [ms], asnumpy: 7.159 [ms], speed: 34318.331 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.514 [ms], allgather: 37.651 [ms], asnumpy: 7.879 [ms], speed: 34711.003 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.514 [ms], allgather: 37.651 [ms], asnumpy: 7.879 [ms], speed: 34711.003 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.998 [ms], allgather: 37.053 [ms], asnumpy: 6.927 [ms], speed: 34969.843 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.998 [ms], allgather: 37.053 [ms], asnumpy: 6.927 [ms], speed: 34969.843 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.691 [ms], allgather: 36.399 [ms], asnumpy: 7.317 [ms], speed: 34386.080 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.691 [ms], allgather: 36.399 [ms], asnumpy: 7.317 [ms], speed: 34386.080 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.199 [ms], allgather: 36.129 [ms], asnumpy: 7.551 [ms], speed: 34511.079 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.199 [ms], allgather: 36.129 [ms], asnumpy: 7.551 [ms], speed: 34511.079 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.738 [ms], allgather: 38.700 [ms], asnumpy: 7.231 [ms], speed: 34801.841 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.738 [ms], allgather: 38.700 [ms], asnumpy: 7.231 [ms], speed: 34801.841 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 96.245 [ms], allgather: 40.063 [ms], asnumpy: 7.798 [ms], speed: 34696.129 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 96.245 [ms], allgather: 40.063 [ms], asnumpy: 7.798 [ms], speed: 34696.129 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 90.134 [ms], allgather: 40.079 [ms], asnumpy: 7.246 [ms], speed: 36373.463 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 90.134 [ms], allgather: 40.079 [ms], asnumpy: 7.246 [ms], speed: 36373.463 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.917 [ms], allgather: 42.107 [ms], asnumpy: 6.463 [ms], speed: 34846.194 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.917 [ms], allgather: 42.107 [ms], asnumpy: 6.463 [ms], speed: 34846.194 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.467 [ms], allgather: 40.365 [ms], asnumpy: 7.821 [ms], speed: 34327.599 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.467 [ms], allgather: 40.365 [ms], asnumpy: 7.821 [ms], speed: 34327.599 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.055 [ms], allgather: 36.658 [ms], asnumpy: 8.283 [ms], speed: 34247.324 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.055 [ms], allgather: 36.658 [ms], asnumpy: 8.283 [ms], speed: 34247.324 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.098 [ms], allgather: 38.795 [ms], asnumpy: 8.210 [ms], speed: 34222.063 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.098 [ms], allgather: 38.795 [ms], asnumpy: 8.210 [ms], speed: 34222.063 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 92.382 [ms], allgather: 38.314 [ms], asnumpy: 7.961 [ms], speed: 36059.872 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 92.382 [ms], allgather: 38.314 [ms], asnumpy: 7.961 [ms], speed: 36059.872 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 98.225 [ms], allgather: 37.945 [ms], asnumpy: 7.672 [ms], speed: 34759.963 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 98.225 [ms], allgather: 37.945 [ms], asnumpy: 7.672 [ms], speed: 34759.963 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.337 [ms], allgather: 38.914 [ms], asnumpy: 8.168 [ms], speed: 34621.094 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.337 [ms], allgather: 38.914 [ms], asnumpy: 8.168 [ms], speed: 34621.094 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 83.692 [ms], allgather: 51.779 [ms], asnumpy: 7.585 [ms], speed: 34951.077 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 83.692 [ms], allgather: 51.779 [ms], asnumpy: 7.585 [ms], speed: 34951.077 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.286 [ms], allgather: 38.156 [ms], asnumpy: 9.412 [ms], speed: 34047.163 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.286 [ms], allgather: 38.156 [ms], asnumpy: 9.412 [ms], speed: 34047.163 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 98.205 [ms], allgather: 40.285 [ms], asnumpy: 7.128 [ms], speed: 34336.142 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 98.205 [ms], allgather: 40.285 [ms], asnumpy: 7.128 [ms], speed: 34336.142 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.820 [ms], allgather: 39.637 [ms], asnumpy: 6.976 [ms], speed: 34144.893 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.820 [ms], allgather: 39.637 [ms], asnumpy: 6.976 [ms], speed: 34144.893 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.989 [ms], allgather: 39.376 [ms], asnumpy: 7.423 [ms], speed: 34062.315 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.989 [ms], allgather: 39.376 [ms], asnumpy: 7.423 [ms], speed: 34062.315 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 88.972 [ms], allgather: 49.503 [ms], asnumpy: 7.431 [ms], speed: 34268.365 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 88.972 [ms], allgather: 49.503 [ms], asnumpy: 7.431 [ms], speed: 34268.365 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 96.790 [ms], allgather: 38.809 [ms], asnumpy: 9.536 [ms], speed: 34450.475 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 96.790 [ms], allgather: 38.809 [ms], asnumpy: 9.536 [ms], speed: 34450.475 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 96.440 [ms], allgather: 39.293 [ms], asnumpy: 9.558 [ms], speed: 34413.334 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 96.440 [ms], allgather: 39.293 [ms], asnumpy: 9.558 [ms], speed: 34413.334 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 100.664 [ms], allgather: 36.419 [ms], asnumpy: 9.813 [ms], speed: 34037.326 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 100.664 [ms], allgather: 36.419 [ms], asnumpy: 9.813 [ms], speed: 34037.326 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 101.198 [ms], allgather: 37.154 [ms], asnumpy: 9.071 [ms], speed: 33915.620 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 101.198 [ms], allgather: 37.154 [ms], asnumpy: 9.071 [ms], speed: 33915.620 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.648 [ms], allgather: 42.612 [ms], asnumpy: 9.361 [ms], speed: 33869.992 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.648 [ms], allgather: 42.612 [ms], asnumpy: 9.361 [ms], speed: 33869.992 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 99.260 [ms], allgather: 39.994 [ms], asnumpy: 8.055 [ms], speed: 33941.858 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 99.260 [ms], allgather: 39.994 [ms], asnumpy: 8.055 [ms], speed: 33941.858 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.505 [ms], allgather: 40.719 [ms], asnumpy: 8.160 [ms], speed: 34156.182 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.505 [ms], allgather: 40.719 [ms], asnumpy: 8.160 [ms], speed: 34156.182 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 102.023 [ms], allgather: 35.085 [ms], asnumpy: 10.808 [ms], speed: 33802.624 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 102.023 [ms], allgather: 35.085 [ms], asnumpy: 10.808 [ms], speed: 33802.624 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.212 [ms], allgather: 40.899 [ms], asnumpy: 7.469 [ms], speed: 33879.622 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.212 [ms], allgather: 40.899 [ms], asnumpy: 7.469 [ms], speed: 33879.622 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.205 [ms], allgather: 36.226 [ms], asnumpy: 11.173 [ms], speed: 34105.245 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.205 [ms], allgather: 36.226 [ms], asnumpy: 11.173 [ms], speed: 34105.245 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 99.698 [ms], allgather: 37.591 [ms], asnumpy: 10.790 [ms], speed: 33765.616 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 99.698 [ms], allgather: 37.591 [ms], asnumpy: 10.790 [ms], speed: 33765.616 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 97.594 [ms], allgather: 40.287 [ms], asnumpy: 8.230 [ms], speed: 34220.109 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 97.594 [ms], allgather: 40.287 [ms], asnumpy: 8.230 [ms], speed: 34220.109 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 95.761 [ms], allgather: 41.396 [ms], asnumpy: 10.969 [ms], speed: 33754.583 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 95.761 [ms], allgather: 41.396 [ms], asnumpy: 10.969 [ms], speed: 33754.583 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.048 [ms], allgather: 37.040 [ms], asnumpy: 10.734 [ms], speed: 33596.629 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.048 [ms], allgather: 37.040 [ms], asnumpy: 10.734 [ms], speed: 33596.629 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 101.408 [ms], allgather: 38.061 [ms], asnumpy: 9.441 [ms], speed: 33576.942 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 101.408 [ms], allgather: 38.061 [ms], asnumpy: 9.441 [ms], speed: 33576.942 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 95.323 [ms], allgather: 44.397 [ms], asnumpy: 10.087 [ms], speed: 33375.911 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 95.323 [ms], allgather: 44.397 [ms], asnumpy: 10.087 [ms], speed: 33375.911 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 83.194 [ms], allgather: 57.173 [ms], asnumpy: 6.562 [ms], speed: 34029.263 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 83.194 [ms], allgather: 57.173 [ms], asnumpy: 6.562 [ms], speed: 34029.263 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.111 [ms], allgather: 47.933 [ms], asnumpy: 6.632 [ms], speed: 33857.306 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.111 [ms], allgather: 47.933 [ms], asnumpy: 6.632 [ms], speed: 33857.306 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1593100323098, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 66, "current_iter_num": 0}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.526 [ms], allgather: 50.078 [ms], asnumpy: 6.522 [ms], speed: 33304.832 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.526 [ms], allgather: 50.078 [ms], asnumpy: 6.522 [ms], speed: 33304.832 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 84.299 [ms], allgather: 58.423 [ms], asnumpy: 7.304 [ms], speed: 33327.167 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 84.299 [ms], allgather: 58.423 [ms], asnumpy: 7.304 [ms], speed: 33327.167 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 93.644 [ms], allgather: 49.727 [ms], asnumpy: 6.813 [ms], speed: 33291.879 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 93.644 [ms], allgather: 49.727 [ms], asnumpy: 6.813 [ms], speed: 33291.879 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 91.801 [ms], allgather: 50.821 [ms], asnumpy: 7.448 [ms], speed: 33317.319 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 91.801 [ms], allgather: 50.821 [ms], asnumpy: 7.448 [ms], speed: 33317.319 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 81.916 [ms], allgather: 61.592 [ms], asnumpy: 6.727 [ms], speed: 33280.890 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 81.916 [ms], allgather: 61.592 [ms], asnumpy: 6.727 [ms], speed: 33280.890 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 80.937 [ms], allgather: 61.969 [ms], asnumpy: 7.531 [ms], speed: 33236.057 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 80.937 [ms], allgather: 61.969 [ms], asnumpy: 7.531 [ms], speed: 33236.057 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 94.229 [ms], allgather: 55.475 [ms], asnumpy: 7.760 [ms], speed: 31753.092 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 94.229 [ms], allgather: 55.475 [ms], asnumpy: 7.760 [ms], speed: 31753.092 [imgs/sec]
INFO:root:[Validation] save_parameters: 0.003 [ms], inference: 93.941 [ms], allgather: 51.118 [ms], asnumpy: 9.205 [ms], speed: 32411.424 [imgs/sec]
[Validation] save_parameters: 0.003 [ms], inference: 93.941 [ms], allgather: 51.118 [ms], asnumpy: 9.205 [ms], speed: 32411.424 [imgs/sec]
INFO:root:[Training][Iteration 3800][Epoch 66, Batch 30/58] lr: 0.02925, training time: 16.549 [ms], speed: 123753.410 [imgs/sec], loss=1.604
[Training][Iteration 3800][Epoch 66, Batch 30/58] lr: 0.02925, training time: 16.549 [ms], speed: 123753.410 [imgs/sec], loss=1.604
INFO:root:[Training][Epoch 66] training time: 0.974 [sec],avg speed: 126194.054 [imgs/sec],loss=3.573
[Training][Epoch 66] training time: 0.974 [sec],avg speed: 126194.054 [imgs/sec],loss=3.573
:::MLLOG {"namespace": "", "time_ms": 1593100324072, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 66}}
:::MLLOG {"namespace": "", "time_ms": 1593100324072, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 67, "current_iter_num": 0}}
INFO:root:[Training][Epoch 67] training time: 0.635 [sec],avg speed: 128970.541 [imgs/sec],loss=3.302
[Training][Epoch 67] training time: 0.635 [sec],avg speed: 128970.541 [imgs/sec],loss=3.302
:::MLLOG {"namespace": "", "time_ms": 1593100324708, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 67}}
:::MLLOG {"namespace": "", "time_ms": 1593100324708, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 68, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3900][Epoch 68, Batch 14/58] lr: 0.02925, training time: 16.066 [ms], speed: 127476.957 [imgs/sec], loss=4.683
[Training][Iteration 3900][Epoch 68, Batch 14/58] lr: 0.02925, training time: 16.066 [ms], speed: 127476.957 [imgs/sec], loss=4.683
INFO:root:[Training][Epoch 68] training time: 0.968 [sec],avg speed: 126931.246 [imgs/sec],loss=3.334
[Training][Epoch 68] training time: 0.968 [sec],avg speed: 126931.246 [imgs/sec],loss=3.334
:::MLLOG {"namespace": "", "time_ms": 1593100325677, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 68}}
:::MLLOG {"namespace": "", "time_ms": 1593100325677, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 159, "epoch_num": 69, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1593100326008, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 291, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1593100326008, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.23101000654794424, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 294, "epoch_num": 65}}
INFO:root:[Training][Iteration 4000][Epoch 69, Batch 56/58] lr: 0.02925, training time: 16.250 [ms], speed: 126028.875 [imgs/sec], loss=4.336
[Training][Iteration 4000][Epoch 69, Batch 56/58] lr: 0.02925, training time: 16.250 [ms], speed: 126028.875 [imgs/sec], loss=4.336
INFO:root:[Training][Epoch 69] training time: 0.979 [sec],avg speed: 125569.520 [imgs/sec],loss=3.246
[Training][Epoch 69] training time: 0.979 [sec],avg speed: 125569.520 [imgs/sec],loss=3.246
:::MLLOG {"namespace": "", "time_ms": 1593100326656, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 211, "epoch_num": 69}}
:::MLLOG {"namespace": "", "time_ms": 1593100326656, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 520, "status": "success"}}
INFO:root:Rank 0 done. map=23.101000654794422 @ epoch=65
Rank 0 done. map=23.101000654794422 @ epoch=65
INFO:root:Rank 112 done. map=23.101000654794422 @ epoch=-1
Rank 112 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 240 done. map=23.101000654794422 @ epoch=-1
Rank 240 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 976 done. map=23.101000654794422 @ epoch=-1
Rank 976 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 48 done. map=23.101000654794422 @ epoch=-1
Rank 48 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 80 done. map=23.101000654794422 @ epoch=-1
Rank 80 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 752 done. map=23.101000654794422 @ epoch=-1
Rank 752 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 400 done. map=23.101000654794422 @ epoch=-1
Rank 400 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 1008 done. map=23.101000654794422 @ epoch=-1
Rank 1008 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 368 done. map=23.101000654794422 @ epoch=-1
Rank 368 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 432 done. map=23.101000654794422 @ epoch=-1
Rank 432 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 688 done. map=23.101000654794422 @ epoch=-1
Rank 688 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 816 done. map=23.101000654794422 @ epoch=-1
Rank 816 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 656 done. map=23.101000654794422 @ epoch=-1
Rank 656 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 512 done. map=23.101000654794422 @ epoch=-1
Rank 512 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 160 done. map=23.101000654794422 @ epoch=-1
Rank 160 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 128 done. map=23.101000654794422 @ epoch=-1
Rank 128 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 384 done. map=23.101000654794422 @ epoch=-1
Rank 384 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 896 done. map=23.101000654794422 @ epoch=-1
Rank 896 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 256 done. map=23.101000654794422 @ epoch=-1
Rank 256 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 32 done. map=23.101000654794422 @ epoch=-1
Rank 32 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 928 done. map=23.101000654794422 @ epoch=-1
Rank 928 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 416 done. map=23.101000654794422 @ epoch=-1
Rank 416 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 352 done. map=23.101000654794422 @ epoch=-1
Rank 352 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 992 done. map=23.101000654794422 @ epoch=-1
Rank 992 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 640 done. map=23.101000654794422 @ epoch=-1
Rank 640 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 448 done. map=23.101000654794422 @ epoch=-1
Rank 448 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 864 done. map=23.101000654794422 @ epoch=-1
Rank 864 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 224 done. map=23.101000654794422 @ epoch=-1
Rank 224 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 576 done. map=23.101000654794422 @ epoch=-1
Rank 576 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 480 done. map=23.101000654794422 @ epoch=-1
Rank 480 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 560 done. map=23.101000654794422 @ epoch=-1
Rank 560 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 464 done. map=23.101000654794422 @ epoch=-1
Rank 464 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 880 done. map=23.101000654794422 @ epoch=-1
Rank 880 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 336 done. map=23.101000654794422 @ epoch=-1
Rank 336 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 208 done. map=23.101000654794422 @ epoch=-1
Rank 208 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 592 done. map=23.101000654794422 @ epoch=-1
Rank 592 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 144 done. map=23.101000654794422 @ epoch=-1
Rank 144 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 720 done. map=23.101000654794422 @ epoch=-1
Rank 720 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 16 done. map=23.101000654794422 @ epoch=-1
Rank 16 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 272 done. map=23.101000654794422 @ epoch=-1
Rank 272 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 544 done. map=23.101000654794422 @ epoch=-1
Rank 544 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 800 done. map=23.101000654794422 @ epoch=-1
Rank 800 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 672 done. map=23.101000654794422 @ epoch=-1
Rank 672 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 96 done. map=23.101000654794422 @ epoch=-1
Rank 96 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 304 done. map=23.101000654794422 @ epoch=-1
Rank 304 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 624 done. map=23.101000654794422 @ epoch=-1
Rank 624 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 944 done. map=23.101000654794422 @ epoch=-1
Rank 944 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 784 done. map=23.101000654794422 @ epoch=-1
Rank 784 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 704 done. map=23.101000654794422 @ epoch=-1
Rank 704 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 736 done. map=23.101000654794422 @ epoch=-1
Rank 736 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 832 done. map=23.101000654794422 @ epoch=-1
Rank 832 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 288 done. map=23.101000654794422 @ epoch=-1
Rank 288 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 768 done. map=23.101000654794422 @ epoch=-1
Rank 768 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 64 done. map=23.101000654794422 @ epoch=-1
Rank 64 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 608 done. map=23.101000654794422 @ epoch=-1
Rank 608 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 192 done. map=23.101000654794422 @ epoch=-1
Rank 192 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 960 done. map=23.101000654794422 @ epoch=-1
Rank 960 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 320 done. map=23.101000654794422 @ epoch=-1
Rank 320 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 176 done. map=23.101000654794422 @ epoch=-1
Rank 176 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 848 done. map=23.101000654794422 @ epoch=-1
Rank 848 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 912 done. map=23.101000654794422 @ epoch=-1
Rank 912 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 528 done. map=23.101000654794422 @ epoch=-1
Rank 528 done. map=23.101000654794422 @ epoch=-1
INFO:root:Rank 496 done. map=23.101000654794422 @ epoch=-1
Rank 496 done. map=23.101000654794422 @ epoch=-1
loading annotations into memory...
Done (t=0.15s)
creating index...
Loading and preparing results...
DONE (t=0.21s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.11s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16892
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.31210
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.16642
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25488
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18122
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.26465
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27507
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27507
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.48s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.33s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.18579
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.33971
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.18738
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27428
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.19458
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.28146
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.29255
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.29255
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.49s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.39s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.18011
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.32428
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17770
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26334
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18941
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.27018
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27976
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27976
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.43s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.34s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.19170
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.34385
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.19292
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27938
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.19623
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.28544
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.29577
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.29577
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.42s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.39s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23101
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.39193
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.23727
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.31450
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.22167
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.32090
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.33317
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.33317
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:15 AM
RESULT,SINGLE_STAGE_DETECTOR,,141,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:16 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:16 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:16 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:16 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:16 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:16 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:16 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:16 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:16 AM
RESULT,SINGLE_STAGE_DETECTOR,,142,nvidia,2020-06-25 08:49:54 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2020-06-25 08:52:20 AM
RESULT,SINGLE_STAGE_DETECTOR,,146,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
slurmstepd: error: _is_a_lwp: open() /proc/77476/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
slurmstepd: error: _is_a_lwp: open() /proc/75958/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
slurmstepd: error: _is_a_lwp: open() /proc/76721/status failed: No such file or directory
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
slurmstepd: error: _is_a_lwp: 1 read() attempts on /proc/77924/status failed: No such process
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
ENDING TIMING RUN AT 2020-06-25 08:52:21 AM
RESULT,SINGLE_STAGE_DETECTOR,,147,nvidia,2020-06-25 08:49:54 AM
